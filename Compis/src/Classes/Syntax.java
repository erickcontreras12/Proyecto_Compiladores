
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Thu Oct 31 17:23:17 CST 2019
//----------------------------------------------------

package Classes;

import java_cup.runtime.Symbol;
import java.util.List;
import java.util.LinkedList;
import java_cup.runtime.virtual_parse_stack;
import java.lang.reflect.Field;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Thu Oct 31 17:23:17 CST 2019
  */
public class Syntax extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Syntax() {super();}

  /** Constructor which sets the default scanner. */
  public Syntax(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Syntax(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u021a\000\002\002\004\000\002\002\003\000\002\003" +
    "\003\000\002\003\002\000\002\004\005\000\002\004\005" +
    "\000\002\004\005\000\002\004\005\000\002\004\005\000" +
    "\002\004\005\000\002\004\005\000\002\004\005\000\002" +
    "\004\005\000\002\004\005\000\002\004\005\000\002\004" +
    "\005\000\002\004\005\000\002\004\004\000\002\004\006" +
    "\000\002\005\003\000\002\005\003\000\002\005\004\000" +
    "\002\005\003\000\002\005\004\000\002\005\004\000\002" +
    "\005\005\000\002\005\004\000\002\006\004\000\002\006" +
    "\004\000\002\006\004\000\002\006\004\000\002\007\004" +
    "\000\002\007\004\000\002\007\004\000\002\007\004\000" +
    "\002\007\004\000\002\010\003\000\002\010\003\000\002" +
    "\010\003\000\002\010\003\000\002\102\003\000\002\102" +
    "\003\000\002\023\004\000\002\024\005\000\002\024\002" +
    "\000\002\025\004\000\002\025\002\000\002\026\003\000" +
    "\002\026\003\000\002\026\003\000\002\026\003\000\002" +
    "\026\003\000\002\027\004\000\002\027\006\000\002\031" +
    "\005\000\002\031\005\000\002\031\004\000\002\031\004" +
    "\000\002\031\002\000\002\032\004\000\002\032\004\000" +
    "\002\032\002\000\002\033\004\000\002\033\006\000\002" +
    "\034\004\000\002\034\004\000\002\034\002\000\002\035" +
    "\003\000\002\030\003\000\002\030\003\000\002\030\003" +
    "\000\002\030\003\000\002\020\005\000\002\131\004\000" +
    "\002\132\004\000\002\132\002\000\002\011\013\000\002" +
    "\036\004\000\002\037\003\000\002\037\003\000\002\037" +
    "\004\000\002\037\002\000\002\040\003\000\002\040\005" +
    "\000\002\041\005\000\002\042\003\000\002\042\003\000" +
    "\002\042\005\000\002\042\003\000\002\043\004\000\002" +
    "\043\002\000\002\044\003\000\002\044\004\000\002\044" +
    "\003\000\002\045\006\000\002\045\006\000\002\045\006" +
    "\000\002\045\006\000\002\045\006\000\002\045\003\000" +
    "\002\110\006\000\002\110\004\000\002\046\003\000\002" +
    "\046\003\000\002\046\004\000\002\047\004\000\002\047" +
    "\002\000\002\050\004\000\002\050\004\000\002\051\003" +
    "\000\002\051\002\000\002\052\004\000\002\052\002\000" +
    "\002\053\005\000\002\054\004\000\002\054\002\000\002" +
    "\055\004\000\002\055\003\000\002\055\002\000\002\056" +
    "\003\000\002\056\003\000\002\057\013\000\002\057\002" +
    "\000\002\060\003\000\002\060\004\000\002\060\004\000" +
    "\002\060\004\000\002\060\002\000\002\061\003\000\002" +
    "\061\002\000\002\062\003\000\002\063\006\000\002\063" +
    "\002\000\002\064\004\000\002\064\002\000\002\065\005" +
    "\000\002\066\003\000\002\066\003\000\002\066\003\000" +
    "\002\066\003\000\002\070\004\000\002\070\003\000\002" +
    "\067\003\000\002\067\003\000\002\067\003\000\002\067" +
    "\003\000\002\067\003\000\002\067\003\000\002\067\003" +
    "\000\002\067\003\000\002\071\006\000\002\071\006\000" +
    "\002\071\004\000\002\071\005\000\002\104\004\000\002" +
    "\105\004\000\002\105\002\000\002\072\006\000\002\072" +
    "\002\000\002\073\005\000\002\073\002\000\002\074\004" +
    "\000\002\074\002\000\002\075\006\000\002\076\004\000" +
    "\002\076\002\000\002\077\007\000\002\077\002\000\002" +
    "\100\005\000\002\100\002\000\002\101\003\000\002\101" +
    "\003\000\002\101\002\000\002\103\003\000\002\103\003" +
    "\000\002\021\004\000\002\133\003\000\002\133\003\000" +
    "\002\133\003\000\002\133\003\000\002\133\003\000\002" +
    "\133\003\000\002\134\004\000\002\134\002\000\002\135" +
    "\005\000\002\136\005\000\002\137\004\000\002\140\004" +
    "\000\002\140\002\000\002\141\005\000\002\142\006\000" +
    "\002\143\004\000\002\143\002\000\002\144\005\000\002" +
    "\145\004\000\002\146\004\000\002\146\002\000\002\150" +
    "\005\000\002\151\003\000\002\151\003\000\002\147\005" +
    "\000\002\012\007\000\002\111\003\000\002\111\002\000" +
    "\002\112\005\000\002\112\002\000\002\113\004\000\002" +
    "\114\004\000\002\114\002\000\002\115\004\000\002\115" +
    "\004\000\002\116\006\000\002\117\004\000\002\117\002" +
    "\000\002\120\004\000\002\121\004\000\002\121\002\000" +
    "\002\013\012\000\002\122\004\000\002\124\006\000\002" +
    "\124\002\000\002\123\003\000\002\123\003\000\002\123" +
    "\003\000\002\125\005\000\002\125\002\000\002\126\003" +
    "\000\002\126\002\000\002\014\007\000\002\130\003\000" +
    "\002\130\002\000\002\127\005\000\002\127\002\000\002" +
    "\152\010\000\002\156\003\000\002\156\003\000\002\157" +
    "\005\000\002\157\002\000\002\160\003\000\002\160\002" +
    "\000\002\165\004\000\002\165\004\000\002\166\003\000" +
    "\002\166\002\000\002\167\003\000\002\167\003\000\002" +
    "\153\006\000\002\161\004\000\002\161\002\000\002\162" +
    "\003\000\002\162\004\000\002\162\002\000\002\163\010" +
    "\000\002\163\002\000\002\164\003\000\002\164\003\000" +
    "\002\154\006\000\002\155\006\000\002\213\003\000\002" +
    "\213\003\000\002\170\011\000\002\171\004\000\002\171" +
    "\002\000\002\172\006\000\002\172\002\000\002\173\005" +
    "\000\002\173\005\000\002\173\004\000\002\174\003\000" +
    "\002\174\003\000\002\175\004\000\002\175\002\000\002" +
    "\176\003\000\002\176\002\000\002\177\004\000\002\177" +
    "\002\000\002\200\004\000\002\200\002\000\002\201\004" +
    "\000\002\202\003\000\002\202\003\000\002\202\005\000" +
    "\002\203\004\000\002\203\002\000\002\204\003\000\002" +
    "\204\003\000\002\205\003\000\002\205\003\000\002\205" +
    "\003\000\002\205\003\000\002\205\003\000\002\206\004" +
    "\000\002\206\002\000\002\207\006\000\002\210\004\000" +
    "\002\211\003\000\002\211\002\000\002\214\014\000\002" +
    "\215\003\000\002\215\002\000\002\216\011\000\002\217" +
    "\004\000\002\217\002\000\002\220\003\000\002\220\002" +
    "\000\002\221\003\000\002\221\002\000\002\222\004\000" +
    "\002\222\002\000\002\223\004\000\002\224\004\000\002" +
    "\224\002\000\002\225\003\000\002\225\003\000\002\225" +
    "\005\000\002\225\005\000\002\225\004\000\002\225\004" +
    "\000\002\226\005\000\002\227\007\000\002\230\004\000" +
    "\002\230\006\000\002\231\003\000\002\231\004\000\002" +
    "\022\017\000\002\232\003\000\002\232\003\000\002\232" +
    "\002\000\002\233\003\000\002\233\003\000\002\233\002" +
    "\000\002\234\003\000\002\234\003\000\002\234\003\000" +
    "\002\234\003\000\002\234\002\000\002\235\003\000\002" +
    "\235\003\000\002\235\003\000\002\235\002\000\002\236" +
    "\003\000\002\236\002\000\002\237\003\000\002\237\002" +
    "\000\002\240\003\000\002\240\002\000\002\241\005\000" +
    "\002\241\002\000\002\242\004\000\002\242\002\000\002" +
    "\243\004\000\002\244\004\000\002\244\002\000\002\015" +
    "\004\000\002\016\005\000\002\245\004\000\002\245\002" +
    "\000\002\246\004\000\002\246\006\000\002\246\004\000" +
    "\002\246\004\000\002\246\004\000\002\323\003\000\002" +
    "\323\003\000\002\247\004\000\002\252\005\000\002\252" +
    "\004\000\002\252\002\000\002\250\003\000\002\250\002" +
    "\000\002\253\015\000\002\254\004\000\002\254\002\000" +
    "\002\324\003\000\002\324\003\000\002\255\003\000\002" +
    "\255\003\000\002\255\003\000\002\256\005\000\002\256" +
    "\002\000\002\257\003\000\002\257\003\000\002\257\003" +
    "\000\002\260\003\000\002\261\006\000\002\262\003\000" +
    "\002\262\003\000\002\262\003\000\002\262\003\000\002" +
    "\262\002\000\002\263\005\000\002\264\004\000\002\264" +
    "\002\000\002\265\006\000\002\266\003\000\002\266\003" +
    "\000\002\267\003\000\002\267\002\000\002\270\011\000" +
    "\002\271\004\000\002\273\004\000\002\273\002\000\002" +
    "\272\004\000\002\274\006\000\002\274\002\000\002\275" +
    "\007\000\002\276\004\000\002\300\004\000\002\300\002" +
    "\000\002\277\005\000\002\277\005\000\002\277\006\000" +
    "\002\277\014\000\002\301\006\000\002\301\006\000\002" +
    "\301\006\000\002\301\003\000\002\301\003\000\002\301" +
    "\003\000\002\301\006\000\002\301\003\000\002\301\003" +
    "\000\002\301\003\000\002\301\003\000\002\301\003\000" +
    "\002\301\003\000\002\301\003\000\002\301\006\000\002" +
    "\301\003\000\002\301\003\000\002\301\003\000\002\301" +
    "\004\000\002\301\010\000\002\301\010\000\002\331\005" +
    "\000\002\331\002\000\002\302\004\000\002\302\002\000" +
    "\002\304\003\000\002\303\003\000\002\303\004\000\002" +
    "\303\006\000\002\303\014\000\002\303\004\000\002\303" +
    "\006\000\002\303\004\000\002\303\010\000\002\327\005" +
    "\000\002\327\002\000\002\330\003\000\002\330\003\000" +
    "\002\330\002\000\002\325\005\000\002\326\004\000\002" +
    "\326\002\000\002\305\004\000\002\307\004\000\002\307" +
    "\002\000\002\306\004\000\002\251\004\000\002\251\002" +
    "\000\002\310\005\000\002\311\005\000\002\311\002\000" +
    "\002\312\003\000\002\312\003\000\002\313\004\000\002" +
    "\313\002\000\002\314\004\000\002\315\004\000\002\315" +
    "\002\000\002\316\005\000\002\316\005\000\002\317\006" +
    "\000\002\320\004\000\002\320\002\000\002\322\005\000" +
    "\002\322\002\000\002\321\003\000\002\017\004\000\002" +
    "\332\004\000\002\332\004\000\002\332\004\000\002\332" +
    "\004\000\002\332\004\000\002\332\003\000\002\332\003" +
    "\000\002\333\004\000\002\334\003\000\002\334\003\000" +
    "\002\335\006\000\002\335\004\000\002\335\005\000\002" +
    "\336\006\000\002\337\003\000\002\337\003\000\002\340" +
    "\003\000\002\340\003\000\002\340\003\000\002\340\003" +
    "\000\002\341\004\000\002\342\005\000\002\342\004\000" +
    "\002\342\004\000\002\343\006\000\002\343\003\000\002" +
    "\343\014\000\002\346\004\000\002\344\004\000\002\344" +
    "\002\000\002\345\005\000\002\347\004\000\002\347\004" +
    "\000\002\347\004\000\002\354\003\000\002\354\004\000" +
    "\002\354\006\000\002\354\014\000\002\354\004\000\002" +
    "\354\006\000\002\354\004\000\002\354\010\000\002\350" +
    "\003\000\002\350\005\000\002\351\004\000\002\353\004" +
    "\000\002\353\002\000\002\352\005\000\002\352\005\000" +
    "\002\352\003\000\002\352\005\000\002\352\005\000\002" +
    "\212\005\000\002\107\004\000\002\107\005\000\002\107" +
    "\002\000\002\106\004\000\002\106\002" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u03dd\000\042\002\ufffe\003\033\054\026\055\040\056" +
    "\037\057\010\060\025\061\030\062\011\063\032\143\024" +
    "\233\004\234\042\236\035\240\022\247\041\001\002\000" +
    "\006\011\ufee5\165\ufee5\001\002\000\012\033\303\143\304" +
    "\314\302\315\306\001\002\000\012\033\303\143\304\314" +
    "\302\315\306\001\002\000\012\033\303\143\304\314\302" +
    "\315\306\001\002\000\040\004\uffb0\005\uffb0\006\uffb0\011" +
    "\uffb0\016\uffb0\040\uffb0\047\uffb0\105\u0363\160\u0365\166\u0361" +
    "\202\uffb0\203\uffb0\204\uffb0\205\uffb0\206\uffb0\001\002\000" +
    "\004\072\u035f\001\002\000\004\002\uffff\001\002\000\012" +
    "\033\303\143\304\314\302\315\306\001\002\000\012\033" +
    "\303\143\304\314\302\315\306\001\002\000\012\033\303" +
    "\143\304\314\302\315\306\001\002\000\012\033\303\143" +
    "\304\314\302\315\306\001\002\000\012\033\303\143\304" +
    "\314\302\315\306\001\002\000\004\002\000\001\002\000" +
    "\012\033\303\143\304\314\302\315\306\001\002\000\006" +
    "\242\322\243\320\001\002\000\004\002\u0340\001\002\000" +
    "\042\002\ufffe\003\033\054\026\055\040\056\037\057\010" +
    "\060\025\061\030\062\011\063\032\143\024\233\004\234" +
    "\042\236\035\240\022\247\041\001\002\000\032\031\u02bb" +
    "\067\u02b5\070\ufe74\071\u02b6\072\u02b8\073\u02b9\116\u02b7\207" +
    "\ufe74\210\ufe74\227\ufe9d\230\ufe9d\316\ufe9d\001\002\000\006" +
    "\011\uff36\064\u029a\001\002\000\004\011\112\001\002\000" +
    "\022\067\u011d\070\u011c\071\u011e\072\u0120\073\u0121\227\356" +
    "\230\u0124\316\361\001\002\000\012\033\303\143\304\314" +
    "\302\315\306\001\002\000\022\067\351\070\352\071\354" +
    "\072\362\073\363\227\356\230\366\316\361\001\002\000" +
    "\012\033\303\143\304\314\302\315\306\001\002\000\006" +
    "\244\315\245\316\001\002\000\004\011\112\001\002\000" +
    "\012\033\303\143\304\314\302\315\306\001\002\000\006" +
    "\011\uff20\160\214\001\002\000\010\011\uff19\160\106\162" +
    "\uff19\001\002\000\004\011\043\001\002\000\006\011\ufee4" +
    "\165\ufee4\001\002\000\010\251\ufea8\300\ufea8\311\045\001" +
    "\002\000\006\251\ufeaa\300\047\001\002\000\006\251\ufea9" +
    "\300\ufea9\001\002\000\004\251\050\001\002\000\004\251" +
    "\ufeab\001\002\000\034\211\ufeba\271\ufeba\272\ufeba\273\ufeba" +
    "\274\ufeba\275\ufeba\276\ufeba\277\ufeba\300\ufeba\301\ufeba\302" +
    "\ufeba\304\052\305\051\001\002\000\030\211\ufebb\271\ufebb" +
    "\272\ufebb\273\ufebb\274\ufebb\275\ufebb\276\ufebb\277\ufebb\300" +
    "\ufebb\301\ufebb\302\ufebb\001\002\000\030\211\ufebc\271\ufebc" +
    "\272\ufebc\273\ufebc\274\ufebc\275\ufebc\276\ufebc\277\ufebc\300" +
    "\ufebc\301\ufebc\302\ufebc\001\002\000\030\211\ufeb7\271\ufeb7" +
    "\272\054\273\ufeb7\274\ufeb7\275\ufeb7\276\ufeb7\277\ufeb7\300" +
    "\056\301\ufeb7\302\ufeb7\001\002\000\024\211\ufeb9\271\ufeb9" +
    "\273\ufeb9\274\ufeb9\275\ufeb9\276\ufeb9\277\ufeb9\301\ufeb9\302" +
    "\ufeb9\001\002\000\024\211\ufeb2\271\057\273\060\274\063" +
    "\275\061\276\ufeb2\277\ufeb2\301\ufeb2\302\ufeb2\001\002\000" +
    "\024\211\ufeb8\271\ufeb8\273\ufeb8\274\ufeb8\275\ufeb8\276\ufeb8" +
    "\277\ufeb8\301\ufeb8\302\ufeb8\001\002\000\014\211\ufeb6\276" +
    "\ufeb6\277\ufeb6\301\ufeb6\302\ufeb6\001\002\000\014\211\ufeb5" +
    "\276\ufeb5\277\ufeb5\301\ufeb5\302\ufeb5\001\002\000\014\211" +
    "\ufeb4\276\ufeb4\277\ufeb4\301\ufeb4\302\ufeb4\001\002\000\014" +
    "\211\ufeae\276\067\277\065\301\066\302\ufeae\001\002\000" +
    "\014\211\ufeb3\276\ufeb3\277\ufeb3\301\ufeb3\302\ufeb3\001\002" +
    "\000\006\211\ufeac\302\071\001\002\000\006\211\ufeb0\302" +
    "\ufeb0\001\002\000\006\211\ufeaf\302\ufeaf\001\002\000\006" +
    "\211\ufeb1\302\ufeb1\001\002\000\004\211\072\001\002\000" +
    "\004\211\ufead\001\002\000\004\057\010\001\002\000\014" +
    "\033\ufea6\143\ufea6\211\075\314\ufea6\315\ufea6\001\002\000" +
    "\012\033\ufebd\143\ufebd\314\ufebd\315\ufebd\001\002\000\004" +
    "\056\076\001\002\000\014\033\ufea4\051\100\143\ufea4\314" +
    "\ufea4\315\ufea4\001\002\000\012\033\ufea7\143\ufea7\314\ufea7" +
    "\315\ufea7\001\002\000\004\011\101\001\002\000\014\033" +
    "\ufea1\034\103\143\ufea1\314\ufea1\315\ufea1\001\002\000\012" +
    "\033\ufea5\143\ufea5\314\ufea5\315\ufea5\001\002\000\004\011" +
    "\101\001\002\000\012\033\ufea3\143\ufea3\314\ufea3\315\ufea3" +
    "\001\002\000\012\033\ufea2\143\ufea2\314\ufea2\315\ufea2\001" +
    "\002\000\010\004\204\005\207\040\205\001\002\000\006" +
    "\011\uff1b\162\110\001\002\000\004\011\uff1c\001\002\000" +
    "\004\011\112\001\002\000\252\004\uffd5\005\uffd5\006\uffd5" +
    "\007\uffd5\011\uffd5\014\uffd5\015\uffd5\016\uffd5\017\uffd5\021" +
    "\uffd5\022\uffd5\023\uffd5\024\uffd5\025\uffd5\026\uffd5\027\uffd5" +
    "\033\uffd5\034\uffd5\035\175\040\uffd5\041\uffd5\045\uffd5\047" +
    "\uffd5\061\uffd5\063\uffd5\065\uffd5\066\uffd5\077\uffd5\101\uffd5" +
    "\102\uffd5\103\uffd5\104\uffd5\106\uffd5\110\uffd5\111\uffd5\114" +
    "\uffd5\116\uffd5\117\uffd5\120\uffd5\121\uffd5\122\uffd5\123\uffd5" +
    "\124\uffd5\125\uffd5\126\uffd5\127\uffd5\130\uffd5\131\uffd5\132" +
    "\uffd5\133\uffd5\134\uffd5\135\uffd5\136\uffd5\137\uffd5\140\uffd5" +
    "\141\uffd5\142\uffd5\143\uffd5\144\uffd5\145\uffd5\146\uffd5\150" +
    "\uffd5\154\uffd5\155\uffd5\162\uffd5\163\uffd5\164\uffd5\165\uffd5" +
    "\167\uffd5\170\uffd5\171\uffd5\172\uffd5\173\uffd5\174\uffd5\176" +
    "\uffd5\177\uffd5\200\uffd5\201\uffd5\211\uffd5\306\uffd5\312\uffd5" +
    "\314\uffd5\315\uffd5\317\uffd5\001\002\000\014\033\uff7d\143" +
    "\uff7d\163\115\314\uff7d\315\uff7d\001\002\000\012\033\uff1d" +
    "\143\uff1d\314\uff1d\315\uff1d\001\002\000\004\011\112\001" +
    "\002\000\030\021\120\022\121\023\124\024\131\025\125" +
    "\026\127\027\132\110\117\142\123\144\133\312\134\001" +
    "\002\000\004\040\166\001\002\000\016\004\uff73\005\uff73" +
    "\006\uff73\007\uff73\047\uff73\111\uff73\001\002\000\016\004" +
    "\uff71\005\uff71\006\uff71\007\uff71\047\uff71\111\uff71\001\002" +
    "\000\016\004\154\005\157\006\156\007\152\047\164\111" +
    "\155\001\002\000\014\004\154\005\157\006\156\007\152" +
    "\111\155\001\002\000\016\004\uff72\005\uff72\006\uff72\007" +
    "\uff72\047\uff72\111\uff72\001\002\000\016\004\uff6d\005\uff6d" +
    "\006\uff6d\007\uff6d\047\uff6d\111\uff6d\001\002\000\034\030" +
    "\uff74\031\uff74\033\uff74\041\uff74\143\uff74\152\uff74\153\uff74" +
    "\171\uff74\172\uff74\173\uff74\211\uff74\314\uff74\315\uff74\001" +
    "\002\000\016\004\uff6e\005\uff6e\006\uff6e\007\uff6e\047\uff6e" +
    "\111\uff6e\001\002\000\032\030\141\031\145\033\uff7b\143" +
    "\uff7b\152\142\153\144\171\uff7b\172\uff7b\173\uff7b\211\uff7b" +
    "\314\uff7b\315\uff7b\001\002\000\016\004\uff70\005\uff70\006" +
    "\uff70\007\uff70\047\uff70\111\uff70\001\002\000\016\004\uff6f" +
    "\005\uff6f\006\uff6f\007\uff6f\047\uff6f\111\uff6f\001\002\000" +
    "\016\004\uff6c\005\uff6c\006\uff6c\007\uff6c\047\uff6c\111\uff6c" +
    "\001\002\000\006\111\136\145\135\001\002\000\004\111" +
    "\137\001\002\000\034\030\uff69\031\uff69\033\uff69\041\uff69" +
    "\143\uff69\152\uff69\153\uff69\171\uff69\172\uff69\173\uff69\211" +
    "\uff69\314\uff69\315\uff69\001\002\000\034\030\uff68\031\uff68" +
    "\033\uff68\041\uff68\143\uff68\152\uff68\153\uff68\171\uff68\172" +
    "\uff68\173\uff68\211\uff68\314\uff68\315\uff68\001\002\000\022" +
    "\033\uff7e\143\uff7e\171\uff7e\172\uff7e\173\uff7e\211\uff7e\314" +
    "\uff7e\315\uff7e\001\002\000\016\011\uff79\202\uff79\203\uff79" +
    "\204\uff79\205\uff79\206\uff79\001\002\000\016\011\uff77\202" +
    "\uff77\203\uff77\204\uff77\205\uff77\206\uff77\001\002\000\004" +
    "\011\112\001\002\000\016\011\uff76\202\uff76\203\uff76\204" +
    "\uff76\205\uff76\206\uff76\001\002\000\016\011\uff78\202\uff78" +
    "\203\uff78\204\uff78\205\uff78\206\uff78\001\002\000\030\021" +
    "\120\022\121\023\124\024\131\025\125\026\127\027\132" +
    "\110\117\142\123\144\133\312\134\001\002\000\022\033" +
    "\uff7c\143\uff7c\171\uff7c\172\uff7c\173\uff7c\211\uff7c\314\uff7c" +
    "\315\uff7c\001\002\000\032\030\141\031\145\033\uff7b\143" +
    "\uff7b\152\142\153\144\171\uff7b\172\uff7b\173\uff7b\211\uff7b" +
    "\314\uff7b\315\uff7b\001\002\000\022\033\uff7a\143\uff7a\171" +
    "\uff7a\172\uff7a\173\uff7a\211\uff7a\314\uff7a\315\uff7a\001\002" +
    "\000\040\030\uffd2\031\uffd2\033\uffd2\034\uffd2\041\uffd2\143" +
    "\uffd2\152\uffd2\153\uffd2\171\uffd2\172\uffd2\173\uffd2\211\uffd2" +
    "\241\uffd2\314\uffd2\315\uffd2\001\002\000\004\030\160\001" +
    "\002\000\040\030\uffcf\031\uffcf\033\uffcf\034\uffcf\041\uffcf" +
    "\143\uffcf\152\uffcf\153\uffcf\171\uffcf\172\uffcf\173\uffcf\211" +
    "\uffcf\241\uffcf\314\uffcf\315\uffcf\001\002\000\040\030\uffd1" +
    "\031\uffd1\033\uffd1\034\uffd1\041\uffd1\143\uffd1\152\uffd1\153" +
    "\uffd1\171\uffd1\172\uffd1\173\uffd1\211\uffd1\241\uffd1\314\uffd1" +
    "\315\uffd1\001\002\000\040\030\uffce\031\uffce\033\uffce\034" +
    "\uffce\041\uffce\143\uffce\152\uffce\153\uffce\171\uffce\172\uffce" +
    "\173\uffce\211\uffce\241\uffce\314\uffce\315\uffce\001\002\000" +
    "\040\030\uffd0\031\uffd0\033\uffd0\034\uffd0\041\uffd0\143\uffd0" +
    "\152\uffd0\153\uffd0\171\uffd0\172\uffd0\173\uffd0\211\uffd0\241" +
    "\uffd0\314\uffd0\315\uffd0\001\002\000\014\004\154\005\157" +
    "\006\156\007\152\111\155\001\002\000\034\030\uff6a\031" +
    "\uff6a\033\uff6a\041\uff6a\143\uff6a\152\uff6a\153\uff6a\171\uff6a" +
    "\172\uff6a\173\uff6a\211\uff6a\314\uff6a\315\uff6a\001\002\000" +
    "\034\030\uff75\031\uff75\033\uff75\041\uff75\143\uff75\152\uff75" +
    "\153\uff75\171\uff75\172\uff75\173\uff75\211\uff75\314\uff75\315" +
    "\uff75\001\002\000\036\030\ufebf\031\ufebf\033\ufebf\041\ufebf" +
    "\143\ufebf\152\ufebf\153\ufebf\171\ufebf\172\ufebf\173\ufebf\211" +
    "\ufebf\241\ufebf\314\ufebf\315\ufebf\001\002\000\004\011\165" +
    "\001\002\000\036\030\ufebe\031\ufebe\033\ufebe\041\ufebe\143" +
    "\ufebe\152\ufebe\153\ufebe\171\ufebe\172\ufebe\173\ufebe\211\ufebe" +
    "\241\ufebe\314\ufebe\315\ufebe\001\002\000\014\004\154\005" +
    "\157\006\156\007\152\111\155\001\002\000\004\041\174" +
    "\001\002\000\006\034\171\041\uff65\001\002\000\014\004" +
    "\154\005\157\006\156\007\152\111\155\001\002\000\004" +
    "\041\uff67\001\002\000\004\041\uff66\001\002\000\034\030" +
    "\uff6b\031\uff6b\033\uff6b\041\uff6b\143\uff6b\152\uff6b\153\uff6b" +
    "\171\uff6b\172\uff6b\173\uff6b\211\uff6b\314\uff6b\315\uff6b\001" +
    "\002\000\004\011\177\001\002\000\250\004\uffd7\005\uffd7" +
    "\006\uffd7\007\uffd7\011\uffd7\014\uffd7\015\uffd7\016\uffd7\017" +
    "\uffd7\021\uffd7\022\uffd7\023\uffd7\024\uffd7\025\uffd7\026\uffd7" +
    "\027\uffd7\033\uffd7\034\uffd7\040\uffd7\041\uffd7\045\uffd7\047" +
    "\uffd7\061\uffd7\063\uffd7\065\uffd7\066\uffd7\077\uffd7\101\uffd7" +
    "\102\uffd7\103\uffd7\104\uffd7\106\uffd7\110\uffd7\111\uffd7\114" +
    "\uffd7\116\uffd7\117\uffd7\120\uffd7\121\uffd7\122\uffd7\123\uffd7" +
    "\124\uffd7\125\uffd7\126\uffd7\127\uffd7\130\uffd7\131\uffd7\132" +
    "\uffd7\133\uffd7\134\uffd7\135\uffd7\136\uffd7\137\uffd7\140\uffd7" +
    "\141\uffd7\142\uffd7\143\uffd7\144\uffd7\145\uffd7\146\uffd7\150" +
    "\uffd7\154\uffd7\155\uffd7\162\uffd7\163\uffd7\164\uffd7\165\uffd7" +
    "\167\uffd7\170\uffd7\171\uffd7\172\uffd7\173\uffd7\174\uffd7\176" +
    "\uffd7\177\uffd7\200\uffd7\201\uffd7\211\uffd7\306\uffd7\312\uffd7" +
    "\314\uffd7\315\uffd7\317\uffd7\001\002\000\252\004\uffd3\005" +
    "\uffd3\006\uffd3\007\uffd3\011\uffd3\014\uffd3\015\uffd3\016\uffd3" +
    "\017\uffd3\021\uffd3\022\uffd3\023\uffd3\024\uffd3\025\uffd3\026" +
    "\uffd3\027\uffd3\033\uffd3\034\uffd3\035\200\040\uffd3\041\uffd3" +
    "\045\uffd3\047\uffd3\061\uffd3\063\uffd3\065\uffd3\066\uffd3\077" +
    "\uffd3\101\uffd3\102\uffd3\103\uffd3\104\uffd3\106\uffd3\110\uffd3" +
    "\111\uffd3\114\uffd3\116\uffd3\117\uffd3\120\uffd3\121\uffd3\122" +
    "\uffd3\123\uffd3\124\uffd3\125\uffd3\126\uffd3\127\uffd3\130\uffd3" +
    "\131\uffd3\132\uffd3\133\uffd3\134\uffd3\135\uffd3\136\uffd3\137" +
    "\uffd3\140\uffd3\141\uffd3\142\uffd3\143\uffd3\144\uffd3\145\uffd3" +
    "\146\uffd3\150\uffd3\154\uffd3\155\uffd3\162\uffd3\163\uffd3\164" +
    "\uffd3\165\uffd3\167\uffd3\170\uffd3\171\uffd3\172\uffd3\173\uffd3" +
    "\174\uffd3\176\uffd3\177\uffd3\200\uffd3\201\uffd3\211\uffd3\306" +
    "\uffd3\312\uffd3\314\uffd3\315\uffd3\317\uffd3\001\002\000\004" +
    "\011\202\001\002\000\250\004\uffd6\005\uffd6\006\uffd6\007" +
    "\uffd6\011\uffd6\014\uffd6\015\uffd6\016\uffd6\017\uffd6\021\uffd6" +
    "\022\uffd6\023\uffd6\024\uffd6\025\uffd6\026\uffd6\027\uffd6\033" +
    "\uffd6\034\uffd6\040\uffd6\041\uffd6\045\uffd6\047\uffd6\061\uffd6" +
    "\063\uffd6\065\uffd6\066\uffd6\077\uffd6\101\uffd6\102\uffd6\103" +
    "\uffd6\104\uffd6\106\uffd6\110\uffd6\111\uffd6\114\uffd6\116\uffd6" +
    "\117\uffd6\120\uffd6\121\uffd6\122\uffd6\123\uffd6\124\uffd6\125" +
    "\uffd6\126\uffd6\127\uffd6\130\uffd6\131\uffd6\132\uffd6\133\uffd6" +
    "\134\uffd6\135\uffd6\136\uffd6\137\uffd6\140\uffd6\141\uffd6\142" +
    "\uffd6\143\uffd6\144\uffd6\145\uffd6\146\uffd6\150\uffd6\154\uffd6" +
    "\155\uffd6\162\uffd6\163\uffd6\164\uffd6\165\uffd6\167\uffd6\170" +
    "\uffd6\171\uffd6\172\uffd6\173\uffd6\174\uffd6\176\uffd6\177\uffd6" +
    "\200\uffd6\201\uffd6\211\uffd6\306\uffd6\312\uffd6\314\uffd6\315" +
    "\uffd6\317\uffd6\001\002\000\250\004\uffd4\005\uffd4\006\uffd4" +
    "\007\uffd4\011\uffd4\014\uffd4\015\uffd4\016\uffd4\017\uffd4\021" +
    "\uffd4\022\uffd4\023\uffd4\024\uffd4\025\uffd4\026\uffd4\027\uffd4" +
    "\033\uffd4\034\uffd4\040\uffd4\041\uffd4\045\uffd4\047\uffd4\061" +
    "\uffd4\063\uffd4\065\uffd4\066\uffd4\077\uffd4\101\uffd4\102\uffd4" +
    "\103\uffd4\104\uffd4\106\uffd4\110\uffd4\111\uffd4\114\uffd4\116" +
    "\uffd4\117\uffd4\120\uffd4\121\uffd4\122\uffd4\123\uffd4\124\uffd4" +
    "\125\uffd4\126\uffd4\127\uffd4\130\uffd4\131\uffd4\132\uffd4\133" +
    "\uffd4\134\uffd4\135\uffd4\136\uffd4\137\uffd4\140\uffd4\141\uffd4" +
    "\142\uffd4\143\uffd4\144\uffd4\145\uffd4\146\uffd4\150\uffd4\154" +
    "\uffd4\155\uffd4\162\uffd4\163\uffd4\164\uffd4\165\uffd4\167\uffd4" +
    "\170\uffd4\171\uffd4\172\uffd4\173\uffd4\174\uffd4\176\uffd4\177" +
    "\uffd4\200\uffd4\201\uffd4\211\uffd4\306\uffd4\312\uffd4\314\uffd4" +
    "\315\uffd4\317\uffd4\001\002\000\036\004\uffaf\005\uffaf\006" +
    "\uffaf\011\uffaf\016\uffaf\040\uffaf\047\uffaf\161\uffaf\162\uffaf" +
    "\202\uffaf\203\uffaf\204\uffaf\205\uffaf\206\uffaf\001\002\000" +
    "\062\004\uffd8\005\uffd8\006\uffd8\011\uffd8\016\uffd8\020\uffd8" +
    "\034\uffd8\040\uffd8\041\uffd8\047\uffd8\106\uffd8\161\uffd8\162" +
    "\uffd8\165\uffd8\202\uffd8\203\uffd8\204\uffd8\205\uffd8\206\uffd8" +
    "\211\uffd8\222\uffd8\223\uffd8\224\uffd8\225\uffd8\001\002\000" +
    "\006\004\204\005\207\001\002\000\010\011\uff1e\161\211" +
    "\162\uff1e\001\002\000\062\004\uffd9\005\uffd9\006\uffd9\011" +
    "\uffd9\016\uffd9\020\uffd9\034\uffd9\040\uffd9\041\uffd9\047\uffd9" +
    "\106\uffd9\161\uffd9\162\uffd9\165\uffd9\202\uffd9\203\uffd9\204" +
    "\uffd9\205\uffd9\206\uffd9\211\uffd9\222\uffd9\223\uffd9\224\uffd9" +
    "\225\uffd9\001\002\000\006\011\uff1a\162\uff1a\001\002\000" +
    "\006\011\uff1f\162\uff1f\001\002\000\004\041\213\001\002" +
    "\000\036\004\uffae\005\uffae\006\uffae\011\uffae\016\uffae\040" +
    "\uffae\047\uffae\161\uffae\162\uffae\202\uffae\203\uffae\204\uffae" +
    "\205\uffae\206\uffae\001\002\000\010\004\204\005\207\040" +
    "\205\001\002\000\004\011\112\001\002\000\004\164\217" +
    "\001\002\000\004\011\112\001\002\000\004\025\221\001" +
    "\002\000\020\004\224\005\223\006\233\007\227\011\112" +
    "\040\232\111\225\001\002\000\016\033\uff25\034\273\143" +
    "\uff25\163\uff25\314\uff25\315\uff25\001\002\000\034\014\uffbd" +
    "\015\uffbd\016\uffbd\017\uffbd\033\uffbd\034\uffbd\041\uffbd\143" +
    "\uffbd\162\uffbd\163\uffbd\165\uffbd\314\uffbd\315\uffbd\001\002" +
    "\000\034\014\uffbc\015\uffbc\016\uffbc\017\uffbc\033\uffbc\034" +
    "\uffbc\041\uffbc\143\uffbc\162\uffbc\163\uffbc\165\uffbc\314\uffbc" +
    "\315\uffbc\001\002\000\016\033\uff22\034\uff22\143\uff22\163" +
    "\uff22\314\uff22\315\uff22\001\002\000\034\014\241\015\243" +
    "\016\242\017\244\033\uffc7\034\uffc7\041\uffc7\143\uffc7\162" +
    "\uffc7\163\uffc7\165\uffc7\314\uffc7\315\uffc7\001\002\000\016" +
    "\033\uff24\034\uff24\143\uff24\163\uff24\314\uff24\315\uff24\001" +
    "\002\000\014\033\uff7d\143\uff7d\163\115\314\uff7d\315\uff7d" +
    "\001\002\000\016\033\uff23\034\uff23\143\uff23\163\uff23\314" +
    "\uff23\315\uff23\001\002\000\014\004\224\005\223\006\233" +
    "\011\112\040\232\001\002\000\034\014\uffbb\015\uffbb\016" +
    "\uffbb\017\uffbb\033\uffbb\034\uffbb\041\uffbb\143\uffbb\162\uffbb" +
    "\163\uffbb\165\uffbb\314\uffbb\315\uffbb\001\002\000\034\014" +
    "\uffba\015\uffba\016\uffba\017\uffba\033\uffba\034\uffba\041\uffba" +
    "\143\uffba\162\uffba\163\uffba\165\uffba\314\uffba\315\uffba\001" +
    "\002\000\004\041\236\001\002\000\034\014\uffbe\015\uffbe" +
    "\016\uffbe\017\uffbe\033\uffbe\034\uffbe\041\uffbe\143\uffbe\162" +
    "\uffbe\163\uffbe\165\uffbe\314\uffbe\315\uffbe\001\002\000\034" +
    "\014\241\015\243\016\242\017\244\033\uffc7\034\uffc7\041" +
    "\uffc7\143\uffc7\162\uffc7\163\uffc7\165\uffc7\314\uffc7\315\uffc7" +
    "\001\002\000\024\033\uffcc\034\uffcc\041\uffcc\143\uffcc\162" +
    "\uffcc\163\uffcc\165\uffcc\314\uffcc\315\uffcc\001\002\000\014" +
    "\004\224\005\223\006\233\011\112\040\232\001\002\000" +
    "\014\004\224\005\223\006\233\011\112\040\247\001\002" +
    "\000\014\004\224\005\223\006\233\011\112\040\232\001" +
    "\002\000\014\004\224\005\223\006\233\011\112\040\247" +
    "\001\002\000\030\014\260\015\261\033\uffc4\034\uffc4\041" +
    "\uffc4\143\uffc4\162\uffc4\163\uffc4\165\uffc4\314\uffc4\315\uffc4" +
    "\001\002\000\034\014\uffbf\015\uffbf\016\253\017\254\033" +
    "\uffbf\034\uffbf\041\uffbf\143\uffbf\162\uffbf\163\uffbf\165\uffbf" +
    "\314\uffbf\315\uffbf\001\002\000\014\004\224\005\223\006" +
    "\233\011\112\040\232\001\002\000\004\041\236\001\002" +
    "\000\034\014\uffbf\015\uffbf\016\253\017\254\033\uffbf\034" +
    "\uffbf\041\uffbf\143\uffbf\162\uffbf\163\uffbf\165\uffbf\314\uffbf" +
    "\315\uffbf\001\002\000\030\014\uffc2\015\uffc2\033\uffc2\034" +
    "\uffc2\041\uffc2\143\uffc2\162\uffc2\163\uffc2\165\uffc2\314\uffc2" +
    "\315\uffc2\001\002\000\014\004\224\005\223\006\233\011" +
    "\112\040\247\001\002\000\014\004\224\005\223\006\233" +
    "\011\112\040\247\001\002\000\030\014\uffc0\015\uffc0\033" +
    "\uffc0\034\uffc0\041\uffc0\143\uffc0\162\uffc0\163\uffc0\165\uffc0" +
    "\314\uffc0\315\uffc0\001\002\000\030\014\uffc1\015\uffc1\033" +
    "\uffc1\034\uffc1\041\uffc1\143\uffc1\162\uffc1\163\uffc1\165\uffc1" +
    "\314\uffc1\315\uffc1\001\002\000\030\014\uffc3\015\uffc3\033" +
    "\uffc3\034\uffc3\041\uffc3\143\uffc3\162\uffc3\163\uffc3\165\uffc3" +
    "\314\uffc3\315\uffc3\001\002\000\014\004\224\005\223\006" +
    "\233\011\112\040\232\001\002\000\014\004\224\005\223" +
    "\006\233\011\112\040\232\001\002\000\024\033\uffca\034" +
    "\uffca\041\uffca\143\uffca\162\uffca\163\uffca\165\uffca\314\uffca" +
    "\315\uffca\001\002\000\024\033\uffc5\034\uffc5\041\uffc5\143" +
    "\uffc5\162\uffc5\163\uffc5\165\uffc5\314\uffc5\315\uffc5\001\002" +
    "\000\024\033\uffc6\034\uffc6\041\uffc6\143\uffc6\162\uffc6\163" +
    "\uffc6\165\uffc6\314\uffc6\315\uffc6\001\002\000\024\033\uffc8" +
    "\034\uffc8\041\uffc8\143\uffc8\162\uffc8\163\uffc8\165\uffc8\314" +
    "\uffc8\315\uffc8\001\002\000\030\014\260\015\261\033\uffc4" +
    "\034\uffc4\041\uffc4\143\uffc4\162\uffc4\163\uffc4\165\uffc4\314" +
    "\uffc4\315\uffc4\001\002\000\024\033\uffcb\034\uffcb\041\uffcb" +
    "\143\uffcb\162\uffcb\163\uffcb\165\uffcb\314\uffcb\315\uffcb\001" +
    "\002\000\024\033\uffc9\034\uffc9\041\uffc9\143\uffc9\162\uffc9" +
    "\163\uffc9\165\uffc9\314\uffc9\315\uffc9\001\002\000\012\033" +
    "\uff28\143\uff28\314\uff28\315\uff28\001\002\000\024\033\uffcd" +
    "\034\uffcd\041\uffcd\143\uffcd\162\uffcd\163\uffcd\165\uffcd\314" +
    "\uffcd\315\uffcd\001\002\000\004\011\112\001\002\000\014" +
    "\033\uff27\143\uff27\163\uff27\314\uff27\315\uff27\001\002\000" +
    "\004\025\276\001\002\000\020\004\224\005\223\006\233" +
    "\007\227\011\112\040\232\111\225\001\002\000\014\033" +
    "\uff26\143\uff26\163\uff26\314\uff26\315\uff26\001\002\000\006" +
    "\011\uff1e\161\211\001\002\000\004\011\uff21\001\002\000" +
    "\054\002\uffda\003\uffda\054\uffda\055\uffda\056\uffda\057\uffda" +
    "\060\uffda\061\uffda\062\uffda\063\uffda\143\uffda\231\uffda\233" +
    "\uffda\234\uffda\236\uffda\240\uffda\241\uffda\244\uffda\245\uffda" +
    "\246\uffda\247\uffda\001\002\000\054\002\uffdc\003\uffdc\054" +
    "\uffdc\055\uffdc\056\uffdc\057\uffdc\060\uffdc\061\uffdc\062\uffdc" +
    "\063\uffdc\143\uffdc\231\uffdc\233\uffdc\234\uffdc\236\uffdc\240" +
    "\uffdc\241\uffdc\244\uffdc\245\uffdc\246\uffdc\247\uffdc\001\002" +
    "\000\054\002\uffdd\003\uffdd\054\uffdd\055\uffdd\056\uffdd\057" +
    "\uffdd\060\uffdd\061\uffdd\062\uffdd\063\uffdd\143\uffdd\231\uffdd" +
    "\233\uffdd\234\uffdd\236\uffdd\240\uffdd\241\uffdd\244\uffdd\245" +
    "\uffdd\246\uffdd\247\uffdd\001\002\000\042\002\ufffe\003\033" +
    "\054\026\055\040\056\037\057\010\060\025\061\030\062" +
    "\011\063\032\143\024\233\004\234\042\236\035\240\022" +
    "\247\041\001\002\000\054\002\uffdb\003\uffdb\054\uffdb\055" +
    "\uffdb\056\uffdb\057\uffdb\060\uffdb\061\uffdb\062\uffdb\063\uffdb" +
    "\143\uffdb\231\uffdb\233\uffdb\234\uffdb\236\uffdb\240\uffdb\241" +
    "\uffdb\244\uffdb\245\uffdb\246\uffdb\247\uffdb\001\002\000\004" +
    "\002\ufffa\001\002\000\012\033\303\143\304\314\302\315" +
    "\306\001\002\000\042\002\ufffe\003\033\054\026\055\040" +
    "\056\037\057\010\060\025\061\030\062\011\063\032\143" +
    "\024\233\004\234\042\236\035\240\022\247\041\001\002" +
    "\000\004\002\uffef\001\002\000\052\002\uff0c\003\uff0c\054" +
    "\uff0c\055\uff0c\056\uff0c\057\uff0c\060\uff0c\061\uff0c\062\uff0c" +
    "\063\uff0c\143\uff0c\233\uff0c\234\uff0c\236\uff0c\240\uff0c\241" +
    "\uff0c\244\uff0c\245\uff0c\246\uff0c\247\uff0c\001\002\000\042" +
    "\002\ufffe\003\033\054\026\055\040\056\037\057\010\060" +
    "\025\061\030\062\011\063\032\143\024\233\004\234\042" +
    "\236\035\240\022\247\041\001\002\000\020\033\uff09\106" +
    "\uff09\143\uff09\242\322\243\320\314\uff09\315\uff09\001\002" +
    "\000\006\242\322\243\320\001\002\000\052\002\uff0d\003" +
    "\uff0d\054\uff0d\055\uff0d\056\uff0d\057\uff0d\060\uff0d\061\uff0d" +
    "\062\uff0d\063\uff0d\143\uff0d\233\uff0d\234\uff0d\236\uff0d\240" +
    "\uff0d\241\uff0d\244\uff0d\245\uff0d\246\uff0d\247\uff0d\001\002" +
    "\000\020\011\uff16\033\uff16\047\uff16\106\uff16\143\uff16\314" +
    "\uff16\315\uff16\001\002\000\016\011\112\033\uff06\047\325" +
    "\143\uff06\314\uff06\315\uff06\001\002\000\020\011\uff17\033" +
    "\uff17\047\uff17\106\uff17\143\uff17\314\uff17\315\uff17\001\002" +
    "\000\012\033\303\143\304\314\302\315\306\001\002\000" +
    "\014\033\uff08\106\uff08\143\uff08\314\uff08\315\uff08\001\002" +
    "\000\004\011\326\001\002\000\014\033\uff07\106\uff07\143" +
    "\uff07\314\uff07\315\uff07\001\002\000\052\002\uff01\003\uff01" +
    "\054\uff01\055\uff01\056\uff01\057\uff01\060\uff01\061\uff01\062" +
    "\uff01\063\uff01\143\uff01\233\uff01\234\uff01\236\uff01\240\uff01" +
    "\241\uff01\244\uff01\245\uff01\246\uff01\247\uff01\001\002\000" +
    "\014\033\uff04\106\334\143\uff04\314\uff04\315\uff04\001\002" +
    "\000\020\011\112\033\uff06\047\325\106\uff06\143\uff06\314" +
    "\uff06\315\uff06\001\002\000\014\033\uff0a\106\uff0a\143\uff0a" +
    "\314\uff0a\315\uff0a\001\002\000\012\033\303\143\304\314" +
    "\302\315\306\001\002\000\004\040\335\001\002\000\004" +
    "\310\336\001\002\000\004\025\337\001\002\000\006\077" +
    "\341\264\342\001\002\000\004\041\343\001\002\000\022" +
    "\033\uff03\034\uff03\041\uff03\143\uff03\165\uff03\240\uff03\314" +
    "\uff03\315\uff03\001\002\000\022\033\uff02\034\uff02\041\uff02" +
    "\143\uff02\165\uff02\240\uff02\314\uff02\315\uff02\001\002\000" +
    "\012\033\uff05\143\uff05\314\uff05\315\uff05\001\002\000\052" +
    "\002\uff0b\003\uff0b\054\uff0b\055\uff0b\056\uff0b\057\uff0b\060" +
    "\uff0b\061\uff0b\062\uff0b\063\uff0b\143\uff0b\233\uff0b\234\uff0b" +
    "\236\uff0b\240\uff0b\241\uff0b\244\uff0b\245\uff0b\246\uff0b\247" +
    "\uff0b\001\002\000\004\002\ufff3\001\002\000\042\002\ufffe" +
    "\003\033\054\026\055\040\056\037\057\010\060\025\061" +
    "\030\062\011\063\032\143\024\233\004\234\042\236\035" +
    "\240\022\247\041\001\002\000\004\002\ufff1\001\002\000" +
    "\012\033\uff52\143\uff52\314\uff52\315\uff52\001\002\000\006" +
    "\011\uff4a\156\371\001\002\000\006\011\uff4a\156\371\001" +
    "\002\000\012\033\uff50\143\uff50\314\uff50\315\uff50\001\002" +
    "\000\006\011\uff4a\156\371\001\002\000\012\033\uff4c\143" +
    "\uff4c\314\uff4c\315\uff4c\001\002\000\006\011\ufefe\156\ufefe" +
    "\001\002\000\006\011\uff4a\156\371\001\002\000\012\033" +
    "\uff4d\143\uff4d\314\uff4d\315\uff4d\001\002\000\006\011\ufeff" +
    "\156\ufeff\001\002\000\006\011\uff4a\156\371\001\002\000" +
    "\006\011\uff4a\156\371\001\002\000\006\011\uff3b\156\uff3b" +
    "\001\002\000\012\033\uff51\143\uff51\314\uff51\315\uff51\001" +
    "\002\000\006\011\uff3a\156\uff3a\001\002\000\012\033\uff4e" +
    "\143\uff4e\314\uff4e\315\uff4e\001\002\000\012\033\uff4f\143" +
    "\uff4f\314\uff4f\315\uff4f\001\002\000\004\157\u0100\001\002" +
    "\000\004\011\112\001\002\000\014\033\uff3d\034\375\143" +
    "\uff3d\314\uff3d\315\uff3d\001\002\000\012\033\uff40\143\uff40" +
    "\314\uff40\315\uff40\001\002\000\004\011\112\001\002\000" +
    "\012\033\uff3f\143\uff3f\314\uff3f\315\uff3f\001\002\000\012" +
    "\033\uff3e\143\uff3e\314\uff3e\315\uff3e\001\002\000\004\011" +
    "\uff4b\001\002\000\004\011\112\001\002\000\012\033\uff49" +
    "\143\uff49\314\uff49\315\uff49\001\002\000\014\033\uffb6\034" +
    "\u0104\143\uffb6\314\uffb6\315\uffb6\001\002\000\004\011\112" +
    "\001\002\000\012\033\uffb8\143\uffb8\314\uffb8\315\uffb8\001" +
    "\002\000\012\033\uffb7\143\uffb7\314\uffb7\315\uffb7\001\002" +
    "\000\004\011\112\001\002\000\012\033\uff3c\143\uff3c\314" +
    "\uff3c\315\uff3c\001\002\000\014\033\uff45\034\u010a\143\uff45" +
    "\314\uff45\315\uff45\001\002\000\004\011\112\001\002\000" +
    "\012\033\uff47\143\uff47\314\uff47\315\uff47\001\002\000\012" +
    "\033\uff46\143\uff46\314\uff46\315\uff46\001\002\000\004\011" +
    "\u010e\001\002\000\012\033\uff39\143\uff39\314\uff39\315\uff39" +
    "\001\002\000\004\011\112\001\002\000\012\033\uff44\143" +
    "\uff44\314\uff44\315\uff44\001\002\000\004\077\u0112\001\002" +
    "\000\004\011\112\001\002\000\014\033\uff41\034\u0114\143" +
    "\uff41\314\uff41\315\uff41\001\002\000\004\011\112\001\002" +
    "\000\012\033\uff43\143\uff43\314\uff43\315\uff43\001\002\000" +
    "\012\033\uff42\143\uff42\314\uff42\315\uff42\001\002\000\004" +
    "\011\112\001\002\000\012\033\uff48\143\uff48\314\uff48\315" +
    "\uff48\001\002\000\042\002\ufffe\003\033\054\026\055\040" +
    "\056\037\057\010\060\025\061\030\062\011\063\032\143" +
    "\024\233\004\234\042\236\035\240\022\247\041\001\002" +
    "\000\004\002\ufffd\001\002\000\012\033\ufe1c\143\ufe1c\314" +
    "\ufe1c\315\ufe1c\001\002\000\006\011\112\105\u0285\001\002" +
    "\000\006\011\u0277\074\u0278\001\002\000\004\011\u0263\001" +
    "\002\000\012\033\ufe1b\143\ufe1b\314\ufe1b\315\ufe1b\001\002" +
    "\000\004\011\112\001\002\000\004\011\112\001\002\000" +
    "\004\011\112\001\002\000\012\033\ufe22\143\ufe22\314\ufe22" +
    "\315\ufe22\001\002\000\004\011\112\001\002\000\004\040" +
    "\u0126\001\002\000\006\041\ufed6\047\u0128\001\002\000\004" +
    "\041\ufed7\001\002\000\004\011\u0186\001\002\000\004\041" +
    "\u012a\001\002\000\004\232\u012b\001\002\000\052\117\u0134" +
    "\120\u0131\121\u0136\122\u0132\123\u013e\124\u0130\125\u0137\126" +
    "\u013d\127\u0133\130\u012f\131\u0135\132\u013a\133\u0138\134\u012d" +
    "\135\u013c\136\u012c\137\u013f\140\u0139\141\u013b\317\u0140\001" +
    "\002\000\056\025\ufe55\033\ufe55\034\ufe55\041\ufe55\066\ufe55" +
    "\106\ufe55\111\ufe55\116\ufe55\143\ufe55\145\ufe55\146\ufe55\150" +
    "\ufe55\154\ufe55\155\ufe55\165\ufe55\211\ufe55\240\ufe55\260\ufe55" +
    "\261\ufe55\262\ufe55\314\ufe55\315\ufe55\001\002\000\056\025" +
    "\ufe58\033\ufe58\034\ufe58\041\ufe58\066\ufe58\106\ufe58\111\ufe58" +
    "\116\ufe58\143\ufe58\145\ufe58\146\ufe58\150\ufe58\154\ufe58\155" +
    "\ufe58\165\ufe58\211\ufe58\240\ufe58\260\ufe58\261\ufe58\262\ufe58" +
    "\314\ufe58\315\ufe58\001\002\000\010\106\u015f\165\ufecd\240" +
    "\ufecd\001\002\000\056\025\ufe5c\033\ufe5c\034\ufe5c\041\ufe5c" +
    "\066\ufe5c\106\ufe5c\111\ufe5c\116\ufe5c\143\ufe5c\145\ufe5c\146" +
    "\ufe5c\150\ufe5c\154\ufe5c\155\ufe5c\165\ufe5c\211\ufe5c\240\ufe5c" +
    "\260\ufe5c\261\ufe5c\262\ufe5c\314\ufe5c\315\ufe5c\001\002\000" +
    "\056\025\ufe60\033\ufe60\034\ufe60\041\ufe60\066\ufe60\106\ufe60" +
    "\111\ufe60\116\ufe60\143\ufe60\145\ufe60\146\ufe60\150\ufe60\154" +
    "\ufe60\155\ufe60\165\ufe60\211\ufe60\240\ufe60\260\ufe60\261\ufe60" +
    "\262\ufe60\314\ufe60\315\ufe60\001\002\000\004\040\u015b\001" +
    "\002\000\004\040\u0156\001\002\000\056\025\ufe5d\033\ufe5d" +
    "\034\ufe5d\041\ufe5d\066\ufe5d\106\ufe5d\111\ufe5d\116\ufe5d\143" +
    "\ufe5d\145\ufe5d\146\ufe5d\150\ufe5d\154\ufe5d\155\ufe5d\165\ufe5d" +
    "\211\ufe5d\240\ufe5d\260\ufe5d\261\ufe5d\262\ufe5d\314\ufe5d\315" +
    "\ufe5d\001\002\000\004\040\u0153\001\002\000\056\025\ufe5b" +
    "\033\ufe5b\034\ufe5b\041\ufe5b\066\ufe5b\106\ufe5b\111\ufe5b\116" +
    "\ufe5b\143\ufe5b\145\ufe5b\146\ufe5b\150\ufe5b\154\ufe5b\155\ufe5b" +
    "\165\ufe5b\211\ufe5b\240\ufe5b\260\ufe5b\261\ufe5b\262\ufe5b\314" +
    "\ufe5b\315\ufe5b\001\002\000\004\040\u0150\001\002\000\060" +
    "\025\ufe5f\033\ufe5f\034\ufe5f\040\u014d\041\ufe5f\066\ufe5f\106" +
    "\ufe5f\111\ufe5f\116\ufe5f\143\ufe5f\145\ufe5f\146\ufe5f\150\ufe5f" +
    "\154\ufe5f\155\ufe5f\165\ufe5f\211\ufe5f\240\ufe5f\260\ufe5f\261" +
    "\ufe5f\262\ufe5f\314\ufe5f\315\ufe5f\001\002\000\056\025\ufe59" +
    "\033\ufe59\034\ufe59\041\ufe59\066\ufe59\106\ufe59\111\ufe59\116" +
    "\ufe59\143\ufe59\145\ufe59\146\ufe59\150\ufe59\154\ufe59\155\ufe59" +
    "\165\ufe59\211\ufe59\240\ufe59\260\ufe59\261\ufe59\262\ufe59\314" +
    "\ufe59\315\ufe59\001\002\000\056\025\ufe53\033\ufe53\034\ufe53" +
    "\041\ufe53\066\ufe53\106\ufe53\111\ufe53\116\ufe53\143\ufe53\145" +
    "\ufe53\146\ufe53\150\ufe53\154\ufe53\155\ufe53\165\ufe53\211\ufe53" +
    "\240\ufe53\260\ufe53\261\ufe53\262\ufe53\314\ufe53\315\ufe53\001" +
    "\002\000\056\025\ufe5a\033\ufe5a\034\ufe5a\041\ufe5a\066\ufe5a" +
    "\106\ufe5a\111\ufe5a\116\ufe5a\143\ufe5a\145\ufe5a\146\ufe5a\150" +
    "\ufe5a\154\ufe5a\155\ufe5a\165\ufe5a\211\ufe5a\240\ufe5a\260\ufe5a" +
    "\261\ufe5a\262\ufe5a\314\ufe5a\315\ufe5a\001\002\000\060\025" +
    "\ufe4e\033\ufe4e\034\ufe4e\040\u014a\041\ufe4e\066\ufe4e\106\ufe4e" +
    "\111\ufe4e\116\ufe4e\143\ufe4e\145\ufe4e\146\ufe4e\150\ufe4e\154" +
    "\ufe4e\155\ufe4e\165\ufe4e\211\ufe4e\240\ufe4e\260\ufe4e\261\ufe4e" +
    "\262\ufe4e\314\ufe4e\315\ufe4e\001\002\000\056\025\ufe57\033" +
    "\ufe57\034\ufe57\041\ufe57\066\ufe57\106\ufe57\111\ufe57\116\ufe57" +
    "\143\ufe57\145\ufe57\146\ufe57\150\ufe57\154\ufe57\155\ufe57\165" +
    "\ufe57\211\ufe57\240\ufe57\260\ufe57\261\ufe57\262\ufe57\314\ufe57" +
    "\315\ufe57\001\002\000\056\025\ufe61\033\ufe61\034\ufe61\041" +
    "\ufe61\066\ufe61\106\ufe61\111\ufe61\116\ufe61\143\ufe61\145\ufe61" +
    "\146\ufe61\150\ufe61\154\ufe61\155\ufe61\165\ufe61\211\ufe61\240" +
    "\ufe61\260\ufe61\261\ufe61\262\ufe61\314\ufe61\315\ufe61\001\002" +
    "\000\004\040\u0144\001\002\000\056\025\ufe54\033\ufe54\034" +
    "\ufe54\041\ufe54\066\ufe54\106\ufe54\111\ufe54\116\ufe54\143\ufe54" +
    "\145\ufe54\146\ufe54\150\ufe54\154\ufe54\155\ufe54\165\ufe54\211" +
    "\ufe54\240\ufe54\260\ufe54\261\ufe54\262\ufe54\314\ufe54\315\ufe54" +
    "\001\002\000\004\040\u0141\001\002\000\006\004\204\005" +
    "\207\001\002\000\004\041\u0143\001\002\000\056\025\ufe62" +
    "\033\ufe62\034\ufe62\041\ufe62\066\ufe62\106\ufe62\111\ufe62\116" +
    "\ufe62\143\ufe62\145\ufe62\146\ufe62\150\ufe62\154\ufe62\155\ufe62" +
    "\165\ufe62\211\ufe62\240\ufe62\260\ufe62\261\ufe62\262\ufe62\314" +
    "\ufe62\315\ufe62\001\002\000\006\004\204\005\207\001\002" +
    "\000\004\034\u0146\001\002\000\006\004\204\005\207\001" +
    "\002\000\004\041\u0148\001\002\000\056\025\ufe50\033\ufe50" +
    "\034\ufe50\041\ufe50\066\ufe50\106\ufe50\111\ufe50\116\ufe50\143" +
    "\ufe50\145\ufe50\146\ufe50\150\ufe50\154\ufe50\155\ufe50\165\ufe50" +
    "\211\ufe50\240\ufe50\260\ufe50\261\ufe50\262\ufe50\314\ufe50\315" +
    "\ufe50\001\002\000\056\025\ufe52\033\ufe52\034\ufe52\041\ufe52" +
    "\066\ufe52\106\ufe52\111\ufe52\116\ufe52\143\ufe52\145\ufe52\146" +
    "\ufe52\150\ufe52\154\ufe52\155\ufe52\165\ufe52\211\ufe52\240\ufe52" +
    "\260\ufe52\261\ufe52\262\ufe52\314\ufe52\315\ufe52\001\002\000" +
    "\006\004\204\005\207\001\002\000\004\041\u014c\001\002" +
    "\000\056\025\ufe4f\033\ufe4f\034\ufe4f\041\ufe4f\066\ufe4f\106" +
    "\ufe4f\111\ufe4f\116\ufe4f\143\ufe4f\145\ufe4f\146\ufe4f\150\ufe4f" +
    "\154\ufe4f\155\ufe4f\165\ufe4f\211\ufe4f\240\ufe4f\260\ufe4f\261" +
    "\ufe4f\262\ufe4f\314\ufe4f\315\ufe4f\001\002\000\004\205\u014e" +
    "\001\002\000\004\041\u014f\001\002\000\056\025\ufe5e\033" +
    "\ufe5e\034\ufe5e\041\ufe5e\066\ufe5e\106\ufe5e\111\ufe5e\116\ufe5e" +
    "\143\ufe5e\145\ufe5e\146\ufe5e\150\ufe5e\154\ufe5e\155\ufe5e\165" +
    "\ufe5e\211\ufe5e\240\ufe5e\260\ufe5e\261\ufe5e\262\ufe5e\314\ufe5e" +
    "\315\ufe5e\001\002\000\006\004\204\005\207\001\002\000" +
    "\004\041\u0152\001\002\000\056\025\ufe63\033\ufe63\034\ufe63" +
    "\041\ufe63\066\ufe63\106\ufe63\111\ufe63\116\ufe63\143\ufe63\145" +
    "\ufe63\146\ufe63\150\ufe63\154\ufe63\155\ufe63\165\ufe63\211\ufe63" +
    "\240\ufe63\260\ufe63\261\ufe63\262\ufe63\314\ufe63\315\ufe63\001" +
    "\002\000\006\004\204\005\207\001\002\000\004\041\u0155" +
    "\001\002\000\056\025\ufe56\033\ufe56\034\ufe56\041\ufe56\066" +
    "\ufe56\106\ufe56\111\ufe56\116\ufe56\143\ufe56\145\ufe56\146\ufe56" +
    "\150\ufe56\154\ufe56\155\ufe56\165\ufe56\211\ufe56\240\ufe56\260" +
    "\ufe56\261\ufe56\262\ufe56\314\ufe56\315\ufe56\001\002\000\006" +
    "\004\204\005\207\001\002\000\004\034\u0158\001\002\000" +
    "\006\004\204\005\207\001\002\000\004\041\u015a\001\002" +
    "\000\056\025\ufe51\033\ufe51\034\ufe51\041\ufe51\066\ufe51\106" +
    "\ufe51\111\ufe51\116\ufe51\143\ufe51\145\ufe51\146\ufe51\150\ufe51" +
    "\154\ufe51\155\ufe51\165\ufe51\211\ufe51\240\ufe51\260\ufe51\261" +
    "\ufe51\262\ufe51\314\ufe51\315\ufe51\001\002\000\006\004\204" +
    "\005\207\001\002\000\004\041\u015d\001\002\000\056\025" +
    "\ufe64\033\ufe64\034\ufe64\041\ufe64\066\ufe64\106\ufe64\111\ufe64" +
    "\116\ufe64\143\ufe64\145\ufe64\146\ufe64\150\ufe64\154\ufe64\155" +
    "\ufe64\165\ufe64\211\ufe64\240\ufe64\260\ufe64\261\ufe64\262\ufe64" +
    "\314\ufe64\315\ufe64\001\002\000\006\165\u017a\240\ufed1\001" +
    "\002\000\020\232\u0161\233\004\234\042\254\u0167\265\u0164" +
    "\266\u0165\267\u0163\001\002\000\004\165\u0172\001\002\000" +
    "\004\111\u0170\001\002\000\006\165\ufece\240\ufece\001\002" +
    "\000\004\077\u016d\001\002\000\010\034\ufec8\165\ufec8\240" +
    "\ufec8\001\002\000\006\077\341\264\342\001\002\000\010" +
    "\034\u0168\165\ufeca\240\ufeca\001\002\000\010\034\ufec9\165" +
    "\ufec9\240\ufec9\001\002\000\020\232\u0161\233\004\234\042" +
    "\254\u0167\265\u0164\266\u0165\267\u0163\001\002\000\006\165" +
    "\ufecc\240\ufecc\001\002\000\006\165\ufecb\240\ufecb\001\002" +
    "\000\010\034\ufec4\165\ufec4\240\ufec4\001\002\000\010\034" +
    "\ufec5\165\ufec5\240\ufec5\001\002\000\004\111\u016e\001\002" +
    "\000\004\303\u016f\001\002\000\010\034\ufec3\165\ufec3\240" +
    "\ufec3\001\002\000\004\077\u016d\001\002\000\010\034\ufec6" +
    "\165\ufec6\240\ufec6\001\002\000\014\011\u0173\255\u0177\256" +
    "\u0175\257\u0174\265\u0176\001\002\000\012\034\ufee0\165\ufee0" +
    "\211\ufee0\240\ufee0\001\002\000\012\034\ufee2\165\ufee2\211" +
    "\ufee2\240\ufee2\001\002\000\012\034\ufee1\165\ufee1\211\ufee1" +
    "\240\ufee1\001\002\000\012\034\ufedf\165\ufedf\211\ufedf\240" +
    "\ufedf\001\002\000\012\034\ufee3\165\ufee3\211\ufee3\240\ufee3" +
    "\001\002\000\010\034\ufec7\165\ufec7\240\ufec7\001\002\000" +
    "\004\240\u017b\001\002\000\054\117\ufed2\120\ufed2\121\ufed2" +
    "\122\ufed2\123\ufed2\124\ufed2\125\ufed2\126\ufed2\127\ufed2\130" +
    "\ufed2\131\ufed2\132\ufed2\133\ufed2\134\ufed2\135\ufed2\136\ufed2" +
    "\137\ufed2\140\ufed2\141\ufed2\240\ufed2\317\ufed2\001\002\000" +
    "\004\057\010\001\002\000\012\033\ufed8\143\ufed8\314\ufed8" +
    "\315\ufed8\001\002\000\012\033\303\143\304\314\302\315" +
    "\306\001\002\000\004\231\u017f\001\002\000\020\004\154" +
    "\005\157\006\156\007\152\040\u0182\047\164\111\155\001" +
    "\002\000\004\241\u0181\001\002\000\012\033\ufec2\143\ufec2" +
    "\314\ufec2\315\ufec2\001\002\000\016\004\154\005\157\006" +
    "\156\007\152\047\164\111\155\001\002\000\004\241\ufec1" +
    "\001\002\000\004\041\u0185\001\002\000\004\241\ufec0\001" +
    "\002\000\054\117\ufed1\120\ufed1\121\ufed1\122\ufed1\123\ufed1" +
    "\124\ufed1\125\ufed1\126\ufed1\127\ufed1\130\ufed1\131\ufed1\132" +
    "\ufed1\133\ufed1\134\ufed1\135\ufed1\136\ufed1\137\ufed1\140\ufed1" +
    "\141\ufed1\165\u017a\317\ufed1\001\002\000\052\117\u0134\120" +
    "\u0131\121\u0136\122\u0132\123\u013e\124\u0130\125\u0137\126\u013d" +
    "\127\u0133\130\u012f\131\u0135\132\u013a\133\u0138\134\u012d\135" +
    "\u013c\136\u012c\137\u013f\140\u0139\141\u013b\317\u0140\001\002" +
    "\000\012\025\u0189\034\ufef2\041\ufef2\262\ufef2\001\002\000" +
    "\004\066\u0190\001\002\000\010\034\ufecf\041\ufecf\262\u018c" +
    "\001\002\000\006\034\u018d\041\ufed3\001\002\000\006\034" +
    "\ufed0\041\ufed0\001\002\000\004\047\u0128\001\002\000\004" +
    "\041\ufed5\001\002\000\004\041\ufed4\001\002\000\022\034" +
    "\ufef3\041\ufef3\106\ufef3\165\ufef3\211\ufef3\260\ufef3\261\ufef3" +
    "\262\ufef3\001\002\000\014\033\u0193\047\ufefb\106\ufefb\165" +
    "\ufefb\211\ufefb\001\002\000\012\047\u0195\106\ufef9\165\ufef9" +
    "\211\ufef9\001\002\000\006\004\204\005\207\001\002\000" +
    "\012\047\ufefc\106\ufefc\165\ufefc\211\ufefc\001\002\000\004" +
    "\011\u01ce\001\002\000\010\106\u0197\165\ufeec\211\ufeec\001" +
    "\002\000\012\233\004\234\042\253\u01c8\254\u01c7\001\002" +
    "\000\006\165\ufedd\211\u0199\001\002\000\004\263\u01c3\001" +
    "\002\000\004\165\u019b\001\002\000\004\240\u019d\001\002" +
    "\000\012\033\ufefd\143\ufefd\314\ufefd\315\ufefd\001\002\000" +
    "\040\003\u01ad\054\026\055\040\056\037\057\010\060\025" +
    "\061\030\062\011\063\032\143\u01a8\233\004\234\042\236" +
    "\u01af\240\022\247\041\001\002\000\012\033\303\143\304" +
    "\314\302\315\306\001\002\000\012\033\303\143\304\314" +
    "\302\315\306\001\002\000\012\033\303\143\304\314\302" +
    "\315\306\001\002\000\042\003\u01ad\054\026\055\040\056" +
    "\037\057\010\060\025\061\030\062\011\063\032\143\u01a8" +
    "\233\004\234\042\236\u01af\240\022\241\ufed9\247\041\001" +
    "\002\000\012\033\303\143\304\314\302\315\306\001\002" +
    "\000\012\033\303\143\304\314\302\315\306\001\002\000" +
    "\012\033\303\143\304\314\302\315\306\001\002\000\012" +
    "\033\303\143\304\314\302\315\306\001\002\000\012\033" +
    "\303\143\304\314\302\315\306\001\002\000\012\033\303" +
    "\143\304\314\302\315\306\001\002\000\050\003\uffeb\054" +
    "\uffeb\055\uffeb\056\uffeb\057\uffeb\060\uffeb\061\uffeb\062\uffeb" +
    "\063\uffeb\143\uffeb\233\uffeb\234\uffeb\236\uffeb\240\uffeb\241" +
    "\uffeb\244\uffeb\245\uffeb\246\uffeb\247\uffeb\001\002\000\004" +
    "\241\u01b7\001\002\000\050\003\uffed\054\uffed\055\uffed\056" +
    "\uffed\057\uffed\060\uffed\061\uffed\062\uffed\063\uffed\143\uffed" +
    "\233\uffed\234\uffed\236\uffed\240\uffed\241\uffed\244\uffed\245" +
    "\uffed\246\uffed\247\uffed\001\002\000\012\033\303\143\304" +
    "\314\302\315\306\001\002\000\050\003\uffee\054\uffee\055" +
    "\uffee\056\uffee\057\uffee\060\uffee\061\uffee\062\uffee\063\uffee" +
    "\143\uffee\233\uffee\234\uffee\236\uffee\240\uffee\241\uffee\244" +
    "\uffee\245\uffee\246\uffee\247\uffee\001\002\000\012\033\303" +
    "\143\304\314\302\315\306\001\002\000\006\244\315\245" +
    "\316\001\002\000\004\011\112\001\002\000\012\033\303" +
    "\143\304\314\302\315\306\001\002\000\050\003\uffe3\054" +
    "\uffe3\055\uffe3\056\uffe3\057\uffe3\060\uffe3\061\uffe3\062\uffe3" +
    "\063\uffe3\143\uffe3\233\uffe3\234\uffe3\236\uffe3\240\uffe3\241" +
    "\uffe3\244\uffe3\245\uffe3\246\uffe3\247\uffe3\001\002\000\012" +
    "\033\303\143\304\314\302\315\306\001\002\000\050\003" +
    "\uffe8\054\uffe8\055\uffe8\056\uffe8\057\uffe8\060\uffe8\061\uffe8" +
    "\062\uffe8\063\uffe8\143\uffe8\233\uffe8\234\uffe8\236\uffe8\240" +
    "\uffe8\241\uffe8\244\uffe8\245\uffe8\246\uffe8\247\uffe8\001\002" +
    "\000\050\003\uffea\054\uffea\055\uffea\056\uffea\057\uffea\060" +
    "\uffea\061\uffea\062\uffea\063\uffea\143\uffea\233\uffea\234\uffea" +
    "\236\uffea\240\uffea\241\uffea\244\uffea\245\uffea\246\uffea\247" +
    "\uffea\001\002\000\050\003\uffe7\054\uffe7\055\uffe7\056\uffe7" +
    "\057\uffe7\060\uffe7\061\uffe7\062\uffe7\063\uffe7\143\uffe7\233" +
    "\uffe7\234\uffe7\236\uffe7\240\uffe7\241\uffe7\244\uffe7\245\uffe7" +
    "\246\uffe7\247\uffe7\001\002\000\050\003\uffe6\054\uffe6\055" +
    "\uffe6\056\uffe6\057\uffe6\060\uffe6\061\uffe6\062\uffe6\063\uffe6" +
    "\143\uffe6\233\uffe6\234\uffe6\236\uffe6\240\uffe6\241\uffe6\244" +
    "\uffe6\245\uffe6\246\uffe6\247\uffe6\001\002\000\012\033\ufedc" +
    "\143\ufedc\314\ufedc\315\ufedc\001\002\000\050\003\uffe1\054" +
    "\uffe1\055\uffe1\056\uffe1\057\uffe1\060\uffe1\061\uffe1\062\uffe1" +
    "\063\uffe1\143\uffe1\233\uffe1\234\uffe1\236\uffe1\240\uffe1\241" +
    "\uffe1\244\uffe1\245\uffe1\246\uffe1\247\uffe1\001\002\000\050" +
    "\003\uffe4\054\uffe4\055\uffe4\056\uffe4\057\uffe4\060\uffe4\061" +
    "\uffe4\062\uffe4\063\uffe4\143\uffe4\233\uffe4\234\uffe4\236\uffe4" +
    "\240\uffe4\241\uffe4\244\uffe4\245\uffe4\246\uffe4\247\uffe4\001" +
    "\002\000\050\003\uffde\054\uffde\055\uffde\056\uffde\057\uffde" +
    "\060\uffde\061\uffde\062\uffde\063\uffde\143\uffde\233\uffde\234" +
    "\uffde\236\uffde\240\uffde\241\uffde\244\uffde\245\uffde\246\uffde" +
    "\247\uffde\001\002\000\050\003\uffe9\054\uffe9\055\uffe9\056" +
    "\uffe9\057\uffe9\060\uffe9\061\uffe9\062\uffe9\063\uffe9\143\uffe9" +
    "\233\uffe9\234\uffe9\236\uffe9\240\uffe9\241\uffe9\244\uffe9\245" +
    "\uffe9\246\uffe9\247\uffe9\001\002\000\050\003\uffe0\054\uffe0" +
    "\055\uffe0\056\uffe0\057\uffe0\060\uffe0\061\uffe0\062\uffe0\063" +
    "\uffe0\143\uffe0\233\uffe0\234\uffe0\236\uffe0\240\uffe0\241\uffe0" +
    "\244\uffe0\245\uffe0\246\uffe0\247\uffe0\001\002\000\050\003" +
    "\uffec\054\uffec\055\uffec\056\uffec\057\uffec\060\uffec\061\uffec" +
    "\062\uffec\063\uffec\143\uffec\233\uffec\234\uffec\236\uffec\240" +
    "\uffec\241\uffec\244\uffec\245\uffec\246\uffec\247\uffec\001\002" +
    "\000\004\241\ufedb\001\002\000\004\241\ufeda\001\002\000" +
    "\050\003\uffdf\054\uffdf\055\uffdf\056\uffdf\057\uffdf\060\uffdf" +
    "\061\uffdf\062\uffdf\063\uffdf\143\uffdf\233\uffdf\234\uffdf\236" +
    "\uffdf\240\uffdf\241\uffdf\244\uffdf\245\uffdf\246\uffdf\247\uffdf" +
    "\001\002\000\050\003\uffe5\054\uffe5\055\uffe5\056\uffe5\057" +
    "\uffe5\060\uffe5\061\uffe5\062\uffe5\063\uffe5\143\uffe5\233\uffe5" +
    "\234\uffe5\236\uffe5\240\uffe5\241\uffe5\244\uffe5\245\uffe5\246" +
    "\uffe5\247\uffe5\001\002\000\050\003\uffe2\054\uffe2\055\uffe2" +
    "\056\uffe2\057\uffe2\060\uffe2\061\uffe2\062\uffe2\063\uffe2\143" +
    "\uffe2\233\uffe2\234\uffe2\236\uffe2\240\uffe2\241\uffe2\244\uffe2" +
    "\245\uffe2\246\uffe2\247\uffe2\001\002\000\004\165\ufede\001" +
    "\002\000\010\034\u01cb\165\ufee6\211\ufee6\001\002\000\004" +
    "\165\u01c9\001\002\000\006\165\ufeed\211\ufeed\001\002\000" +
    "\010\034\ufeea\165\ufeea\211\ufeea\001\002\000\010\034\ufee9" +
    "\165\ufee9\211\ufee9\001\002\000\014\011\u0173\255\u0177\256" +
    "\u0175\257\u0174\265\u0176\001\002\000\010\034\ufee8\165\ufee8" +
    "\211\ufee8\001\002\000\012\233\004\234\042\253\u01c8\254" +
    "\u01c7\001\002\000\006\165\ufeeb\211\ufeeb\001\002\000\006" +
    "\165\ufee7\211\ufee7\001\002\000\056\011\u01d1\117\u0134\120" +
    "\u0131\121\u0136\122\u0132\123\u013e\124\u0130\125\u0137\126\u013d" +
    "\127\u0133\130\u012f\131\u0135\132\u013a\133\u0138\134\u012d\135" +
    "\u013c\136\u012c\137\u013f\140\u0139\141\u013b\251\u01d0\317\u0140" +
    "\001\002\000\020\025\u0189\034\ufef2\106\ufef2\165\ufef2\211" +
    "\ufef2\260\ufef2\261\ufef2\001\002\000\004\250\u01d7\001\002" +
    "\000\004\262\u01d6\001\002\000\012\034\u01d3\106\ufeee\165" +
    "\ufeee\211\ufeee\001\002\000\012\047\u0195\106\ufef9\165\ufef9" +
    "\211\ufef9\001\002\000\010\106\ufefa\165\ufefa\211\ufefa\001" +
    "\002\000\010\106\ufeef\165\ufeef\211\ufeef\001\002\000\012" +
    "\034\ufef6\106\ufef6\165\ufef6\211\ufef6\001\002\000\006\260" +
    "\u01d8\261\u01da\001\002\000\012\034\ufef5\106\ufef5\165\ufef5" +
    "\211\ufef5\001\002\000\012\034\ufef8\106\ufef8\165\ufef8\211" +
    "\ufef8\001\002\000\012\034\ufef4\106\ufef4\165\ufef4\211\ufef4" +
    "\001\002\000\016\034\ufef0\106\ufef0\165\ufef0\211\ufef0\260" +
    "\u01d8\261\u01da\001\002\000\012\034\ufef1\106\ufef1\165\ufef1" +
    "\211\ufef1\001\002\000\012\034\ufef7\106\ufef7\165\ufef7\211" +
    "\ufef7\001\002\000\006\011\112\165\ufe26\001\002\000\012" +
    "\033\ufe1d\143\ufe1d\314\ufe1d\315\ufe1d\001\002\000\006\011" +
    "\112\165\ufe24\001\002\000\010\011\ufe23\034\ufe23\165\ufe23" +
    "\001\002\000\004\165\u01e3\001\002\000\004\057\010\001" +
    "\002\000\012\033\ufe28\143\ufe28\314\ufe28\315\ufe28\001\002" +
    "\000\004\165\ufe27\001\002\000\004\034\u01e7\001\002\000" +
    "\006\011\112\165\ufe26\001\002\000\004\165\ufe25\001\002" +
    "\000\010\061\u01eb\063\u01ee\114\u01ed\001\002\000\012\033" +
    "\ufe1f\143\ufe1f\314\ufe1f\315\ufe1f\001\002\000\004\115\u0260" +
    "\001\002\000\012\033\ufe0d\143\ufe0d\314\ufe0d\315\ufe0d\001" +
    "\002\000\010\011\112\100\u01fe\154\u01fd\001\002\000\010" +
    "\070\u01f1\100\u01f0\115\u01ef\001\002\000\004\011\u01f3\001" +
    "\002\000\004\011\u01f3\001\002\000\004\011\u01f3\001\002" +
    "\000\012\033\ufe0a\143\ufe0a\314\ufe0a\315\ufe0a\001\002\000" +
    "\022\033\uff55\034\uff55\041\uff55\143\uff55\200\u01f5\201\u01f6" +
    "\314\uff55\315\uff55\001\002\000\012\033\ufe00\143\ufe00\314" +
    "\ufe00\315\ufe00\001\002\000\020\033\uff56\034\uff56\041\uff56" +
    "\143\uff56\211\uff56\314\uff56\315\uff56\001\002\000\020\033" +
    "\uff57\034\uff57\041\uff57\143\uff57\211\uff57\314\uff57\315\uff57" +
    "\001\002\000\016\033\ufe3b\034\u01f8\041\ufe3b\143\ufe3b\314" +
    "\ufe3b\315\ufe3b\001\002\000\004\011\u01f3\001\002\000\014" +
    "\033\ufe3d\041\ufe3d\143\ufe3d\314\ufe3d\315\ufe3d\001\002\000" +
    "\014\033\ufe3c\041\ufe3c\143\ufe3c\314\ufe3c\315\ufe3c\001\002" +
    "\000\012\033\ufe02\143\ufe02\314\ufe02\315\ufe02\001\002\000" +
    "\012\033\ufe01\143\ufe01\314\ufe01\315\ufe01\001\002\000\004" +
    "\147\u0257\001\002\000\004\011\112\001\002\000\012\033" +
    "\ufe08\143\ufe08\314\ufe08\315\ufe08\001\002\000\014\033\ufe04" +
    "\034\u0232\143\ufe04\314\ufe04\315\ufe04\001\002\000\052\117" +
    "\u0134\120\u0131\121\u0136\122\u0132\123\u013e\124\u0130\125\u0137" +
    "\126\u013d\127\u0133\130\u012f\131\u0135\132\u013a\133\u0138\134" +
    "\u012d\135\u013c\136\u012c\137\u013f\140\u0139\141\u013b\317\u0140" +
    "\001\002\000\012\033\ufe0b\143\ufe0b\314\ufe0b\315\ufe0b\001" +
    "\002\000\034\033\ufe4c\034\ufe4c\066\u0209\111\u0208\116\u0207" +
    "\143\ufe4c\145\u020a\146\u020c\150\u0204\154\u020d\155\u020b\314" +
    "\ufe4c\315\ufe4c\001\002\000\004\040\u022d\001\002\000\014" +
    "\033\ufe03\034\ufe03\143\ufe03\314\ufe03\315\ufe03\001\002\000" +
    "\036\033\ufe4c\034\ufe4c\041\ufe4c\066\u0209\111\u0208\116\u0207" +
    "\143\ufe4c\145\u020a\146\u020c\150\u0204\154\u020d\155\u020b\314" +
    "\ufe4c\315\ufe4c\001\002\000\040\033\ufe41\034\ufe41\040\u021c" +
    "\041\ufe41\066\ufe41\111\ufe41\116\ufe41\143\ufe41\145\ufe41\146" +
    "\ufe41\150\ufe41\154\ufe41\155\ufe41\314\ufe41\315\ufe41\001\002" +
    "\000\036\033\ufe4a\034\ufe4a\041\ufe4a\066\ufe4a\111\ufe4a\116" +
    "\ufe4a\143\ufe4a\145\ufe4a\146\ufe4a\150\ufe4a\154\ufe4a\155\ufe4a" +
    "\314\ufe4a\315\ufe4a\001\002\000\052\117\u0134\120\u0131\121" +
    "\u0136\122\u0132\123\u013e\124\u0130\125\u0137\126\u013d\127\u0133" +
    "\130\u012f\131\u0135\132\u013a\133\u0138\134\u012d\135\u013c\136" +
    "\u012c\137\u013f\140\u0139\141\u013b\317\u0140\001\002\000\004" +
    "\111\u0228\001\002\000\004\040\u021f\001\002\000\004\147" +
    "\u0217\001\002\000\004\147\u020e\001\002\000\004\040\u020f" +
    "\001\002\000\004\011\112\001\002\000\004\041\u0211\001" +
    "\002\000\004\151\u0212\001\002\000\004\011\112\001\002" +
    "\000\004\040\u0214\001\002\000\004\011\112\001\002\000" +
    "\004\041\u0216\001\002\000\036\033\ufe47\034\ufe47\041\ufe47" +
    "\066\ufe47\111\ufe47\116\ufe47\143\ufe47\145\ufe47\146\ufe47\150" +
    "\ufe47\154\ufe47\155\ufe47\314\ufe47\315\ufe47\001\002\000\044" +
    "\033\ufe3e\034\ufe3e\040\ufe3e\041\ufe3e\066\ufe3e\111\ufe3e\116" +
    "\ufe3e\143\ufe3e\145\ufe3e\146\ufe3e\150\ufe3e\154\ufe3e\155\ufe3e" +
    "\207\u0218\210\u0219\314\ufe3e\315\ufe3e\001\002\000\042\033" +
    "\ufe40\034\ufe40\040\ufe40\041\ufe40\066\ufe40\070\ufe40\111\ufe40" +
    "\116\ufe40\143\ufe40\145\ufe40\146\ufe40\150\ufe40\154\ufe40\155" +
    "\ufe40\314\ufe40\315\ufe40\001\002\000\042\033\ufe3f\034\ufe3f" +
    "\040\ufe3f\041\ufe3f\066\ufe3f\070\ufe3f\111\ufe3f\116\ufe3f\143" +
    "\ufe3f\145\ufe3f\146\ufe3f\150\ufe3f\154\ufe3f\155\ufe3f\314\ufe3f" +
    "\315\ufe3f\001\002\000\040\033\ufe41\034\ufe41\040\u021c\041" +
    "\ufe41\066\ufe41\111\ufe41\116\ufe41\143\ufe41\145\ufe41\146\ufe41" +
    "\150\ufe41\154\ufe41\155\ufe41\314\ufe41\315\ufe41\001\002\000" +
    "\036\033\ufe48\034\ufe48\041\ufe48\066\ufe48\111\ufe48\116\ufe48" +
    "\143\ufe48\145\ufe48\146\ufe48\150\ufe48\154\ufe48\155\ufe48\314" +
    "\ufe48\315\ufe48\001\002\000\004\011\u01f3\001\002\000\004" +
    "\041\u021e\001\002\000\036\033\ufe42\034\ufe42\041\ufe42\066" +
    "\ufe42\111\ufe42\116\ufe42\143\ufe42\145\ufe42\146\ufe42\150\ufe42" +
    "\154\ufe42\155\ufe42\314\ufe42\315\ufe42\001\002\000\004\011" +
    "\112\001\002\000\004\041\u0227\001\002\000\030\021\120" +
    "\022\121\023\124\024\131\025\125\026\127\027\132\110" +
    "\117\142\123\144\133\312\134\001\002\000\014\030\141" +
    "\031\145\041\ufe38\152\142\153\144\001\002\000\004\041" +
    "\ufe3a\001\002\000\004\011\112\001\002\000\004\041\ufe39" +
    "\001\002\000\014\030\ufe37\031\ufe37\041\ufe37\152\ufe37\153" +
    "\ufe37\001\002\000\036\033\ufe45\034\ufe45\041\ufe45\066\ufe45" +
    "\111\ufe45\116\ufe45\143\ufe45\145\ufe45\146\ufe45\150\ufe45\154" +
    "\ufe45\155\ufe45\314\ufe45\315\ufe45\001\002\000\036\033\ufe46" +
    "\034\ufe46\041\ufe46\066\ufe46\111\ufe46\116\ufe46\143\ufe46\145" +
    "\ufe46\146\ufe46\150\ufe46\154\ufe46\155\ufe46\314\ufe46\315\ufe46" +
    "\001\002\000\036\033\ufe44\034\ufe44\041\ufe44\066\ufe44\111" +
    "\ufe44\116\ufe44\143\ufe44\145\ufe44\146\ufe44\150\ufe44\154\ufe44" +
    "\155\ufe44\314\ufe44\315\ufe44\001\002\000\036\033\ufe49\034" +
    "\ufe49\041\ufe49\066\ufe49\111\ufe49\116\ufe49\143\ufe49\145\ufe49" +
    "\146\ufe49\150\ufe49\154\ufe49\155\ufe49\314\ufe49\315\ufe49\001" +
    "\002\000\016\033\ufe4b\034\ufe4b\041\ufe4b\143\ufe4b\314\ufe4b" +
    "\315\ufe4b\001\002\000\016\033\ufe4d\034\ufe4d\041\ufe4d\143" +
    "\ufe4d\314\ufe4d\315\ufe4d\001\002\000\006\004\204\005\207" +
    "\001\002\000\004\034\u022f\001\002\000\006\004\204\005" +
    "\207\001\002\000\004\041\u0231\001\002\000\036\033\ufe43" +
    "\034\ufe43\041\ufe43\066\ufe43\111\ufe43\116\ufe43\143\ufe43\145" +
    "\ufe43\146\ufe43\150\ufe43\154\ufe43\155\ufe43\314\ufe43\315\ufe43" +
    "\001\002\000\010\011\112\100\u01fe\154\u01fd\001\002\000" +
    "\012\033\ufe06\143\ufe06\314\ufe06\315\ufe06\001\002\000\012" +
    "\033\ufe05\143\ufe05\314\ufe05\315\ufe05\001\002\000\022\066" +
    "\u023a\111\u0239\116\u0238\145\u023b\146\u023d\150\u0237\154\u023e" +
    "\155\u023c\001\002\000\014\033\ufe04\034\u0232\143\ufe04\314" +
    "\ufe04\315\ufe04\001\002\000\004\040\u0251\001\002\000\016" +
    "\033\ufe41\034\ufe41\040\u021c\143\ufe41\314\ufe41\315\ufe41\001" +
    "\002\000\014\033\ufdff\034\ufdff\143\ufdff\314\ufdff\315\ufdff" +
    "\001\002\000\052\117\u0134\120\u0131\121\u0136\122\u0132\123" +
    "\u013e\124\u0130\125\u0137\126\u013d\127\u0133\130\u012f\131\u0135" +
    "\132\u013a\133\u0138\134\u012d\135\u013c\136\u012c\137\u013f\140" +
    "\u0139\141\u013b\317\u0140\001\002\000\004\111\u024e\001\002" +
    "\000\004\040\u024b\001\002\000\004\147\u0248\001\002\000" +
    "\004\147\u023f\001\002\000\004\040\u0240\001\002\000\004" +
    "\011\112\001\002\000\004\041\u0242\001\002\000\004\151" +
    "\u0243\001\002\000\004\011\112\001\002\000\004\040\u0245" +
    "\001\002\000\004\011\112\001\002\000\004\041\u0247\001" +
    "\002\000\014\033\ufdfc\034\ufdfc\143\ufdfc\314\ufdfc\315\ufdfc" +
    "\001\002\000\022\033\ufe3e\034\ufe3e\040\ufe3e\143\ufe3e\207" +
    "\u0218\210\u0219\314\ufe3e\315\ufe3e\001\002\000\016\033\ufe41" +
    "\034\ufe41\040\u021c\143\ufe41\314\ufe41\315\ufe41\001\002\000" +
    "\014\033\ufdfd\034\ufdfd\143\ufdfd\314\ufdfd\315\ufdfd\001\002" +
    "\000\004\011\112\001\002\000\004\041\u024d\001\002\000" +
    "\014\033\ufdfa\034\ufdfa\143\ufdfa\314\ufdfa\315\ufdfa\001\002" +
    "\000\014\033\ufdfb\034\ufdfb\143\ufdfb\314\ufdfb\315\ufdfb\001" +
    "\002\000\014\033\ufdf9\034\ufdf9\143\ufdf9\314\ufdf9\315\ufdf9" +
    "\001\002\000\014\033\ufdfe\034\ufdfe\143\ufdfe\314\ufdfe\315" +
    "\ufdfe\001\002\000\006\004\204\005\207\001\002\000\004" +
    "\034\u0253\001\002\000\006\004\204\005\207\001\002\000" +
    "\004\041\u0255\001\002\000\014\033\ufdf8\034\ufdf8\143\ufdf8" +
    "\314\ufdf8\315\ufdf8\001\002\000\012\033\ufe09\143\ufe09\314" +
    "\ufe09\315\ufe09\001\002\000\004\040\u0258\001\002\000\004" +
    "\011\112\001\002\000\004\041\u025a\001\002\000\004\151" +
    "\u025b\001\002\000\004\011\112\001\002\000\004\040\u025d" +
    "\001\002\000\004\011\112\001\002\000\004\041\u025f\001" +
    "\002\000\012\033\ufe07\143\ufe07\314\ufe07\315\ufe07\001\002" +
    "\000\004\011\112\001\002\000\012\033\ufe0c\143\ufe0c\314" +
    "\ufe0c\315\ufe0c\001\002\000\012\033\ufe1e\143\ufe1e\314\ufe1e" +
    "\315\ufe1e\001\002\000\014\033\ufdf7\106\u0264\143\ufdf7\314" +
    "\ufdf7\315\ufdf7\001\002\000\014\075\u0269\107\u0268\111\u0267" +
    "\112\u0266\113\u026a\001\002\000\012\033\ufdf6\143\ufdf6\314" +
    "\ufdf6\315\ufdf6\001\002\000\004\025\u0275\001\002\000\014" +
    "\033\ufdf0\034\ufdf0\143\ufdf0\314\ufdf0\315\ufdf0\001\002\000" +
    "\004\025\u0273\001\002\000\004\025\u0271\001\002\000\004" +
    "\025\u026f\001\002\000\014\033\ufdf3\034\u026c\143\ufdf3\314" +
    "\ufdf3\315\ufdf3\001\002\000\014\075\u0269\107\u0268\111\u0267" +
    "\112\u0266\113\u026a\001\002\000\012\033\ufdf5\143\ufdf5\314" +
    "\ufdf5\315\ufdf5\001\002\000\012\033\ufdf4\143\ufdf4\314\ufdf4" +
    "\315\ufdf4\001\002\000\004\007\u0270\001\002\000\014\033" +
    "\ufdee\034\ufdee\143\ufdee\314\ufdee\315\ufdee\001\002\000\004" +
    "\011\u0272\001\002\000\014\033\ufdf2\034\ufdf2\143\ufdf2\314" +
    "\ufdf2\315\ufdf2\001\002\000\004\011\u0274\001\002\000\014" +
    "\033\ufdf1\034\ufdf1\143\ufdf1\314\ufdf1\315\ufdf1\001\002\000" +
    "\004\011\u0276\001\002\000\014\033\ufdef\034\ufdef\143\ufdef" +
    "\314\ufdef\315\ufdef\001\002\000\010\076\ufe19\164\ufe19\306" +
    "\ufe19\001\002\000\010\076\ufe18\164\ufe18\306\ufe18\001\002" +
    "\000\012\033\ufe21\143\ufe21\314\ufe21\315\ufe21\001\002\000" +
    "\010\076\u027e\164\u027d\306\u027b\001\002\000\004\011\u0284" +
    "\001\002\000\012\033\ufe1a\143\ufe1a\314\ufe1a\315\ufe1a\001" +
    "\002\000\004\245\u0282\001\002\000\004\075\u027f\001\002" +
    "\000\004\025\u0280\001\002\000\004\011\u0281\001\002\000" +
    "\012\033\ufe17\143\ufe17\314\ufe17\315\ufe17\001\002\000\004" +
    "\307\u0283\001\002\000\012\033\ufe15\143\ufe15\314\ufe15\315" +
    "\ufe15\001\002\000\012\033\ufe16\143\ufe16\314\ufe16\315\ufe16" +
    "\001\002\000\004\077\ufe12\001\002\000\012\033\ufe20\143" +
    "\ufe20\314\ufe20\315\ufe20\001\002\000\004\077\ufe13\001\002" +
    "\000\004\077\u0289\001\002\000\004\011\112\001\002\000" +
    "\012\101\u028d\102\u028f\103\u028b\104\u028e\001\002\000\012" +
    "\033\ufe11\143\ufe11\314\ufe11\315\ufe11\001\002\000\012\033" +
    "\ufe14\143\ufe14\314\ufe14\315\ufe14\001\002\000\012\033\ufe0e" +
    "\143\ufe0e\314\ufe0e\315\ufe0e\001\002\000\012\033\ufe0f\143" +
    "\ufe0f\314\ufe0f\315\ufe0f\001\002\000\012\033\ufe10\143\ufe10" +
    "\314\ufe10\315\ufe10\001\002\000\026\004\154\005\157\006" +
    "\156\007\152\033\ufdea\047\u0293\111\155\143\ufdea\314\ufdea" +
    "\315\ufdea\001\002\000\014\033\ufde8\034\u0295\143\ufde8\314" +
    "\ufde8\315\ufde8\001\002\000\012\033\ufded\143\ufded\314\ufded" +
    "\315\ufded\001\002\000\004\011\u0294\001\002\000\014\033" +
    "\ufde8\034\u0295\143\ufde8\314\ufde8\315\ufde8\001\002\000\026" +
    "\004\154\005\157\006\156\007\152\033\ufdea\047\u0293\111" +
    "\155\143\ufdea\314\ufdea\315\ufdea\001\002\000\012\033\ufdeb" +
    "\143\ufdeb\314\ufdeb\315\ufdeb\001\002\000\012\033\ufde9\143" +
    "\ufde9\314\ufde9\315\ufde9\001\002\000\012\033\ufdec\143\ufdec" +
    "\314\ufdec\315\ufdec\001\002\000\004\011\112\001\002\000" +
    "\004\011\uff37\001\002\000\010\040\u029d\065\uff34\066\uff34" +
    "\001\002\000\006\065\u02a5\066\u02a4\001\002\000\004\011" +
    "\u029e\001\002\000\006\034\u02a1\041\uff31\001\002\000\004" +
    "\041\u02a0\001\002\000\006\065\uff35\066\uff35\001\002\000" +
    "\004\011\u029e\001\002\000\004\041\uff33\001\002\000\004" +
    "\041\uff32\001\002\000\004\065\u02b2\001\002\000\004\040" +
    "\u02a8\001\002\000\012\033\uff38\143\uff38\314\uff38\315\uff38" +
    "\001\002\000\012\033\uff30\143\uff30\314\uff30\315\uff30\001" +
    "\002\000\014\004\154\005\157\006\156\007\152\111\155" +
    "\001\002\000\004\041\u02ae\001\002\000\006\034\u02ab\041" +
    "\uff29\001\002\000\014\004\154\005\157\006\156\007\152" +
    "\111\155\001\002\000\004\041\uff2b\001\002\000\004\041" +
    "\uff2a\001\002\000\014\033\uff2c\034\u02af\143\uff2c\314\uff2c" +
    "\315\uff2c\001\002\000\004\040\u02a8\001\002\000\012\033" +
    "\uff2e\143\uff2e\314\uff2e\315\uff2e\001\002\000\012\033\uff2d" +
    "\143\uff2d\314\uff2d\315\uff2d\001\002\000\012\033\uff2f\143" +
    "\uff2f\314\uff2f\315\uff2f\001\002\000\010\227\356\230\u0124" +
    "\316\361\001\002\000\012\033\ufea0\143\ufea0\314\ufea0\315" +
    "\ufea0\001\002\000\004\011\112\001\002\000\004\011\u02f2" +
    "\001\002\000\010\070\ufe75\207\ufe75\210\ufe75\001\002\000" +
    "\004\011\112\001\002\000\004\011\112\001\002\000\010" +
    "\070\ufe3e\207\u0218\210\u0219\001\002\000\004\061\u02bc\001" +
    "\002\000\010\227\ufe9e\230\ufe9e\316\ufe9e\001\002\000\004" +
    "\070\u02be\001\002\000\004\011\112\001\002\000\012\033" +
    "\ufe9b\143\ufe9b\314\ufe9b\315\ufe9b\001\002\000\004\077\u02c1" +
    "\001\002\000\004\011\112\001\002\000\004\040\u02c3\001" +
    "\002\000\004\011\112\001\002\000\006\034\u02ce\041\ufe70" +
    "\001\002\000\012\034\uff55\041\uff55\200\u01f5\201\u01f6\001" +
    "\002\000\004\041\u02c7\001\002\000\014\033\ufe6d\143\ufe6d" +
    "\212\u02c9\314\ufe6d\315\ufe6d\001\002\000\012\033\ufe73\143" +
    "\ufe73\314\ufe73\315\ufe73\001\002\000\004\040\u02ca\001\002" +
    "\000\004\011\112\001\002\000\004\041\u02cc\001\002\000" +
    "\012\033\ufe6e\143\ufe6e\314\ufe6e\315\ufe6e\001\002\000\006" +
    "\034\ufe6f\041\ufe6f\001\002\000\004\011\112\001\002\000" +
    "\004\041\ufe72\001\002\000\004\041\ufe71\001\002\000\012" +
    "\033\ufe98\143\ufe98\314\ufe98\315\ufe98\001\002\000\004\040" +
    "\u02d4\001\002\000\012\033\ufe9a\143\ufe9a\314\ufe9a\315\ufe9a" +
    "\001\002\000\012\011\112\100\u02d6\146\u02d7\154\u02d5\001" +
    "\002\000\004\147\u02e9\001\002\000\004\011\u02e7\001\002" +
    "\000\004\147\u02e4\001\002\000\004\041\u02e0\001\002\000" +
    "\052\117\u0134\120\u0131\121\u0136\122\u0132\123\u013e\124\u0130" +
    "\125\u0137\126\u013d\127\u0133\130\u012f\131\u0135\132\u013a\133" +
    "\u0138\134\u012d\135\u013c\136\u012c\137\u013f\140\u0139\141\u013b" +
    "\317\u0140\001\002\000\006\034\u02db\041\ufe69\001\002\000" +
    "\012\011\112\100\u02d6\146\u02d7\154\u02d5\001\002\000\004" +
    "\041\ufe6b\001\002\000\004\041\ufe6a\001\002\000\026\034" +
    "\ufe4c\041\ufe4c\066\u0209\111\u0208\116\u0207\145\u020a\146\u020c" +
    "\150\u0204\154\u020d\155\u020b\001\002\000\006\034\ufe68\041" +
    "\ufe68\001\002\000\014\033\ufe35\077\u02e2\143\ufe35\314\ufe35" +
    "\315\ufe35\001\002\000\012\033\ufe6c\143\ufe6c\314\ufe6c\315" +
    "\ufe6c\001\002\000\004\146\u02e3\001\002\000\012\033\ufe36" +
    "\143\ufe36\314\ufe36\315\ufe36\001\002\000\014\034\ufe3e\040" +
    "\ufe3e\041\ufe3e\207\u0218\210\u0219\001\002\000\010\034\ufe41" +
    "\040\u021c\041\ufe41\001\002\000\006\034\ufe66\041\ufe66\001" +
    "\002\000\022\066\u0209\111\u0208\116\u0207\145\u020a\146\u020c" +
    "\150\u0204\154\u020d\155\u020b\001\002\000\006\034\ufe67\041" +
    "\ufe67\001\002\000\004\040\u02ea\001\002\000\004\011\112" +
    "\001\002\000\004\041\u02ec\001\002\000\004\151\u02ed\001" +
    "\002\000\004\011\112\001\002\000\004\040\u02ef\001\002" +
    "\000\004\011\112\001\002\000\004\041\u02f1\001\002\000" +
    "\006\034\ufe65\041\ufe65\001\002\000\020\033\ufe32\106\ufe32" +
    "\143\ufe32\162\u02f4\211\u02f5\314\ufe32\315\ufe32\001\002\000" +
    "\012\033\ufe99\143\ufe99\314\ufe99\315\ufe99\001\002\000\004" +
    "\112\ufe30\001\002\000\004\112\ufe31\001\002\000\004\112" +
    "\u0305\001\002\000\014\033\ufe2e\106\u02f8\143\ufe2e\314\ufe2e" +
    "\315\ufe2e\001\002\000\006\107\u02fd\313\u02fa\001\002\000" +
    "\012\033\ufe34\143\ufe34\314\ufe34\315\ufe34\001\002\000\004" +
    "\025\u0303\001\002\000\012\033\ufe2f\143\ufe2f\314\ufe2f\315" +
    "\ufe2f\001\002\000\014\033\ufe2b\034\u0300\143\ufe2b\314\ufe2b" +
    "\315\ufe2b\001\002\000\004\025\u02fe\001\002\000\004\011" +
    "\u02ff\001\002\000\014\033\ufe2a\034\ufe2a\143\ufe2a\314\ufe2a" +
    "\315\ufe2a\001\002\000\006\107\u02fd\313\u02fa\001\002\000" +
    "\012\033\ufe2d\143\ufe2d\314\ufe2d\315\ufe2d\001\002\000\012" +
    "\033\ufe2c\143\ufe2c\314\ufe2c\315\ufe2c\001\002\000\006\077" +
    "\341\264\342\001\002\000\014\033\ufe29\034\ufe29\143\ufe29" +
    "\314\ufe29\315\ufe29\001\002\000\004\011\u0306\001\002\000" +
    "\014\033\ufe33\106\ufe33\143\ufe33\314\ufe33\315\ufe33\001\002" +
    "\000\016\033\ufe92\077\u030b\143\ufe92\306\u0309\314\ufe92\315" +
    "\ufe92\001\002\000\012\033\ufe9c\143\ufe9c\314\ufe9c\315\ufe9c" +
    "\001\002\000\004\011\u033b\001\002\000\012\033\ufe95\143" +
    "\ufe95\314\ufe95\315\ufe95\001\002\000\006\040\ufe90\146\u030c" +
    "\001\002\000\004\040\ufe91\001\002\000\004\040\u030f\001" +
    "\002\000\012\033\ufe94\143\ufe94\314\ufe94\315\ufe94\001\002" +
    "\000\006\075\u0312\214\u0310\001\002\000\004\025\ufe8b\001" +
    "\002\000\004\025\u0313\001\002\000\004\025\ufe8c\001\002" +
    "\000\004\007\u0314\001\002\000\004\034\u0315\001\002\000" +
    "\010\215\u0319\216\u0318\217\u0316\001\002\000\004\025\ufe89" +
    "\001\002\000\004\025\u031a\001\002\000\004\025\ufe88\001" +
    "\002\000\004\025\ufe8a\001\002\000\004\007\u031b\001\002" +
    "\000\006\034\u031d\041\ufe86\001\002\000\004\041\u0337\001" +
    "\002\000\010\220\u0324\221\u0323\226\u0322\001\002\000\006" +
    "\034\ufe84\041\ufe84\001\002\000\006\034\u031d\041\ufe86\001" +
    "\002\000\006\034\ufe85\041\ufe85\001\002\000\006\034\ufe83" +
    "\041\ufe83\001\002\000\004\025\u0330\001\002\000\004\025" +
    "\u032c\001\002\000\004\025\u0325\001\002\000\006\004\204" +
    "\005\207\001\002\000\016\034\ufe7c\041\ufe7c\222\u0328\223" +
    "\u032b\224\u032a\225\u0327\001\002\000\006\034\ufe7d\041\ufe7d" +
    "\001\002\000\006\034\ufe80\041\ufe80\001\002\000\006\034" +
    "\ufe81\041\ufe81\001\002\000\006\034\ufe7e\041\ufe7e\001\002" +
    "\000\006\034\ufe7f\041\ufe7f\001\002\000\012\004\204\005" +
    "\207\034\ufe79\041\ufe79\001\002\000\006\034\ufe7b\041\ufe7b" +
    "\001\002\000\016\034\ufe7c\041\ufe7c\222\u0328\223\u032b\224" +
    "\u032a\225\u0327\001\002\000\006\034\ufe7a\041\ufe7a\001\002" +
    "\000\006\004\204\005\207\001\002\000\020\020\u0333\034" +
    "\ufe7c\041\ufe7c\222\u0328\223\u032b\224\u032a\225\u0327\001\002" +
    "\000\006\034\ufe78\041\ufe78\001\002\000\006\034\ufe76\041" +
    "\ufe76\001\002\000\006\034\ufe77\041\ufe77\001\002\000\004" +
    "\041\ufe82\001\002\000\004\041\ufe87\001\002\000\014\033" +
    "\ufe8d\034\u0338\143\ufe8d\314\ufe8d\315\ufe8d\001\002\000\004" +
    "\040\u030f\001\002\000\012\033\ufe8f\143\ufe8f\314\ufe8f\315" +
    "\ufe8f\001\002\000\012\033\ufe8e\143\ufe8e\314\ufe8e\315\ufe8e" +
    "\001\002\000\012\033\ufe93\143\ufe93\314\ufe93\315\ufe93\001" +
    "\002\000\012\033\ufe96\143\ufe96\314\ufe96\315\ufe96\001\002" +
    "\000\012\033\ufe97\143\ufe97\314\ufe97\315\ufe97\001\002\000" +
    "\012\033\ufe9f\143\ufe9f\314\ufe9f\315\ufe9f\001\002\000\004" +
    "\002\ufff0\001\002\000\004\002\001\001\002\000\020\011" +
    "\112\033\uff06\047\325\106\uff06\143\uff06\314\uff06\315\uff06" +
    "\001\002\000\014\033\uff14\106\u0343\143\uff14\314\uff14\315" +
    "\uff14\001\002\000\004\270\u0350\001\002\000\012\033\303" +
    "\143\304\314\302\315\306\001\002\000\042\003\u01ad\054" +
    "\026\055\040\056\037\057\010\060\025\061\030\062\011" +
    "\063\032\143\u01a8\233\004\234\042\236\u01af\240\022\246" +
    "\u0346\247\041\001\002\000\006\242\322\243\320\001\002" +
    "\000\046\003\u01ad\054\026\055\040\056\037\057\010\060" +
    "\025\061\030\062\011\063\032\143\u01a8\233\004\234\042" +
    "\236\u01af\240\022\244\uff0e\245\uff0e\246\u0346\247\041\001" +
    "\002\000\046\003\u01ad\054\026\055\040\056\037\057\010" +
    "\060\025\061\030\062\011\063\032\143\u01a8\233\004\234" +
    "\042\236\u01af\240\022\244\uff0e\245\uff0e\246\u0346\247\041" +
    "\001\002\000\006\244\uff18\245\uff18\001\002\000\006\244" +
    "\uff10\245\uff10\001\002\000\006\244\uff0f\245\uff0f\001\002" +
    "\000\006\244\uff11\245\uff11\001\002\000\016\011\112\033" +
    "\uff06\047\325\143\uff06\314\uff06\315\uff06\001\002\000\012" +
    "\033\303\143\304\314\302\315\306\001\002\000\046\003" +
    "\uff00\054\uff00\055\uff00\056\uff00\057\uff00\060\uff00\061\uff00" +
    "\062\uff00\063\uff00\143\uff00\233\uff00\234\uff00\236\uff00\240" +
    "\uff00\244\uff00\245\uff00\246\uff00\247\uff00\001\002\000\014" +
    "\007\u0351\033\uff12\143\uff12\314\uff12\315\uff12\001\002\000" +
    "\012\033\uff13\143\uff13\314\uff13\315\uff13\001\002\000\012" +
    "\033\uff15\143\uff15\314\uff15\315\uff15\001\002\000\042\002" +
    "\ufffe\003\033\054\026\055\040\056\037\057\010\060\025" +
    "\061\030\062\011\063\032\143\024\233\004\234\042\236" +
    "\035\240\022\247\041\001\002\000\004\002\ufff8\001\002" +
    "\000\042\002\ufffe\003\033\054\026\055\040\056\037\057" +
    "\010\060\025\061\030\062\011\063\032\143\024\233\004" +
    "\234\042\236\035\240\022\247\041\001\002\000\004\002" +
    "\ufffb\001\002\000\042\002\ufffe\003\033\054\026\055\040" +
    "\056\037\057\010\060\025\061\030\062\011\063\032\143" +
    "\024\233\004\234\042\236\035\240\022\247\041\001\002" +
    "\000\004\002\ufff2\001\002\000\042\002\ufffe\003\033\054" +
    "\026\055\040\056\037\057\010\060\025\061\030\062\011" +
    "\063\032\143\024\233\004\234\042\236\035\240\022\247" +
    "\041\001\002\000\004\002\ufff5\001\002\000\042\002\ufffe" +
    "\003\033\054\026\055\040\056\037\057\010\060\025\061" +
    "\030\062\011\063\032\143\024\233\004\234\042\236\035" +
    "\240\022\247\041\001\002\000\004\002\ufff7\001\002\000" +
    "\042\002\ufffe\003\033\054\026\055\040\056\037\057\010" +
    "\060\025\061\030\062\011\063\032\143\024\233\004\234" +
    "\042\236\035\240\022\247\041\001\002\000\004\002\ufff4" +
    "\001\002\000\004\011\112\001\002\000\012\033\uffb9\143" +
    "\uffb9\314\uffb9\315\uffb9\001\002\000\032\004\uffb3\005\uffb3" +
    "\006\uffb3\011\uffb3\016\uffb3\040\uffb3\047\uffb3\202\uffb3\203" +
    "\uffb3\204\uffb3\205\uffb3\206\uffb3\001\002\000\032\004\224" +
    "\005\223\006\233\011\112\016\u03cb\040\232\047\u03ce\202" +
    "\u037b\203\u037c\204\u037d\205\u037e\206\u0381\001\002\000\032" +
    "\004\uffb2\005\uffb2\006\uffb2\011\uffb2\016\uffb2\040\uffb2\047" +
    "\uffb2\202\uffb2\203\uffb2\204\uffb2\205\uffb2\206\uffb2\001\002" +
    "\000\004\162\u0367\001\002\000\010\004\204\005\207\040" +
    "\205\001\002\000\032\004\uffb1\005\uffb1\006\uffb1\011\uffb1" +
    "\016\uffb1\040\uffb1\047\uffb1\202\uffb1\203\uffb1\204\uffb1\205" +
    "\uffb1\206\uffb1\001\002\000\004\011\112\001\002\000\044" +
    "\011\u03b5\033\uff8b\034\uff8b\143\uff8b\163\uff8b\165\u03b6\167" +
    "\uff8b\170\uff8b\171\uff8b\172\uff8b\173\uff8b\174\uff8b\176\uff8b" +
    "\177\uff8b\211\uff8b\314\uff8b\315\uff8b\001\002\000\036\033" +
    "\uff87\143\uff87\163\uff87\167\u036a\170\u036c\171\uff87\172\uff87" +
    "\173\uff87\174\uff82\176\u036b\177\u036f\211\uff87\314\uff87\315" +
    "\uff87\001\002\000\006\174\uff80\175\u0371\001\002\000\004" +
    "\174\uff86\001\002\000\006\174\uff80\175\u0371\001\002\000" +
    "\004\174\u03b3\001\002\000\024\033\uff7d\143\uff7d\163\115" +
    "\171\uff7d\172\uff7d\173\uff7d\211\uff7d\314\uff7d\315\uff7d\001" +
    "\002\000\006\174\uff80\175\u0371\001\002\000\004\174\uff83" +
    "\001\002\000\004\174\uff81\001\002\000\022\033\uff63\143" +
    "\uff63\171\u0373\172\uff63\173\uff63\211\uff63\314\uff63\315\uff63" +
    "\001\002\000\004\213\u03ad\001\002\000\020\033\uff5f\143" +
    "\uff5f\172\uff5f\173\u0375\211\uff5f\314\uff5f\315\uff5f\001\002" +
    "\000\016\011\112\202\u037b\203\u037c\204\u037d\205\u037e\206" +
    "\u0381\001\002\000\016\033\uff5a\143\uff5a\172\u0377\211\uff5a" +
    "\314\uff5a\315\uff5a\001\002\000\004\213\u0379\001\002\000" +
    "\014\033\uffb5\143\uffb5\211\uffb5\314\uffb5\315\uffb5\001\002" +
    "\000\016\011\112\202\u037b\203\u037c\204\u037d\205\u037e\206" +
    "\u0381\001\002\000\046\021\uff9e\022\uff9e\023\uff9e\024\uff9e" +
    "\025\uff9e\026\uff9e\027\uff9e\033\uff9e\034\uff9e\143\uff9e\144" +
    "\uff9e\162\uff9e\165\uff9e\200\uff9e\201\uff9e\211\uff9e\314\uff9e" +
    "\315\uff9e\001\002\000\004\040\u03a3\001\002\000\004\040" +
    "\u03a0\001\002\000\004\040\u039d\001\002\000\004\040\u039a" +
    "\001\002\000\022\033\uff55\034\uff55\143\uff55\200\u01f5\201" +
    "\u01f6\211\uff55\314\uff55\315\uff55\001\002\000\042\021\uff53" +
    "\022\uff53\023\uff53\024\uff53\025\uff53\026\uff53\027\uff53\033" +
    "\uff53\034\uff53\143\uff53\144\uff53\200\uff53\201\uff53\211\uff53" +
    "\314\uff53\315\uff53\001\002\000\004\040\u038d\001\002\000" +
    "\046\021\uff54\022\uff54\023\uff54\024\uff54\025\uff54\026\uff54" +
    "\027\uff54\033\uff54\034\uff54\040\u0384\045\u0383\143\uff54\144" +
    "\uff54\200\uff54\201\uff54\211\uff54\314\uff54\315\uff54\001\002" +
    "\000\046\021\uff9c\022\uff9c\023\uff9c\024\uff9c\025\uff9c\026" +
    "\uff9c\027\uff9c\033\uff9c\034\uff9c\143\uff9c\144\uff9c\162\uff9c" +
    "\165\uff9c\200\uff9c\201\uff9c\211\uff9c\314\uff9c\315\uff9c\001" +
    "\002\000\016\004\154\005\157\006\156\007\152\011\112" +
    "\111\155\001\002\000\006\034\u0388\041\uff97\001\002\000" +
    "\004\041\u038b\001\002\000\006\034\u0388\041\uff97\001\002" +
    "\000\016\004\154\005\157\006\156\007\152\011\112\111" +
    "\155\001\002\000\004\041\uff95\001\002\000\004\041\uff98" +
    "\001\002\000\046\021\uff9d\022\uff9d\023\uff9d\024\uff9d\025" +
    "\uff9d\026\uff9d\027\uff9d\033\uff9d\034\uff9d\143\uff9d\144\uff9d" +
    "\162\uff9d\165\uff9d\200\uff9d\201\uff9d\211\uff9d\314\uff9d\315" +
    "\uff9d\001\002\000\004\041\uff96\001\002\000\014\004\204" +
    "\005\207\011\uff93\016\u038f\166\u038e\001\002\000\004\011" +
    "\uff94\001\002\000\004\041\uff9a\001\002\000\004\041\uff9b" +
    "\001\002\000\004\041\u0394\001\002\000\004\011\112\001" +
    "\002\000\004\041\uff99\001\002\000\046\021\uffa0\022\uffa0" +
    "\023\uffa0\024\uffa0\025\uffa0\026\uffa0\027\uffa0\033\uffa0\034" +
    "\uffa0\143\uffa0\144\uffa0\162\uffa0\165\uffa0\200\uffa0\201\uffa0" +
    "\211\uffa0\314\uffa0\315\uffa0\001\002\000\016\033\uff58\034" +
    "\u0396\143\uff58\211\uff58\314\uff58\315\uff58\001\002\000\004" +
    "\011\112\001\002\000\014\033\uff5b\143\uff5b\211\uff5b\314" +
    "\uff5b\315\uff5b\001\002\000\016\033\uff58\034\u0396\143\uff58" +
    "\211\uff58\314\uff58\315\uff58\001\002\000\014\033\uff59\143" +
    "\uff59\211\uff59\314\uff59\315\uff59\001\002\000\014\004\204" +
    "\005\207\011\uff93\016\u038f\166\u038e\001\002\000\004\041" +
    "\u039c\001\002\000\046\021\uff9f\022\uff9f\023\uff9f\024\uff9f" +
    "\025\uff9f\026\uff9f\027\uff9f\033\uff9f\034\uff9f\143\uff9f\144" +
    "\uff9f\162\uff9f\165\uff9f\200\uff9f\201\uff9f\211\uff9f\314\uff9f" +
    "\315\uff9f\001\002\000\014\004\204\005\207\011\uff93\016" +
    "\u038f\166\u038e\001\002\000\004\041\u039f\001\002\000\046" +
    "\021\uffa1\022\uffa1\023\uffa1\024\uffa1\025\uffa1\026\uffa1\027" +
    "\uffa1\033\uffa1\034\uffa1\143\uffa1\144\uffa1\162\uffa1\165\uffa1" +
    "\200\uffa1\201\uffa1\211\uffa1\314\uffa1\315\uffa1\001\002\000" +
    "\014\004\204\005\207\011\uff93\016\u038f\166\u038e\001\002" +
    "\000\004\041\u03a2\001\002\000\046\021\uffa3\022\uffa3\023" +
    "\uffa3\024\uffa3\025\uffa3\026\uffa3\027\uffa3\033\uffa3\034\uffa3" +
    "\143\uffa3\144\uffa3\162\uffa3\165\uffa3\200\uffa3\201\uffa3\211" +
    "\uffa3\314\uffa3\315\uffa3\001\002\000\014\004\204\005\207" +
    "\011\uff93\016\u038f\166\u038e\001\002\000\004\041\u03a5\001" +
    "\002\000\046\021\uffa2\022\uffa2\023\uffa2\024\uffa2\025\uffa2" +
    "\026\uffa2\027\uffa2\033\uffa2\034\uffa2\143\uffa2\144\uffa2\162" +
    "\uffa2\165\uffa2\200\uffa2\201\uffa2\211\uffa2\314\uffa2\315\uffa2" +
    "\001\002\000\022\021\120\022\121\023\124\024\131\025" +
    "\125\026\127\027\132\144\133\001\002\000\016\033\uff60" +
    "\143\uff60\172\uff60\211\uff60\314\uff60\315\uff60\001\002\000" +
    "\014\004\154\005\157\006\156\007\152\111\155\001\002" +
    "\000\026\030\141\031\145\033\uff5c\143\uff5c\152\142\153" +
    "\144\172\uff5c\211\uff5c\314\uff5c\315\uff5c\001\002\000\016" +
    "\033\uff5e\143\uff5e\172\uff5e\211\uff5e\314\uff5e\315\uff5e\001" +
    "\002\000\016\011\112\202\u037b\203\u037c\204\u037d\205\u037e" +
    "\206\u0381\001\002\000\016\033\uff5d\143\uff5d\172\uff5d\211" +
    "\uff5d\314\uff5d\315\uff5d\001\002\000\004\011\112\001\002" +
    "\000\022\033\uff61\034\u03af\143\uff61\172\uff61\173\uff61\211" +
    "\uff61\314\uff61\315\uff61\001\002\000\004\011\112\001\002" +
    "\000\020\033\uff64\143\uff64\172\uff64\173\uff64\211\uff64\314" +
    "\uff64\315\uff64\001\002\000\022\033\uff61\034\u03af\143\uff61" +
    "\172\uff61\173\uff61\211\uff61\314\uff61\315\uff61\001\002\000" +
    "\020\033\uff62\143\uff62\172\uff62\173\uff62\211\uff62\314\uff62" +
    "\315\uff62\001\002\000\004\011\112\001\002\000\010\011" +
    "\u03b5\077\uff8b\165\u03b6\001\002\000\042\033\uff8c\034\uff8c" +
    "\077\uff8c\143\uff8c\163\uff8c\167\uff8c\170\uff8c\171\uff8c\172" +
    "\uff8c\173\uff8c\174\uff8c\176\uff8c\177\uff8c\211\uff8c\314\uff8c" +
    "\315\uff8c\001\002\000\006\007\u03bf\011\u03be\001\002\000" +
    "\004\077\u03b8\001\002\000\004\011\112\001\002\000\004" +
    "\025\u03ba\001\002\000\004\011\112\001\002\000\036\033" +
    "\uff87\143\uff87\163\uff87\167\u036a\170\u036c\171\uff87\172\uff87" +
    "\173\uff87\174\uff82\176\u036b\177\u036f\211\uff87\314\uff87\315" +
    "\uff87\001\002\000\024\033\uff7f\143\uff7f\163\uff7f\171\uff7f" +
    "\172\uff7f\173\uff7f\211\uff7f\314\uff7f\315\uff7f\001\002\000" +
    "\024\033\uff88\143\uff88\163\uff88\171\uff88\172\uff88\173\uff88" +
    "\211\uff88\314\uff88\315\uff88\001\002\000\044\033\uff89\034" +
    "\uff89\077\uff89\143\uff89\162\uff89\163\uff89\167\uff89\170\uff89" +
    "\171\uff89\172\uff89\173\uff89\174\uff89\176\uff89\177\uff89\211" +
    "\uff89\314\uff89\315\uff89\001\002\000\044\033\uff8a\034\uff8a" +
    "\077\uff8a\143\uff8a\162\uff8a\163\uff8a\167\uff8a\170\uff8a\171" +
    "\uff8a\172\uff8a\173\uff8a\174\uff8a\176\uff8a\177\uff8a\211\uff8a" +
    "\314\uff8a\315\uff8a\001\002\000\042\033\uff8d\034\uff8d\077" +
    "\uff8d\143\uff8d\163\uff8d\167\uff8d\170\uff8d\171\uff8d\172\uff8d" +
    "\173\uff8d\174\uff8d\176\uff8d\177\uff8d\211\uff8d\314\uff8d\315" +
    "\uff8d\001\002\000\004\174\uff84\001\002\000\004\174\uff85" +
    "\001\002\000\040\033\uff8e\034\u03c4\143\uff8e\163\uff8e\167" +
    "\uff8e\170\uff8e\171\uff8e\172\uff8e\173\uff8e\174\uff8e\176\uff8e" +
    "\177\uff8e\211\uff8e\314\uff8e\315\uff8e\001\002\000\004\011" +
    "\112\001\002\000\036\033\uff90\143\uff90\163\uff90\167\uff90" +
    "\170\uff90\171\uff90\172\uff90\173\uff90\174\uff90\176\uff90\177" +
    "\uff90\211\uff90\314\uff90\315\uff90\001\002\000\036\033\uff8f" +
    "\143\uff8f\163\uff8f\167\uff8f\170\uff8f\171\uff8f\172\uff8f\173" +
    "\uff8f\174\uff8f\176\uff8f\177\uff8f\211\uff8f\314\uff8f\315\uff8f" +
    "\001\002\000\012\025\uffa4\034\uffac\162\uffac\165\uffac\001" +
    "\002\000\004\025\u03d6\001\002\000\010\034\uff91\162\uff91" +
    "\165\u03d0\001\002\000\004\162\uffb4\001\002\000\010\034" +
    "\uffa9\162\uffa9\165\uffa9\001\002\000\010\034\uffab\162\uffab" +
    "\165\uffab\001\002\000\026\014\uffba\015\uffba\016\uffba\017" +
    "\uffba\025\uffa6\034\uffba\040\u0384\045\u0383\162\uffba\165\uffba" +
    "\001\002\000\004\011\u03cf\001\002\000\012\025\uffa5\034" +
    "\uffa5\162\uffa5\165\uffa5\001\002\000\006\007\u03bf\011\u03be" +
    "\001\002\000\006\034\u03d2\162\uffa7\001\002\000\032\004" +
    "\224\005\223\006\233\011\112\016\u03cb\040\232\047\u03ce" +
    "\202\u037b\203\u037c\204\u037d\205\u037e\206\u0381\001\002\000" +
    "\004\162\uffad\001\002\000\004\162\uffa8\001\002\000\006" +
    "\034\uff92\162\uff92\001\002\000\020\011\112\047\u03ce\202" +
    "\u037b\203\u037c\204\u037d\205\u037e\206\u0381\001\002\000\010" +
    "\034\uffa4\162\uffa4\165\uffa4\001\002\000\010\034\uffaa\162" +
    "\uffaa\165\uffaa\001\002\000\014\034\uffa6\040\u0384\045\u0383" +
    "\162\uffa6\165\uffa6\001\002\000\042\002\ufffe\003\033\054" +
    "\026\055\040\056\037\057\010\060\025\061\030\062\011" +
    "\063\032\143\024\233\004\234\042\236\035\240\022\247" +
    "\041\001\002\000\004\002\ufff6\001\002\000\042\002\ufffe" +
    "\003\033\054\026\055\040\056\037\057\010\060\025\061" +
    "\030\062\011\063\032\143\024\233\004\234\042\236\035" +
    "\240\022\247\041\001\002\000\004\002\ufff9\001\002\000" +
    "\042\002\ufffe\003\033\054\026\055\040\056\037\057\010" +
    "\060\025\061\030\062\011\063\032\143\024\233\004\234" +
    "\042\236\035\240\022\247\041\001\002\000\004\002\ufffc" +
    "\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u03dd\000\042\002\022\003\017\004\011\011\030\012" +
    "\004\013\016\014\035\015\020\016\013\017\005\020\006" +
    "\021\014\022\012\152\033\204\026\212\015\001\001\000" +
    "\002\001\001\000\004\010\u03dd\001\001\000\004\010\u03db" +
    "\001\001\000\004\010\u03d9\001\001\000\006\036\u0363\037" +
    "\u0361\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\010\u035c\001\001\000\004\010\u035a\001\001\000\004\010" +
    "\u0358\001\001\000\004\010\u0356\001\001\000\004\010\u0354" +
    "\001\001\000\002\001\001\000\004\010\u0352\001\001\000" +
    "\004\156\u0340\001\001\000\002\001\001\000\040\003\u033e" +
    "\004\011\011\030\012\004\013\016\014\035\015\020\016" +
    "\013\017\005\020\006\021\014\022\012\152\033\204\026" +
    "\212\015\001\001\000\010\245\u02b2\246\u02b3\267\u02b9\001" +
    "\001\000\004\111\u0298\001\001\000\004\023\u028f\001\001" +
    "\000\012\170\u011a\213\u0121\214\u011e\332\u0122\001\001\000" +
    "\004\010\u0118\001\001\000\024\133\347\135\352\136\366" +
    "\141\367\144\364\147\357\150\354\151\356\213\363\001" +
    "\001\000\004\010\345\001\001\000\010\153\316\154\312" +
    "\167\313\001\001\000\004\023\307\001\001\000\004\010" +
    "\304\001\001\000\004\125\214\001\001\000\004\127\106" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\240" +
    "\043\001\001\000\004\237\045\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\232\052\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\233\054" +
    "\001\001\000\002\001\001\000\004\234\061\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\235\063\001\001\000\002\001\001\000" +
    "\004\236\067\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\011\072\001\001\000\004\241\073\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\242\076\001\001\000" +
    "\002\001\001\000\004\243\101\001\001\000\004\244\103" +
    "\001\001\000\002\001\001\000\004\243\104\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\040\205\102\202" +
    "\001\001\000\004\130\110\001\001\000\002\001\001\000" +
    "\004\023\112\001\001\000\004\024\175\001\001\000\004" +
    "\063\113\001\001\000\002\001\001\000\004\023\115\001" +
    "\001\000\010\067\121\070\127\071\125\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\026" +
    "\162\231\161\001\001\000\004\026\152\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\064\137\066\142\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\023" +
    "\145\065\146\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\067\121\070\147\071\125\001\001\000\002\001" +
    "\001\000\006\064\150\066\142\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\026\160\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\026\167\104\166\001\001\000\002\001\001\000\004\105" +
    "\171\001\001\000\006\026\167\104\172\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\025\200\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\102\211\001\001\000\004" +
    "\126\207\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\040\277\102\202\001\001\000\004\023\215\001\001\000" +
    "\002\001\001\000\004\023\217\001\001\000\002\001\001" +
    "\000\014\023\233\027\230\030\225\122\227\123\221\001" +
    "\001\000\004\124\273\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\031\271\001\001\000" +
    "\002\001\001\000\004\063\270\001\001\000\002\001\001" +
    "\000\010\023\233\027\234\030\225\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\035\236\001\001\000\002" +
    "\001\001\000\004\031\237\001\001\000\002\001\001\000" +
    "\010\023\233\027\267\030\225\001\001\000\010\023\233" +
    "\030\245\033\265\001\001\000\010\023\233\027\264\030" +
    "\225\001\001\000\010\023\233\030\245\033\244\001\001" +
    "\000\004\032\261\001\001\000\004\034\256\001\001\000" +
    "\010\023\233\027\247\030\225\001\001\000\004\035\250" +
    "\001\001\000\004\034\251\001\001\000\002\001\001\000" +
    "\010\023\233\030\245\033\255\001\001\000\010\023\233" +
    "\030\245\033\254\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\023\233\027\263\030\225" +
    "\001\001\000\010\023\233\027\262\030\225\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\032\266\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\023\274\001\001\000\002\001\001\000\002\001\001\000" +
    "\014\023\233\027\230\030\225\122\276\123\221\001\001" +
    "\000\002\001\001\000\004\126\300\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\040\003\306\004\011\011\030\012\004\013\016\014" +
    "\035\015\020\016\013\017\005\020\006\021\014\022\012" +
    "\152\033\204\026\212\015\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\010\310\001\001\000\040\003\311" +
    "\004\011\011\030\012\004\013\016\014\035\015\020\016" +
    "\013\017\005\020\006\021\014\022\012\152\033\204\026" +
    "\212\015\001\001\000\002\001\001\000\002\001\001\000" +
    "\040\003\344\004\011\011\030\012\004\013\016\014\035" +
    "\015\020\016\013\017\005\020\006\021\014\022\012\152" +
    "\033\204\026\212\015\001\001\000\006\156\330\161\327" +
    "\001\001\000\004\156\320\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\023\323\162\322\001\001\000\002" +
    "\001\001\000\004\010\326\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\163\332\001\001\000\006\023\323\162\331\001\001\000" +
    "\002\001\001\000\004\010\343\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\164\337\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\040\003\346\004\011\011\030\012\004\013\016\014\035" +
    "\015\020\016\013\017\005\020\006\021\014\022\012\152" +
    "\033\204\026\212\015\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\134\u0116\001\001\000\004\134\u010e\001" +
    "\001\000\002\001\001\000\004\134\u010c\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\134\u0106\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\134\u0100\001\001" +
    "\000\004\134\371\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\023\372\145\373\001\001\000" +
    "\004\146\375\001\001\000\002\001\001\000\006\023\372" +
    "\145\376\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\023\u0102\131\u0101\001\001\000\002" +
    "\001\001\000\004\132\u0104\001\001\000\006\023\u0102\131" +
    "\u0105\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\023\u0108\137\u0107\001\001\000\002\001\001\000\004\140" +
    "\u010a\001\001\000\006\023\u0108\137\u010b\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\023\u0110\142\u010f\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\023\u0112\001\001\000\004\143" +
    "\u0114\001\001\000\006\023\u0110\142\u0115\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\023\u0108\137\u0117\001" +
    "\001\000\002\001\001\000\040\003\u0119\004\011\011\030" +
    "\012\004\013\016\014\035\015\020\016\013\017\005\020" +
    "\006\021\014\022\012\152\033\204\026\212\015\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\023\u0286\336" +
    "\u0285\337\u0287\001\001\000\006\333\u0278\334\u0279\001\001" +
    "\000\004\350\u0261\001\001\000\002\001\001\000\006\023" +
    "\u01e8\341\u01e9\001\001\000\006\023\u01dd\317\u01de\001\001" +
    "\000\004\023\u0190\001\001\000\002\001\001\000\004\023" +
    "\u0124\001\001\000\002\001\001\000\006\215\u0128\216\u0126" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\301\u012d\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\222\u015d\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\331\u0148\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\102\u0141\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\102\u0144" +
    "\001\001\000\002\001\001\000\004\102\u0146\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\102\u014a\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\102\u0150\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\102\u0153\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\102\u0156\001\001\000\002\001\001\000\004\102" +
    "\u0158\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\102\u015b\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\220\u0178\001\001\000\010\204\u015f\223\u0161\225\u0165" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\226\u016b\001\001\000\002\001\001\000\004" +
    "\164\u016a\001\001\000\004\224\u0168\001\001\000\002\001" +
    "\001\000\010\204\u015f\223\u0169\225\u0165\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\226\u0170\001\001\000\002\001\001\000\004\205" +
    "\u0177\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\227\u017b\001\001\000\002\001\001\000\004" +
    "\011\u017c\001\001\000\002\001\001\000\004\010\u017d\001" +
    "\001\000\004\230\u017f\001\001\000\006\026\162\231\u0182" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\026" +
    "\162\231\u0183\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\220\u0186\001\001\000\004\301" +
    "\u0187\001\001\000\004\175\u0189\001\001\000\002\001\001" +
    "\000\004\221\u018a\001\001\000\004\217\u018d\001\001\000" +
    "\002\001\001\000\004\216\u018e\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\171\u0191\001" +
    "\001\000\004\172\u0195\001\001\000\004\102\u0193\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\200\u0197\001" +
    "\001\000\010\201\u01c5\202\u01c3\204\u01c4\001\001\000\004" +
    "\206\u0199\001\001\000\002\001\001\000\004\207\u019b\001" +
    "\001\000\002\001\001\000\002\001\001\000\044\005\u01a0" +
    "\006\u01ab\007\u01a9\011\u01aa\012\u019e\013\u01a5\014\u01af\015" +
    "\u01a6\016\u01a2\017\u019d\020\u019f\021\u01a4\022\u01a1\152\u01ad" +
    "\204\026\210\u01a8\212\u01a3\001\001\000\004\010\u01c1\001" +
    "\001\000\004\010\u01c0\001\001\000\004\010\u01bf\001\001" +
    "\000\046\005\u01a0\006\u01ab\007\u01a9\011\u01aa\012\u019e\013" +
    "\u01a5\014\u01af\015\u01a6\016\u01a2\017\u019d\020\u019f\021\u01a4" +
    "\022\u01a1\152\u01ad\204\026\210\u01be\211\u01bd\212\u01a3\001" +
    "\001\000\004\010\u01bc\001\001\000\004\010\u01bb\001\001" +
    "\000\004\010\u01ba\001\001\000\004\010\u01b9\001\001\000" +
    "\004\010\u01b8\001\001\000\004\010\u01b7\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\010" +
    "\u01b5\001\001\000\002\001\001\000\004\010\u01b4\001\001" +
    "\000\010\153\316\154\312\167\u01b3\001\001\000\004\023" +
    "\u01b1\001\001\000\004\010\u01b0\001\001\000\002\001\001" +
    "\000\004\010\u01b2\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\203\u01cb" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\205\u01c9\001\001\000\002" +
    "\001\001\000\010\201\u01cc\202\u01c3\204\u01c4\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\173\u01d1\301\u01ce" +
    "\001\001\000\004\175\u01da\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\177\u01d3\001\001\000\004\172\u01d4" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\174\u01d8\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\174\u01db\176\u01dc\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\023\u01e0" +
    "\320\u01e1\321\u01df\001\001\000\002\001\001\000\010\023" +
    "\u01e0\321\u01e5\322\u01e4\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\011\u01e3\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\023\u01e0\320\u01e7" +
    "\321\u01df\001\001\000\002\001\001\000\004\342\u01eb\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\023\u0200\343\u0201\345\u01ff\346\u01fe\001\001\000" +
    "\004\347\u01f1\001\001\000\004\325\u01fb\001\001\000\004" +
    "\325\u01fa\001\001\000\004\325\u01f3\001\001\000\002\001" +
    "\001\000\004\101\u01f6\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\326\u01f8\001\001\000" +
    "\004\325\u01f9\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\023\u0234\001\001\000\002\001\001\000\004\344\u0232" +
    "\001\001\000\004\301\u0202\001\001\000\002\001\001\000" +
    "\006\302\u0204\303\u0205\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\302\u022a\303\u0205\304\u022b\001\001\000" +
    "\004\327\u0229\001\001\000\002\001\001\000\004\301\u0228" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\023\u020f" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\023" +
    "\u0212\001\001\000\002\001\001\000\004\023\u0214\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\330\u0219\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\327\u021a" +
    "\001\001\000\002\001\001\000\004\325\u021c\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\023\u0220\305\u021f" +
    "\306\u0221\001\001\000\002\001\001\000\010\067\121\070" +
    "\u0225\071\125\001\001\000\006\066\u0223\307\u0222\001\001" +
    "\000\002\001\001\000\010\023\u0220\305\u0224\306\u0221\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\102\u022d\001\001" +
    "\000\002\001\001\000\004\102\u022f\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\023\u0200\343\u0233\345\u01ff" +
    "\346\u01fe\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\354\u0235\001\001\000\004\344\u0255\001\001\000\002" +
    "\001\001\000\004\327\u024f\001\001\000\002\001\001\000" +
    "\004\301\u024e\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\023\u0240\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\023\u0243\001\001\000\002\001\001\000\004\023" +
    "\u0245\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\330\u0248\001\001\000\004\327\u0249\001\001\000\002\001" +
    "\001\000\010\023\u0220\305\u024b\306\u0221\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\102\u0251\001\001\000\002" +
    "\001\001\000\004\102\u0253\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\023\u0258\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\023\u025b\001\001\000\002\001\001\000\004\023\u025d" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\023" +
    "\u0200\345\u0260\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\351\u0264\352\u026a\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\353" +
    "\u026c\001\001\000\006\351\u026d\352\u026a\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\335\u027b\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\023\u0289\001" +
    "\001\000\004\340\u028b\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\026\u0290\107\u0291\001\001\000\004\106\u0297" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\106" +
    "\u0295\001\001\000\006\026\u0290\107\u0296\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\023" +
    "\u029a\001\001\000\002\001\001\000\004\112\u029b\001\001" +
    "\000\004\115\u02a5\001\001\000\004\113\u029e\001\001\000" +
    "\004\114\u02a1\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\113\u02a2\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\116\u02a6\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\026\u02a9\120\u02a8\001" +
    "\001\000\002\001\001\000\004\121\u02ab\001\001\000\006" +
    "\026\u02a9\120\u02ac\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\117\u02af\001\001\000\004\116\u02b0\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\170\u033c\213\u0121\214\u033b\323\u033d\001\001\000\002" +
    "\001\001\000\006\023\u0306\247\u0307\001\001\000\004\310" +
    "\u02f2\001\001\000\002\001\001\000\006\023\u02d1\275\u02d2" +
    "\001\001\000\006\023\u01dd\317\u02d0\001\001\000\004\330" +
    "\u02bc\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\023\u02bf\270\u02be\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\023\u02c1\001\001\000\002" +
    "\001\001\000\010\023\u02c4\271\u02c5\272\u02c3\001\001\000" +
    "\004\273\u02ce\001\001\000\004\101\u02cc\001\001\000\002" +
    "\001\001\000\004\274\u02c7\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\023\u02c4\271\u02ca\272\u02c3\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\023\u02c4\271\u02cf\272\u02c3\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\023\u02d8\276\u02d7\277\u02d9\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\301\u02dd\001\001\000\004\300\u02db" +
    "\001\001\000\010\023\u02d8\276\u02dc\277\u02d9\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\302\u02de\303\u0205" +
    "\001\001\000\002\001\001\000\004\251\u02e0\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\330\u02e4\001\001\000\004\327\u02e5\001\001\000\002\001" +
    "\001\000\004\303\u02e7\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\023\u02ea\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\023\u02ed\001\001\000\002\001\001" +
    "\000\004\023\u02ef\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\311\u02f6\312\u02f5\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\313\u02f8\001\001\000\006\314\u02fa\316\u02fb\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\315\u0300\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\314\u0301\316\u02fb\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\164\u0303\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\252\u0309\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\250\u030c\001\001\000\002\001" +
    "\001\000\004\253\u030d\001\001\000\002\001\001\000\004" +
    "\324\u0310\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\255\u0316\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\256\u031b\001\001\000\002\001\001\000\012\257\u031e\261" +
    "\u031f\263\u031d\265\u0320\001\001\000\002\001\001\000\006" +
    "\256\u0334\260\u0335\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\102\u0325\001\001\000\004\262\u0328\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\102\u032d\264\u032c\001" +
    "\001\000\002\001\001\000\004\262\u032e\001\001\000\002" +
    "\001\001\000\004\102\u0330\001\001\000\006\262\u0333\266" +
    "\u0331\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\254" +
    "\u0338\001\001\000\004\253\u0339\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\023\323\162\u0341\001\001\000\004\157" +
    "\u0343\001\001\000\002\001\001\000\004\010\u0344\001\001" +
    "\000\046\005\u0346\006\u01ab\007\u01a9\011\u01aa\012\u019e\013" +
    "\u01a5\014\u01af\015\u01a6\016\u01a2\017\u019d\020\u019f\021\u01a4" +
    "\022\u01a1\152\u01ad\155\u0347\165\u0348\204\026\212\u01a3\001" +
    "\001\000\004\156\u034c\001\001\000\050\005\u0346\006\u01ab" +
    "\007\u01a9\011\u01aa\012\u019e\013\u01a5\014\u01af\015\u01a6\016" +
    "\u01a2\017\u019d\020\u019f\021\u01a4\022\u01a1\152\u01ad\155\u0347" +
    "\165\u034a\166\u034b\204\026\212\u01a3\001\001\000\050\005" +
    "\u0346\006\u01ab\007\u01a9\011\u01aa\012\u019e\013\u01a5\014\u01af" +
    "\015\u01a6\016\u01a2\017\u019d\020\u019f\021\u01a4\022\u01a1\152" +
    "\u01ad\155\u0347\165\u034a\166\u0349\204\026\212\u01a3\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\023\323\162\u034d\001\001\000\004" +
    "\010\u034e\001\001\000\002\001\001\000\004\160\u0351\001" +
    "\001\000\002\001\001\000\002\001\001\000\040\003\u0353" +
    "\004\011\011\030\012\004\013\016\014\035\015\020\016" +
    "\013\017\005\020\006\021\014\022\012\152\033\204\026" +
    "\212\015\001\001\000\002\001\001\000\040\003\u0355\004" +
    "\011\011\030\012\004\013\016\014\035\015\020\016\013" +
    "\017\005\020\006\021\014\022\012\152\033\204\026\212" +
    "\015\001\001\000\002\001\001\000\040\003\u0357\004\011" +
    "\011\030\012\004\013\016\014\035\015\020\016\013\017" +
    "\005\020\006\021\014\022\012\152\033\204\026\212\015" +
    "\001\001\000\002\001\001\000\040\003\u0359\004\011\011" +
    "\030\012\004\013\016\014\035\015\020\016\013\017\005" +
    "\020\006\021\014\022\012\152\033\204\026\212\015\001" +
    "\001\000\002\001\001\000\040\003\u035b\004\011\011\030" +
    "\012\004\013\016\014\035\015\020\016\013\017\005\020" +
    "\006\021\014\022\012\152\033\204\026\212\015\001\001" +
    "\000\002\001\001\000\040\003\u035d\004\011\011\030\012" +
    "\004\013\016\014\035\015\020\016\013\017\005\020\006" +
    "\021\014\022\012\152\033\204\026\212\015\001\001\000" +
    "\002\001\001\000\006\023\u0102\131\u035f\001\001\000\002" +
    "\001\001\000\002\001\001\000\022\023\u03cc\027\u03cb\030" +
    "\225\041\u03c9\042\u03c8\044\u03c7\045\u03c6\110\u0379\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\040\u0365\102" +
    "\202\001\001\000\002\001\001\000\006\023\u0367\053\u0368" +
    "\001\001\000\004\055\u03c2\001\001\000\006\057\u036d\060" +
    "\u036c\001\001\000\004\061\u03c1\001\001\000\002\001\001" +
    "\000\004\061\u03c0\001\001\000\002\001\001\000\004\063" +
    "\u0371\001\001\000\004\061\u036f\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\072\u0373\001\001\000\002\001" +
    "\001\000\004\074\u0375\001\001\000\014\023\u0381\045\u037f" +
    "\075\u03a6\103\u03a5\110\u0379\001\001\000\004\077\u0377\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\023\u0381" +
    "\045\u037f\103\u037e\110\u0379\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\101\u0394\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\023\u0386\026\u0384\050\u0385\001\001\000\004\047\u038b\001" +
    "\001\000\002\001\001\000\004\047\u0388\001\001\000\010" +
    "\023\u0386\026\u0384\050\u0389\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\046\u0390\051\u0391\102\u038f\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\023\u0392\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\100\u0396\001\001\000\004\023\u0397\001\001\000\002" +
    "\001\001\000\004\100\u0398\001\001\000\002\001\001\000" +
    "\010\046\u039a\051\u0391\102\u038f\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\046\u039d\051\u0391\102\u038f\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\046\u03a0" +
    "\051\u0391\102\u038f\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\046\u03a3\051\u0391\102\u038f\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\067\u03a7\001\001\000" +
    "\002\001\001\000\004\026\u03a8\001\001\000\006\066\u03aa" +
    "\076\u03a9\001\001\000\002\001\001\000\014\023\u0381\045" +
    "\u037f\075\u03ab\103\u03a5\110\u0379\001\001\000\002\001\001" +
    "\000\004\023\u03ad\001\001\000\004\073\u03af\001\001\000" +
    "\004\023\u03b0\001\001\000\002\001\001\000\004\073\u03b1" +
    "\001\001\000\002\001\001\000\004\023\u03b3\001\001\000" +
    "\004\055\u03b6\001\001\000\002\001\001\000\004\056\u03bf" +
    "\001\001\000\002\001\001\000\004\023\u03b8\001\001\000" +
    "\002\001\001\000\004\023\u03ba\001\001\000\010\057\u03bb" +
    "\060\u036c\062\u03bc\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\054\u03c4\001" +
    "\001\000\006\023\u0367\053\u03c5\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\052\u03d0\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\056\u03d4\001\001\000\004\043\u03d2" +
    "\001\001\000\022\023\u03cc\027\u03cb\030\225\041\u03d3\042" +
    "\u03c8\044\u03c7\045\u03c6\110\u0379\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\023\u03d8\044" +
    "\u03d7\045\u03d6\110\u0379\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\040\003\u03da\004\011\011" +
    "\030\012\004\013\016\014\035\015\020\016\013\017\005" +
    "\020\006\021\014\022\012\152\033\204\026\212\015\001" +
    "\001\000\002\001\001\000\040\003\u03dc\004\011\011\030" +
    "\012\004\013\016\014\035\015\020\016\013\017\005\020" +
    "\006\021\014\022\012\152\033\204\026\212\015\001\001" +
    "\000\002\001\001\000\040\003\u03de\004\011\011\030\012" +
    "\004\013\016\014\035\015\020\016\013\017\005\020\006" +
    "\021\014\022\012\152\033\204\026\212\015\001\001\000" +
    "\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Syntax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Syntax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Syntax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol s;
    private String errors_list = ""; 

    public String getErrorString(){
        return errors_list;
    }

    public final Class getSymbolContainer() {
        return sym.class;
    }

    public String symbl_name_from_id(int id){
    Field[] fields = getSymbolContainer().getFields();
    for(Field f : fields){
        try {
                    if (f.getInt(null)==id)
              return f.getName();
        } catch (IllegalArgumentException e) {
            //e.printStackTrace();
        } catch (IllegalAccessException ex) { 
                        //e.printStackTrace();
                } 
      }
    return "invalid symbol id";
    }

    public void syntax_error(Symbol s){
        this.s=s; 
        List<Integer> ids = expected_token_ids();
        LinkedList<String> list = new LinkedList<String>();
        for (Integer expected : ids){
            list.add(symbl_name_from_id(expected));
        }
        errors_list += "Line: " + (s.right + 1) + " and column: " + (s.left + 1) + ", '" + s.value +"', Error: missing symbol " + list + "\n";
        System.out.println("Error R de sintaxis: "+ s.value +" Columna "+(s.left+1)+" linea "+(s.right+1)+"tokens esperados"+list+"\n\n" );  
    }

    public List<Integer> expected_token_ids() {
        List<Integer> ret = new LinkedList<Integer>();
    int parse_state = ((Symbol)stack.peek()).parse_state ;
    short[] row = action_tab[parse_state];
    for (int i = 0; i<row.length; i+=2){
            if (row[i]==-1) continue;
            if (!validate_expected_symbol(row[i])) continue;
            ret.add(new Integer(row[i]));
    }
    return ret;
    }

    protected static final int _error_sync_size(){
        return 1;
    }

    private boolean validate_expected_symbol(int id){
    short lhs,rhs_size;
    int act;
    try {
            virtual_parse_stack vstack = new virtual_parse_stack(stack);
            /* parse until we fail or get past the lookahead input */
            for (;;)
            {
                /* look up the action from the current state (on top of stack) */
                act = get_action(vstack.top(), id);
                
                /* if its an error, we fail */
        if (act == 0) return false;

            /* > 0 encodes a shift */
        if (act > 0){
                    /* push the new state on the stack */
                    vstack.push(act-1);

                /* advance simulated input, if we run off the end, we are done */
                    if (!advance_lookahead()) return true;
                }
                /* < 0 encodes a reduce */
        else
        {
                    /* if this is a reduce with the start production we are done */
                    if ((-act)-1 == start_production())  return true;

                    /* get the lhs Symbol and the rhs size */
                    lhs = production_tab[(-act)-1][0];
                    rhs_size = production_tab[(-act)-1][1];
                    /* pop handle off the stack */
                    for (int i = 0; i < rhs_size; i++) vstack.pop();
                    vstack.push(get_reduce(vstack.top(), lhs));
                }
            }
    } catch (Exception e) {
            e.printStackTrace();
    }
    return true;
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        List<Integer> ids = new LinkedList<>();
        ids=expected_token_ids();
    LinkedList<String> list = new LinkedList<String>();
    for (Integer expected : ids){
            list.add(symbl_name_from_id(expected));
            list.add("\n");
        }

        //errors_list += "Line: " + (s.right + 1) + " and column: " + (s.left + 1) + ", '" + s.value +"', Non recuperable error: missing symbol " + list + "\n";
        System.out.println("Error NR de sintaxis: "+ s.value +" Columna "+(s.left+1)+" linea "+(s.right+1)+"tokens esperados"+list+"\n\n" );   
    }


}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Syntax$actions {
  private final Syntax parser;

  /** Constructor */
  CUP$Syntax$actions(Syntax parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Syntax$do_action(
    int                        CUP$Syntax$act_num,
    java_cup.runtime.lr_parser CUP$Syntax$parser,
    java.util.Stack            CUP$Syntax$stack,
    int                        CUP$Syntax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Syntax$result;

      /* select the action based on the action number */
      switch (CUP$Syntax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 537: // num_list2 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("num_list2",68, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 536: // num_list2 ::= COMA num_list3 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("num_list2",68, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 535: // num_list3 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("num_list3",69, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 534: // num_list3 ::= ARROBA ID num_list2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("num_list3",69, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 533: // num_list3 ::= tipo_dato num_list2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("num_list3",69, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 532: // execute ::= clause_exc obj_n num_list3 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("execute",136, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 531: // set_item1 ::= PASSWORD IGUAL STRING 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("set_item1",232, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 530: // set_item1 ::= LOGIN IGUAL ID 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("set_item1",232, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 529: // set_item1 ::= NULL 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("set_item1",232, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 528: // set_item1 ::= DEFAULT_SCHEMA IGUAL ID 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("set_item1",232, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 527: // set_item1 ::= NAME IGUAL ID 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("set_item1",232, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 526: // set_item2 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("set_item2",233, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 525: // set_item2 ::= COMA set_item 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("set_item2",233, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 524: // set_item ::= set_item1 set_item2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("set_item",231, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 523: // user_alter ::= ID WITH set_item 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("user_alter",230, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 522: // user_alter ::= ID 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("user_alter",230, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 521: // constraint5 ::= IDENTITY PARENTESIS_ABIERTO num COMA num PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constraint5",234, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-5)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 520: // constraint5 ::= DEFAULT data_tipo 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constraint5",234, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 519: // constraint5 ::= CHECK PARENTESIS_ABIERTO expresion_logica PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constraint5",234, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 518: // constraint5 ::= NOT NULL 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constraint5",234, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 517: // constraint5 ::= FOREIGN KEY PARENTESIS_ABIERTO obj_n PARENTESIS_CERRADO REFERENCES obj_n PARENTESIS_ABIERTO obj_n PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constraint5",234, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-9)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 516: // constraint5 ::= PRIMARY KEY constraint4 constraint3 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constraint5",234, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 515: // constraint5 ::= UNIQUE constraint3 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constraint5",234, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 514: // constraint5 ::= NULL 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constraint5",234, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 513: // drop_column ::= INDEX list_id 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("drop_column",229, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 512: // drop_column ::= COLUMN list_id 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("drop_column",229, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 511: // drop_column ::= CONSTRAINT list_id 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("drop_column",229, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 510: // add_column5 ::= obj_n data_tipo constraint 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("add_column5",227, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 509: // add_column6 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("add_column6",226, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 508: // add_column6 ::= COMA tipo_add 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("add_column6",226, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 507: // add_column7 ::= add_column5 add_column6 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("add_column7",228, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 506: // tipo_add ::= FOREIGN KEY PARENTESIS_ABIERTO obj_n PARENTESIS_CERRADO REFERENCES obj_n PARENTESIS_ABIERTO obj_n PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipo_add",225, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-9)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 505: // tipo_add ::= add_column7 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipo_add",225, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 504: // tipo_add ::= CONSTRAINT obj_n constraint5 add_column6 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipo_add",225, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 503: // accion_alter ::= DROP drop_column 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("accion_alter",224, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 502: // accion_alter ::= ADD tipo_add 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("accion_alter",224, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 501: // accion_alter ::= ALTER COLUMN add_column5 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("accion_alter",224, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 500: // table ::= obj_n accion_alter 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("table",223, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 499: // accion_index ::= USABLE 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("accion_index",222, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 498: // accion_index ::= UNUSABLE 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("accion_index",222, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 497: // accion_index ::= REBUILD 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("accion_index",222, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 496: // accion_index ::= DISABLE 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("accion_index",222, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 495: // nombre_index ::= ALL 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("nombre_index",221, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 494: // nombre_index ::= obj_n 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("nombre_index",221, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 493: // index ::= nombre_index ON obj_n accion_index 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("index",220, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 492: // tipo_alter_base ::= SET ROLLBACK INMEDIATE 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipo_alter_base",219, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 491: // tipo_alter_base ::= COLLATE ID 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipo_alter_base",219, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 490: // tipo_alter_base ::= MODIFY NAME IGUAL ID 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipo_alter_base",219, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 489: // nombre_actual ::= CURRENT 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("nombre_actual",218, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 488: // nombre_actual ::= ID 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("nombre_actual",218, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 487: // database ::= nombre_actual tipo_alter_base 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("database",217, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 486: // opciones ::= function 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opciones",216, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 485: // opciones ::= procedure 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opciones",216, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 484: // opciones ::= VIEW view_create 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opciones",216, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 483: // opciones ::= USER user_alter 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opciones",216, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 482: // opciones ::= TABLE table 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opciones",216, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 481: // opciones ::= INDEX index 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opciones",216, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 480: // opciones ::= DATABASE database 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opciones",216, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 479: // alter ::= ALTER opciones 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("alter",13, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 478: // column_view1 ::= obj_n 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("column_view1",207, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 477: // column_view2 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("column_view2",208, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 476: // column_view2 ::= column_view1 COMA column_view 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("column_view2",208, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 475: // column_view ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("column_view",206, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 474: // column_view ::= column_view1 column_view2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("column_view",206, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 473: // view_create ::= obj_n column_view AS select 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("view_create",205, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 472: // option_user ::= ALLOW_ENCRYPTED_VALUE_MODIFICATIONS IGUAL on_off 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("option_user",204, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 471: // option_user ::= DEFAULT_SCHEMA IGUAL ID 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("option_user",204, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 470: // limited_options1 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("limited_options1",203, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 469: // limited_options1 ::= COMA limited_options 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("limited_options1",203, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 468: // limited_options ::= option_user limited_options1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("limited_options",202, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 467: // with_user ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("with_user",201, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 466: // with_user ::= WITH limited_options 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("with_user",201, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 465: // for_from ::= FROM 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("for_from",200, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 464: // for_from ::= FOR 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("for_from",200, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 463: // for_user ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("for_user",199, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 462: // for_user ::= for_from LOGIN ID 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("for_user",199, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 461: // user_create ::= ID for_user with_user 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("user_create",198, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 460: // primary2 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("primary2",167, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 459: // primary2 ::= ON PRIMARY 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("primary2",167, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 458: // expresion_logica1 ::= obj_n operadores2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("expresion_logica1",196, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 457: // expresion_logica2 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("expresion_logica2",197, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 456: // expresion_logica2 ::= operadores_logicos expresion_logica 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("expresion_logica2",197, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 455: // expresion_logica ::= expresion_logica1 expresion_logica2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("expresion_logica",195, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 454: // list_id2 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("list_id2",212, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 453: // list_id2 ::= COMA list_id 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("list_id2",212, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 452: // list_id ::= ID tipo_orden list_id2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("list_id",211, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 451: // constraint4 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constraint4",214, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 450: // constraint4 ::= NONCLUSTERED 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constraint4",214, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 449: // constraint4 ::= CLUSTERED 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constraint4",214, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 448: // constraint3 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constraint3",213, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 447: // constraint3 ::= PARENTESIS_ABIERTO list_id PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constraint3",213, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 446: // constraint1 ::= IDENTITY PARENTESIS_ABIERTO num COMA num PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constraint1",193, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-5)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 445: // constraint1 ::= DEFAULT data_tipo 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constraint1",193, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 444: // constraint1 ::= CHECK PARENTESIS_ABIERTO expresion_logica PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constraint1",193, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 443: // constraint1 ::= NOT NULL 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constraint1",193, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 442: // constraint1 ::= FOREIGN KEY PARENTESIS_ABIERTO obj_n PARENTESIS_CERRADO REFERENCES obj_n PARENTESIS_ABIERTO obj_n PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constraint1",193, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-9)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 441: // constraint1 ::= PRIMARY KEY constraint4 constraint3 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constraint1",193, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 440: // constraint1 ::= UNIQUE constraint3 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constraint1",193, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 439: // constraint1 ::= NULL 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constraint1",193, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 438: // constraint2 ::= constraint 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constraint2",194, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 437: // constraint ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constraint",192, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 436: // constraint ::= constraint1 constraint2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constraint",192, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 435: // longitud ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("longitud",215, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 434: // longitud ::= PARENTESIS_ABIERTO num PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("longitud",215, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 433: // data_tipo ::= NUMERIC PARENTESIS_ABIERTO num COMA num PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("data_tipo",191, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-5)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 432: // data_tipo ::= DECIMAL PARENTESIS_ABIERTO num COMA num PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("data_tipo",191, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-5)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 431: // data_tipo ::= INT_P longitud 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("data_tipo",191, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 430: // data_tipo ::= BIT_P 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("data_tipo",191, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 429: // data_tipo ::= REAL 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("data_tipo",191, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 428: // data_tipo ::= MONEY 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("data_tipo",191, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 427: // data_tipo ::= FLOAT_P PARENTESIS_ABIERTO num PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("data_tipo",191, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 426: // data_tipo ::= TIMESTAMP 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("data_tipo",191, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 425: // data_tipo ::= DATETIMEOFFSET 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("data_tipo",191, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 424: // data_tipo ::= TIME 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("data_tipo",191, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 423: // data_tipo ::= SMALLDATETIME 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("data_tipo",191, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 422: // data_tipo ::= DATETIME2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("data_tipo",191, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 421: // data_tipo ::= DATETIME 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("data_tipo",191, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 420: // data_tipo ::= DATE 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("data_tipo",191, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 419: // data_tipo ::= VARBINARY PARENTESIS_ABIERTO MAX PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("data_tipo",191, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 418: // data_tipo ::= VARBINARY 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("data_tipo",191, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 417: // data_tipo ::= IMAGE 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("data_tipo",191, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 416: // data_tipo ::= TEXT 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("data_tipo",191, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 415: // data_tipo ::= NVARCHAR PARENTESIS_ABIERTO num PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("data_tipo",191, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 414: // data_tipo ::= VARCHAR PARENTESIS_ABIERTO num PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("data_tipo",191, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 413: // data_tipo ::= CHAR PARENTESIS_ABIERTO num PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("data_tipo",191, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 412: // add_column1 ::= FOREIGN KEY PARENTESIS_ABIERTO obj_n PARENTESIS_CERRADO REFERENCES obj_n PARENTESIS_ABIERTO obj_n PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("add_column1",189, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-9)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 411: // add_column1 ::= PRIMARY KEY constraint4 constraint3 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("add_column1",189, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 410: // add_column1 ::= CONSTRAINT ID constraint1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("add_column1",189, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 409: // add_column1 ::= obj_n data_tipo constraint 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("add_column1",189, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 408: // add_column2 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("add_column2",190, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 407: // add_column2 ::= COMA add_column 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("add_column2",190, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 406: // add_column ::= add_column1 add_column2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("add_column",188, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 405: // table_create ::= obj_n PARENTESIS_ABIERTO add_column PARENTESIS_CERRADO primary2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("table_create",187, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 404: // mas_index ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("mas_index",186, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 403: // mas_index ::= INCLUDE PARENTESIS_ABIERTO column_index PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("mas_index",186, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 402: // column_index1 ::= obj_n tipo_orden 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("column_index1",184, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 401: // column_index2 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("column_index2",185, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 400: // column_index2 ::= COMA column_index 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("column_index2",185, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 399: // column_index ::= column_index1 column_index2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("column_index",183, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 398: // index_create ::= obj_n ON obj_n PARENTESIS_ABIERTO column_index PARENTESIS_CERRADO mas_index 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("index_create",182, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-6)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 397: // opciones_index ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opciones_index",181, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 396: // opciones_index ::= UNIQUE 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opciones_index",181, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 395: // filegrowth1 ::= RES 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("filegrowth1",180, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 394: // filegrowth1 ::= size1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("filegrowth1",180, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 393: // filegrowth ::= FILEGROWTH IGUAL num filegrowth1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("filegrowth",179, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 392: // maxsize1 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("maxsize1",178, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // maxsize1 ::= num size1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("maxsize1",178, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // maxsize ::= MAXSIZE IGUAL maxsize1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("maxsize",177, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // size1 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("size1",176, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // size1 ::= TB 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("size1",176, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // size1 ::= GB 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("size1",176, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // size1 ::= MB 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("size1",176, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // size1 ::= KB 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("size1",176, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // size ::= SIZE IGUAL num size1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("size",175, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // optional1 ::= optionals 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("optional1",174, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // optional ::= filegrowth 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("optional",173, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // optional ::= maxsize 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("optional",173, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // optional ::= size 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("optional",173, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // optionals ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("optionals",172, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // optionals ::= COMA optional optional1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("optionals",172, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // filename ::= FILES 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("filename",171, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // filename ::= FILENAME 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("filename",171, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // filename ::= FILE 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("filename",171, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // names ::= NAMES 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("names",210, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // names ::= NAME 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("names",210, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // filespec2 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("filespec2",170, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // filespec2 ::= COMA filespec1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("filespec2",170, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // filespec1 ::= PARENTESIS_ABIERTO names IGUAL STRING COMA filename IGUAL STRING optionals PARENTESIS_CERRADO filespec2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("filespec1",169, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-10)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // primary ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("primary",166, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // primary ::= PRIMARY 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("primary",166, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // db_create ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("db_create",168, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // db_create ::= COLLATE ID 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("db_create",168, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // db_create ::= ON primary filespec1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("db_create",168, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // database_create ::= obj_n db_create 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("database_create",165, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // func_proc ::= function 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("func_proc",209, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // func_proc ::= procedure 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("func_proc",209, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // opciones_crear ::= VIEW view_create 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opciones_crear",164, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // opciones_crear ::= USER user_create 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opciones_crear",164, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // opciones_crear ::= TABLE table_create 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opciones_crear",164, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // opciones_crear ::= opciones_index constraint4 INDEX index_create 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opciones_crear",164, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // opciones_crear ::= DATABASE database_create 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opciones_crear",164, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // porsiacaso ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("porsiacaso",163, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // porsiacaso ::= OR ALTER 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("porsiacaso",163, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // create_f_sp ::= CREATE porsiacaso func_proc 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("create_f_sp",12, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // create ::= CREATE opciones_crear 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("create",11, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // column_list1 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("column_list1",162, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // column_list1 ::= COMA column_list 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("column_list1",162, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // column_list ::= ID column_list1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("column_list",161, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // for_update1 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("for_update1",160, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // for_update1 ::= OF column_list 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("for_update1",160, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // for_update ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("for_update",159, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // for_update ::= FOR UPDATE for_update1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("for_update",159, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // cursor7 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("cursor7",158, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // cursor7 ::= INSENSITIVE 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("cursor7",158, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // cursor6 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("cursor6",157, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // cursor6 ::= SCROLL 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("cursor6",157, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // cursor5 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("cursor5",156, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // cursor5 ::= TYPE_WARNING 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("cursor5",156, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // cursor4 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("cursor4",155, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // cursor4 ::= OPTIMISTIC 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("cursor4",155, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // cursor4 ::= SCROLL_LOCKS 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("cursor4",155, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // cursor4 ::= READ_ONLY 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("cursor4",155, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // cursor3 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("cursor3",154, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // cursor3 ::= FAST_FORWARD 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("cursor3",154, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // cursor3 ::= DYNAMIC 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("cursor3",154, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // cursor3 ::= KEYSET 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("cursor3",154, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // cursor3 ::= STATIC 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("cursor3",154, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // cursor2 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("cursor2",153, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // cursor2 ::= SCROLL 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("cursor2",153, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // cursor2 ::= FORWARD_ONLY 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("cursor2",153, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // cursor1 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("cursor1",152, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // cursor1 ::= GLOBAL 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("cursor1",152, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // cursor1 ::= LOCAL 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("cursor1",152, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // cursor ::= DECLARE ID cursor7 cursor6 CURSOR cursor1 cursor2 cursor3 cursor4 cursor5 FOR select for_update 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("cursor",16, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-12)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // tipo_retorno ::= ARROBA ID 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipo_retorno",151, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // tipo_retorno ::= tipo_dato 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipo_retorno",151, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // return ::= RETURN PARENTESIS_ABIERTO tipo_retorno PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("return",150, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // return ::= RETURN tipo_retorno 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("return",150, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // stmtFun ::= BEGIN select EndStmt return END 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("stmtFun",149, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // input ::= ON NULL INPUT 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("input",148, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // fun_op ::= INLINE on_off 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("fun_op",147, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // fun_op ::= CALLED input 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("fun_op",147, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // fun_op ::= RETURNS NULL input 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("fun_op",147, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // fun_op ::= clause_exc AS clause 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("fun_op",147, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // fun_op ::= SCHEMABINDING 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("fun_op",147, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // fun_op ::= ENCRYPTION 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("fun_op",147, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // with2 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("with2",146, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // with2 ::= COMA with1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("with2",146, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // with1 ::= fun_op with2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("with1",145, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // with3 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("with3",144, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // with3 ::= WITH with1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("with3",144, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // readonly ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("readonly",143, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // readonly ::= READONLY 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("readonly",143, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // as ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("as",142, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // as ::= AS 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("as",142, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // paramF2 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("paramF2",141, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // paramF2 ::= COMA paramF1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("paramF2",141, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // paramF1 ::= ARROBA ID as data_tipo paramSP1 readonly paramF2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("paramF1",140, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-6)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // paramF ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("paramF",139, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // paramF ::= paramF1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("paramF",139, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // function ::= FUNCTION obj_n PARENTESIS_ABIERTO paramF PARENTESIS_CERRADO RETURNS data_tipo with3 as stmtFun 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("function",138, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-9)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // startSP2 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("startSP2",135, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // startSP2 ::= startSP1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("startSP2",135, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // startSP1 ::= Stmt2 startSP2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("startSP1",134, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // startSP ::= AS BEGIN startSP1 END 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("startSP",133, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // replicationSP ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("replicationSP",132, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // replicationSP ::= FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("replicationSP",132, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // clause ::= SCHEMABINDING 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("clause",131, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // clause ::= ID 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("clause",131, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // clause ::= OWNER 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("clause",131, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // clause ::= CALLER 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("clause",131, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // clause ::= SELF 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("clause",131, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // clause_exc ::= EXECUTE 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("clause_exc",130, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // clause_exc ::= EXEC 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("clause_exc",130, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // sp_op3 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("sp_op3",129, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // sp_op3 ::= COMA sp_op1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("sp_op3",129, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // sp_op2 ::= clause_exc AS clause 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("sp_op2",128, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // sp_op2 ::= RECOMPILE 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("sp_op2",128, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // sp_op2 ::= ENCRYPTION 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("sp_op2",128, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // sp_op1 ::= sp_op2 sp_op3 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("sp_op1",127, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // sp_op ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("sp_op",126, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // sp_op ::= WITH sp_op1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("sp_op",126, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // paramSP3 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("paramSP3",125, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // paramSP3 ::= COMA paramSP 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("paramSP3",125, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // paramSP2 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("paramSP2",124, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // paramSP2 ::= tipo_out 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("paramSP2",124, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // paramSP1 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("paramSP1",123, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // paramSP1 ::= IGUAL DEFAULT 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("paramSP1",123, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // tipo_out ::= OUTPUT 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipo_out",122, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // tipo_out ::= OUT 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipo_out",122, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // tipoParam ::= ID READONLY 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipoParam",121, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // tipoParam ::= data_tipo paramSP1 paramSP2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipoParam",121, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // tipoParam ::= CURSOR VARYING tipo_out 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipoParam",121, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // paramSP ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("paramSP",120, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // paramSP ::= ARROBA ID tipoParam paramSP3 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("paramSP",120, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // numSp ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("numSp",119, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // numSp ::= PUNTO_COMA num 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("numSp",119, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // procedure ::= proc obj_n numSp paramSP sp_op replicationSP startSP 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("procedure",118, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-6)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // proc ::= PROCEDURE 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("proc",137, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // proc ::= PROC 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("proc",137, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // savepoint ::= SAVE T2 T6 EndStmt 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("savepoint",107, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // rollback ::= ROLLBACK T2 T6 EndStmt 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("rollback",106, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // on_off ::= OFF 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("on_off",114, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // on_off ::= ON 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("on_off",114, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // T7 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("T7",113, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // T7 ::= WITH PARENTESIS_ABIERTO DELAYED_DURABILITY IGUAL on_off PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("T7",113, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-5)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // T6 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("T6",112, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // T6 ::= ARROBA ID 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("T6",112, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // T6 ::= obj_n 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("T6",112, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // T5 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("T5",111, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // T5 ::= T2 T6 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("T5",111, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // commit ::= COMMIT T5 T7 EndStmt 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("commit",105, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // end_tran ::= rollback 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("end_tran",117, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // end_tran ::= commit 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("end_tran",117, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // begin_tran2 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("begin_tran2",116, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // begin_tran2 ::= begin_tran 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("begin_tran2",116, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // begin_tran ::= savepoint begin_tran2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("begin_tran",115, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // begin_tran ::= Stmt2 begin_tran2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("begin_tran",115, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // T4 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("T4",110, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // T4 ::= STRING 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("T4",110, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // T3 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("T3",109, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // T3 ::= WITH MARK T4 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("T3",109, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // T2 ::= TRANSACTION 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("T2",108, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // T2 ::= TRAN 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("T2",108, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // transaction ::= BEGIN T2 T6 T3 EndStmt begin_tran 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("transaction",104, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-5)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // opciones_delete ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opciones_delete",85, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // opciones_delete ::= TOP expresion porcentaje 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opciones_delete",85, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // delete1 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("delete1",86, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // delete1 ::= FROM 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("delete1",86, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // delete ::= DELETE opciones_delete delete1 obj_n condicionales 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("delete",10, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // porcentaje ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("porcentaje",84, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // porcentaje ::= PERCENT 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("porcentaje",84, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // opciones_update ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opciones_update",83, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // opciones_update ::= TOP expresion porcentaje 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opciones_update",83, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // asignaciones1 ::= NULL 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("asignaciones1",81, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // asignaciones1 ::= aritmetica 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("asignaciones1",81, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // asignaciones1 ::= STRING 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("asignaciones1",81, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // asignaciones2 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("asignaciones2",82, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // asignaciones2 ::= COMA obj_n IGUAL asignaciones 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("asignaciones2",82, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // asignaciones ::= asignaciones1 asignaciones2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("asignaciones",80, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // update ::= UPDATE opciones_update obj_n SET obj_n IGUAL asignaciones condicionales 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("update",9, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-7)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // val_ins1 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("val_ins1",79, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // val_ins1 ::= COMA val_ins 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("val_ins1",79, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // val_ins ::= tipo_dato val_ins1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("val_ins",78, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // valores1 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("valores1",77, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // valores1 ::= COMA valores 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("valores1",77, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // valores ::= PARENTESIS_ABIERTO val_ins PARENTESIS_CERRADO valores1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("valores",76, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // insercion ::= DEFAULT VALUES 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("insercion",75, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // insercion ::= VALUES valores 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("insercion",75, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // campo1 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("campo1",74, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // campo1 ::= COMA campo 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("campo1",74, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // campo ::= ID campo1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("campo",73, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // seleccion2 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("seleccion2",72, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // seleccion2 ::= PARENTESIS_ABIERTO campo PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("seleccion2",72, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // into ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("into",71, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // into ::= INTO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("into",71, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // insert ::= INSERT into obj_n seleccion2 insercion 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("insert",8, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // drop_user ::= USER if_op ID 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("drop_user",101, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // name_drop_fsp ::= FUNCTION 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("name_drop_fsp",103, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // name_drop_fsp ::= proc 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("name_drop_fsp",103, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // drop_proc_fun ::= name_drop_fsp if_op db_list 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("drop_proc_fun",102, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // view_list1 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("view_list1",100, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // view_list1 ::= COMA view_list 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("view_list1",100, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // view_list ::= obj_n view_list1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("view_list",99, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // drop_view ::= VIEW if_op view_list 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("drop_view",98, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // index_list1 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("index_list1",97, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // index_list1 ::= COMA index_list 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("index_list1",97, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // index_list ::= obj_n ON obj_n index_list1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("index_list",96, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // drop_index ::= INDEX if_op index_list 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("drop_index",95, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // db_list1 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("db_list1",94, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // db_list1 ::= COMA db_list 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("db_list1",94, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // db_list ::= obj_n db_list1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("db_list",93, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // drop_db ::= DATABASE if_op db_list 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("drop_db",92, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // drop_table ::= TABLE if_op list_table 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("drop_table",91, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // if_op ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("if_op",90, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // if_op ::= IF EXISTS 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("if_op",90, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // drop_name ::= drop_proc_fun 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("drop_name",89, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // drop_name ::= drop_user 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("drop_name",89, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // drop_name ::= drop_db 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("drop_name",89, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // drop_name ::= drop_index 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("drop_name",89, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // drop_name ::= drop_table 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("drop_name",89, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // drop_name ::= drop_view 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("drop_name",89, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // drop ::= DROP drop_name 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("drop",15, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // orden_name ::= funciones 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("orden_name",65, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // orden_name ::= obj_n 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("orden_name",65, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // tipo_orden ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipo_orden",63, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // tipo_orden ::= DESC 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipo_orden",63, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // tipo_orden ::= ASC 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipo_orden",63, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // orden1 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("orden1",62, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // orden1 ::= COMA obj_n orden1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("orden1",62, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // orden ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("orden",61, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // orden ::= ORDER BY orden_name tipo_orden orden1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("orden",61, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // teniendo2 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("teniendo2",60, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // teniendo2 ::= operadores_logicos teniendo1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("teniendo2",60, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // teniendo1 ::= orden_name operadores tipo_dato teniendo2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("teniendo1",59, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // teniendo ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("teniendo",58, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // teniendo ::= HAVING teniendo1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("teniendo",58, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // agrupado1 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("agrupado1",57, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // agrupado1 ::= COMA obj_n agrupado1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("agrupado1",57, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // agrupado ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("agrupado",56, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // agrupado ::= GROUP BY obj_n agrupado1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("agrupado",56, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // num_list1 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("num_list1",67, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // num_list1 ::= COMA num_list 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("num_list1",67, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // num_list ::= tipo_dato num_list1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("num_list",66, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // operadores3 ::= IS NOT NULL 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("operadores3",55, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // operadores3 ::= IS NULL 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("operadores3",55, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // operadores3 ::= BETWEEN tipo_dato AND tipo_dato 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("operadores3",55, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // operadores3 ::= IN PARENTESIS_ABIERTO num_list PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("operadores3",55, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // operadores ::= LIKE 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("operadores",53, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // operadores ::= IGUAL 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("operadores",53, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // operadores ::= IGUAL_A 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("operadores",53, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // operadores ::= DIFERENTE 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("operadores",53, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // operadores ::= MAYOR_O_IGUAL 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("operadores",53, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // operadores ::= MENOR_O_IGUAL 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("operadores",53, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // operadores ::= MAYOR 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("operadores",53, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // operadores ::= MENOR 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("operadores",53, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // operadores2 ::= operadores3 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("operadores2",54, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // operadores2 ::= operadores tipo_retorno 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("operadores2",54, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // operadores_logicos ::= OR_O 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("operadores_logicos",52, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // operadores_logicos ::= AND_O 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("operadores_logicos",52, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // operadores_logicos ::= OR 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("operadores_logicos",52, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // operadores_logicos ::= AND 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("operadores_logicos",52, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // otra_condicion ::= obj_n operadores2 condicionales1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("otra_condicion",51, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // condicionales1 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("condicionales1",50, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // condicionales1 ::= operadores_logicos otra_condicion 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("condicionales1",50, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // condicionales ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("condicionales",49, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // condicionales ::= WHERE obj_n operadores2 condicionales1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("condicionales",49, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // joins1 ::= joins 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("joins1",48, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // tipo_join1 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipo_join1",47, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // tipo_join1 ::= OUTER 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipo_join1",47, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // tipo_join ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipo_join",46, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // tipo_join ::= FULL tipo_join1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipo_join",46, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // tipo_join ::= RIGHT tipo_join1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipo_join",46, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // tipo_join ::= LEFT tipo_join1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipo_join",46, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // tipo_join ::= INNER 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipo_join",46, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // joins ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("joins",45, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // joins ::= tipo_join JOIN obj_n alias_tabla ON obj_n IGUAL obj_n joins1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("joins",45, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-8)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // opcion_alias ::= ID 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opcion_alias",44, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // opcion_alias ::= STRING 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opcion_alias",44, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // alias_tabla ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("alias_tabla",43, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // alias_tabla ::= ID 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("alias_tabla",43, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // alias_tabla ::= AS opcion_alias 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("alias_tabla",43, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // origen1 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("origen1",42, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // origen1 ::= COMA origen 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("origen1",42, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // origen ::= obj_n alias_tabla origen1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("origen",41, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // alias_columna ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("alias_columna",40, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // alias_columna ::= AS opcion_alias 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("alias_columna",40, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // puede ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("puede",39, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // puede ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("puede",39, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // valor3 ::= obj_n valor2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("valor3",38, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // valor3 ::= tipo_dato valor2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("valor3",38, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // valor2 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("valor2",37, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // valor2 ::= COMA valor3 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("valor2",37, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // valor ::= puede obj_n 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("valor",36, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // valor ::= MULT 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("valor",36, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // valor ::= num 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("valor",36, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // funciones_call ::= obj_n PARENTESIS 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("funciones_call",70, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // funciones_call ::= obj_n PARENTESIS_ABIERTO valor3 PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("funciones_call",70, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // funciones ::= funciones_call 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("funciones",35, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // funciones ::= MAX PARENTESIS_ABIERTO valor PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("funciones",35, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // funciones ::= MIN PARENTESIS_ABIERTO valor PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("funciones",35, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // funciones ::= COUNT PARENTESIS_ABIERTO valor PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("funciones",35, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // funciones ::= AVG PARENTESIS_ABIERTO valor PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("funciones",35, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // funciones ::= SUM PARENTESIS_ABIERTO valor PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("funciones",35, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // columna3 ::= funciones 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("columna3",34, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // columna3 ::= ARROBA ID 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("columna3",34, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // columna3 ::= obj_n 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("columna3",34, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // columna2 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("columna2",33, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // columna2 ::= COMA columna 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("columna2",33, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // columna1 ::= MULT 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("columna1",32, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // columna1 ::= columna3 IGUAL columna3 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("columna1",32, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // columna1 ::= aritmetica 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("columna1",32, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // columna1 ::= funciones 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("columna1",32, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // columna ::= columna1 alias_columna columna2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("columna",31, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // expresion ::= PARENTESIS_ABIERTO num PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("expresion",30, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // expresion ::= num 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("expresion",30, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // seleccion ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("seleccion",29, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // seleccion ::= TOP expresion 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("seleccion",29, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // seleccion ::= ALL 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("seleccion",29, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // seleccion ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("seleccion",29, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // opcion_select ::= seleccion columna 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opcion_select",28, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // select ::= SELECT opcion_select FROM origen joins condicionales agrupado teniendo orden 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("select",7, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-8)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // list_tableA ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("list_tableA",88, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // list_tableA ::= COMA list_table 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("list_tableA",88, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // list_table ::= obj_n list_tableA 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("list_table",87, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // truncate ::= TRUNCATE TABLE list_table 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("truncate",14, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // i ::= obj_n 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("i",22, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // i ::= FLOAT 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("i",22, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // i ::= BIT 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("i",22, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // i ::= INT 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("i",22, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // C ::= PARENTESIS_CERRADO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("C",27, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // U ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("U",26, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // U ::= DIV T 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("U",26, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // U ::= MULT T 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("U",26, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // T ::= PARENTESIS_ABIERTO aritmetica C U 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("T",25, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // T ::= i U 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("T",25, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // X ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("X",24, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // X ::= MENOS aritmetica 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("X",24, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // X ::= MAS aritmetica 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("X",24, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // V ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("V",23, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // V ::= MENOS aritmetica 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("V",23, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // V ::= MAS aritmetica 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("V",23, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // V ::= DIV T X 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("V",23, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // V ::= MULT T X 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("V",23, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // aritmetica ::= PARENTESIS_ABIERTO aritmetica C V 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("aritmetica",21, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // aritmetica ::= i V 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("aritmetica",21, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // tipo_dato ::= FLOAT 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipo_dato",20, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // tipo_dato ::= BIT 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipo_dato",20, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // tipo_dato ::= INT 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipo_dato",20, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // tipo_dato ::= NULL 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipo_dato",20, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // tipo_dato ::= STRING 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("tipo_dato",20, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // obj_n2 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("obj_n2",19, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // obj_n2 ::= PUNTO ID 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("obj_n2",19, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // obj_n1 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("obj_n1",18, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // obj_n1 ::= PUNTO ID obj_n2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("obj_n1",18, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // obj_n ::= ID obj_n1 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("obj_n",17, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // num ::= BIT 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("num",64, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // num ::= INT 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("num",64, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // EndStmt ::= GO_PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("EndStmt",6, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // EndStmt ::= PUNTO_COMA_GO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("EndStmt",6, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // EndStmt ::= PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("EndStmt",6, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // EndStmt ::= GO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("EndStmt",6, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // StmtDDL ::= drop EndStmt 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("StmtDDL",5, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // StmtDDL ::= truncate EndStmt 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("StmtDDL",5, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // StmtDDL ::= create_f_sp EndStmt 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("StmtDDL",5, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // StmtDDL ::= create EndStmt 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("StmtDDL",5, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // StmtDDL ::= alter EndStmt 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("StmtDDL",5, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // StmtDML ::= delete EndStmt 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("StmtDML",4, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // StmtDML ::= update EndStmt 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("StmtDML",4, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // StmtDML ::= insert EndStmt 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("StmtDML",4, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // StmtDML ::= select EndStmt 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("StmtDML",4, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // Stmt2 ::= error EndStmt 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Stmt2",3, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // Stmt2 ::= USE obj_n EndStmt 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Stmt2",3, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // Stmt2 ::= execute EndStmt 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Stmt2",3, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // Stmt2 ::= transaction end_tran 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Stmt2",3, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // Stmt2 ::= GO 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Stmt2",3, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // Stmt2 ::= cursor EndStmt 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Stmt2",3, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // Stmt2 ::= StmtDDL 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Stmt2",3, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // Stmt2 ::= StmtDML 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Stmt2",3, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // Stmt ::= USE obj_n EndStmt general 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Stmt",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // Stmt ::= GO general 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Stmt",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // Stmt ::= error EndStmt general 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Stmt",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // Stmt ::= execute EndStmt general 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Stmt",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // Stmt ::= transaction end_tran general 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Stmt",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // Stmt ::= cursor EndStmt general 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Stmt",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // Stmt ::= drop EndStmt general 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Stmt",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // Stmt ::= truncate EndStmt general 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Stmt",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // Stmt ::= create_f_sp EndStmt general 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Stmt",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // Stmt ::= create EndStmt general 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Stmt",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // Stmt ::= alter EndStmt general 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Stmt",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Stmt ::= delete EndStmt general 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Stmt",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Stmt ::= update EndStmt general 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Stmt",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Stmt ::= insert EndStmt general 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Stmt",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Stmt ::= select EndStmt general 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Stmt",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // general ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("general",1, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // general ::= Stmt 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("general",1, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Start ::= general 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Start",0, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= Start EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		RESULT = start_val;
              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Syntax$parser.done_parsing();
          return CUP$Syntax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

