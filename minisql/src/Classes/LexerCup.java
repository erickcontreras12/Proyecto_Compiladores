/* The following code was generated by JFlex 1.7.0 */

package Classes;
import java_cup.runtime.Symbol;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>C:/Users/eecon/OneDrive/Escritorio/Proyecto_Compiladores/minisql/src/Classes/LexerCup.flex</tt>
 */
class LexerCup implements java_cup.runtime.Scanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\3\1\6\1\73\1\73\1\3\22\0\1\3\1\61\1\0"+
    "\1\72\1\0\1\55\1\62\1\22\1\65\1\66\1\10\1\21\1\4"+
    "\1\5\1\16\1\7\1\14\1\15\1\47\7\2\1\0\1\64\1\56"+
    "\1\57\1\60\1\0\1\71\1\32\1\36\1\24\1\33\1\17\1\34"+
    "\1\45\1\43\1\26\1\51\1\50\1\13\1\41\1\11\1\30\1\35"+
    "\1\46\1\27\1\23\1\25\1\12\1\31\1\40\1\37\1\42\1\52"+
    "\1\53\1\0\1\54\1\0\1\44\1\0\4\1\1\20\25\1\1\67"+
    "\1\63\1\70\7\0\1\73\u1fa2\0\1\73\1\73\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udfe6\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7"+
    "\1\10\3\2\1\11\1\12\1\2\1\13\1\1\25\2"+
    "\1\14\1\15\1\16\1\17\1\20\1\21\1\22\2\1"+
    "\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32"+
    "\1\3\1\4\1\33\2\2\1\34\10\2\1\35\5\2"+
    "\1\0\1\36\26\2\1\37\1\2\1\40\2\2\2\34"+
    "\1\2\1\41\6\2\1\42\2\2\1\43\1\2\1\34"+
    "\7\2\1\44\1\2\1\34\37\2\1\45\12\2\1\46"+
    "\6\2\1\47\1\50\2\2\1\51\2\2\1\0\1\52"+
    "\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62"+
    "\1\63\3\0\4\2\1\64\6\2\1\65\15\2\1\0"+
    "\1\2\1\66\7\2\1\67\3\2\1\70\12\2\1\34"+
    "\27\2\1\71\7\2\1\72\26\2\1\73\3\2\1\74"+
    "\6\2\1\75\1\2\1\76\2\2\1\77\1\2\1\100"+
    "\1\101\3\2\1\34\22\2\1\102\14\2\1\103\11\2"+
    "\1\104\3\2\1\105\7\2\1\106\3\2\1\32\1\0"+
    "\1\107\5\2\1\110\3\2\1\111\4\2\1\112\1\2"+
    "\1\113\3\2\1\35\1\0\1\2\1\0\2\2\1\114"+
    "\6\2\1\115\10\2\1\116\1\117\33\2\1\120\1\121"+
    "\2\2\1\122\2\2\1\123\11\2\1\124\17\2\1\125"+
    "\1\34\14\2\1\34\1\2\1\34\2\2\1\126\12\2"+
    "\1\127\11\2\1\130\1\2\1\131\3\2\1\132\2\2"+
    "\1\133\1\2\1\134\23\2\1\135\2\2\1\34\4\2"+
    "\1\136\6\2\1\137\5\2\1\140\5\2\1\141\1\142"+
    "\2\2\1\0\34\2\1\143\10\2\1\144\10\2\1\145"+
    "\1\2\1\146\6\2\1\147\1\2\1\150\2\2\1\151"+
    "\15\2\1\152\3\2\1\153\2\2\1\154\7\2\1\155"+
    "\1\34\4\2\1\156\21\2\1\157\2\2\1\160\16\2"+
    "\1\161\1\2\1\34\2\2\1\162\1\163\5\2\1\164"+
    "\5\2\1\165\1\166\1\167\1\2\1\0\1\2\1\34"+
    "\1\170\1\171\3\2\1\172\1\173\1\2\1\174\3\2"+
    "\1\175\2\2\1\176\3\2\1\177\2\2\1\200\1\201"+
    "\1\202\15\2\1\203\1\2\1\204\11\2\1\205\10\2"+
    "\1\206\5\2\1\207\5\2\1\210\35\2\1\211\1\2"+
    "\1\212\1\213\1\214\1\215\1\2\1\34\2\2\1\0"+
    "\1\216\1\34\7\2\1\217\3\2\1\220\1\2\1\34"+
    "\13\2\1\221\5\2\1\222\4\2\1\223\5\2\1\224"+
    "\1\2\1\225\2\2\1\226\1\227\1\2\1\230\2\2"+
    "\1\231\2\2\1\232\4\2\1\233\2\2\1\234\1\2"+
    "\1\235\3\2\1\236\1\2\1\237\1\2\1\240\1\2"+
    "\1\34\12\2\1\34\4\2\1\241\5\2\1\242\2\2"+
    "\1\243\3\2\1\244\10\2\1\245\1\2\1\246\1\247"+
    "\1\250\1\251\6\2\1\252\12\2\1\253\2\2\1\34"+
    "\1\254\3\2\1\255\1\2\1\256\1\257\4\2\1\260"+
    "\5\2\1\261\4\2\1\262\1\2\1\263\10\2\1\264"+
    "\5\2\1\265\2\2\1\266\4\2\1\267\15\2\1\270"+
    "\2\2\1\271\6\2\1\272\3\2\1\273\2\2\1\34"+
    "\1\274\3\2\1\275\1\276\3\2\1\277\1\300\11\2"+
    "\1\301\1\302\10\2\1\303\33\2";

  private static int [] zzUnpackAction() {
    int [] result = new int[1145];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\74\0\170\0\264\0\74\0\74\0\360\0\u012c"+
    "\0\74\0\u0168\0\u01a4\0\u01e0\0\264\0\u021c\0\u0258\0\74"+
    "\0\u0294\0\u02d0\0\u030c\0\u0348\0\u0384\0\u03c0\0\u03fc\0\u0438"+
    "\0\u0474\0\u04b0\0\u04ec\0\u0528\0\u0564\0\u05a0\0\u05dc\0\u0618"+
    "\0\u0654\0\u0690\0\u06cc\0\u0708\0\u0744\0\u0780\0\u07bc\0\74"+
    "\0\74\0\u07f8\0\u0834\0\u0870\0\u08ac\0\u08e8\0\u0924\0\74"+
    "\0\u0960\0\74\0\u099c\0\74\0\74\0\u09d8\0\u0a14\0\u0a50"+
    "\0\u0a8c\0\u0ac8\0\u0b04\0\u0b40\0\u0b7c\0\u0bb8\0\u0bf4\0\u0c30"+
    "\0\u0c6c\0\u0ca8\0\u0ce4\0\u0d20\0\u0d5c\0\u0d98\0\u0dd4\0\u0e10"+
    "\0\u0e4c\0\u0e88\0\u0ec4\0\u0294\0\74\0\u0f00\0\u0f3c\0\u0f78"+
    "\0\u0fb4\0\u0ff0\0\u102c\0\u1068\0\u10a4\0\u10e0\0\u111c\0\u1158"+
    "\0\u1194\0\u11d0\0\u120c\0\u1248\0\u1284\0\u12c0\0\u12fc\0\u1338"+
    "\0\u1374\0\u13b0\0\u13ec\0\u1428\0\u1464\0\170\0\u14a0\0\u14dc"+
    "\0\u1518\0\u1554\0\u1590\0\170\0\u15cc\0\u1608\0\u1644\0\u1680"+
    "\0\u16bc\0\u16f8\0\u1734\0\u1770\0\u17ac\0\u17e8\0\u1824\0\u1860"+
    "\0\u189c\0\u18d8\0\u1914\0\u1950\0\u198c\0\u19c8\0\u1a04\0\u1a40"+
    "\0\u1a7c\0\170\0\u1ab8\0\u1af4\0\u1b30\0\u1b6c\0\u1ba8\0\u1be4"+
    "\0\u1c20\0\u1c5c\0\u1c98\0\u1cd4\0\u1d10\0\u1d4c\0\u1d88\0\u1dc4"+
    "\0\u1e00\0\u1e3c\0\u1e78\0\u1eb4\0\u1ef0\0\u1f2c\0\u1f68\0\u1fa4"+
    "\0\u1fe0\0\u201c\0\u2058\0\u2094\0\u20d0\0\u210c\0\u2148\0\u2184"+
    "\0\u21c0\0\170\0\u21fc\0\u2238\0\u2274\0\u22b0\0\u22ec\0\u2328"+
    "\0\u2364\0\u23a0\0\u23dc\0\u2418\0\170\0\u2454\0\u2490\0\u24cc"+
    "\0\u2508\0\u2544\0\u2580\0\u25bc\0\170\0\u25f8\0\u2634\0\170"+
    "\0\u2670\0\u26ac\0\u26e8\0\74\0\74\0\74\0\74\0\74"+
    "\0\74\0\74\0\74\0\74\0\74\0\u2724\0\u2760\0\u279c"+
    "\0\u27d8\0\u2814\0\u2850\0\u288c\0\170\0\u28c8\0\u2904\0\u2940"+
    "\0\u297c\0\u29b8\0\u29f4\0\u2a30\0\u2a6c\0\u2aa8\0\u2ae4\0\u2b20"+
    "\0\u2b5c\0\u2b98\0\u2bd4\0\u2c10\0\u2c4c\0\u2c88\0\u2cc4\0\u2d00"+
    "\0\u2d3c\0\u2d78\0\u2db4\0\u2df0\0\u2e2c\0\u2e68\0\u2ea4\0\u2ee0"+
    "\0\u2f1c\0\u2f58\0\u2f94\0\170\0\u2fd0\0\u300c\0\u3048\0\u3084"+
    "\0\u30c0\0\u30fc\0\u3138\0\u3174\0\u31b0\0\u31ec\0\u3228\0\u3264"+
    "\0\u32a0\0\u32dc\0\u3318\0\u3354\0\u3390\0\u33cc\0\u3408\0\u3444"+
    "\0\u3480\0\u34bc\0\u34f8\0\u3534\0\u3570\0\u35ac\0\u35e8\0\u3624"+
    "\0\u3660\0\u369c\0\u36d8\0\u3714\0\u3750\0\u378c\0\u37c8\0\u3804"+
    "\0\u3840\0\u387c\0\170\0\u38b8\0\u38f4\0\u3930\0\u396c\0\u39a8"+
    "\0\u39e4\0\u3a20\0\u3a5c\0\u3a98\0\u3ad4\0\u3b10\0\u3b4c\0\u3b88"+
    "\0\u3bc4\0\u3c00\0\u3c3c\0\u3c78\0\u3cb4\0\u3cf0\0\u3d2c\0\u3d68"+
    "\0\u3da4\0\u3de0\0\u3e1c\0\u3e58\0\u3e94\0\u3ed0\0\u3f0c\0\u3f48"+
    "\0\u3f84\0\u3fc0\0\u3ffc\0\u4038\0\u4074\0\u40b0\0\u40ec\0\u4128"+
    "\0\u4164\0\u41a0\0\u41dc\0\u4218\0\170\0\u4254\0\u4290\0\u42cc"+
    "\0\u4308\0\170\0\u4344\0\170\0\170\0\u4380\0\u43bc\0\u43f8"+
    "\0\u4434\0\u4470\0\u44ac\0\u44e8\0\u4524\0\u4560\0\u459c\0\u45d8"+
    "\0\u4614\0\u4650\0\u468c\0\u46c8\0\u4704\0\u4740\0\u477c\0\u47b8"+
    "\0\u47f4\0\u4830\0\u486c\0\u48a8\0\u48e4\0\u4920\0\u495c\0\u4998"+
    "\0\u49d4\0\u4a10\0\u4a4c\0\u4a88\0\u4ac4\0\u4b00\0\u4b3c\0\u4b78"+
    "\0\u4bb4\0\u4bf0\0\u4c2c\0\u4c68\0\u4ca4\0\u4ce0\0\u4d1c\0\u4d58"+
    "\0\u4d94\0\u4dd0\0\u4e0c\0\u4e48\0\u4e84\0\u4ec0\0\u4efc\0\u4f38"+
    "\0\u4f74\0\u4fb0\0\u4fec\0\u5028\0\u5064\0\u50a0\0\u50dc\0\u5118"+
    "\0\u5154\0\74\0\u5190\0\u5190\0\u51cc\0\u5208\0\u5244\0\u5280"+
    "\0\u52bc\0\u52f8\0\u5334\0\u5370\0\u53ac\0\u53e8\0\170\0\u5424"+
    "\0\u5460\0\u549c\0\u54d8\0\170\0\u5514\0\170\0\u5550\0\u558c"+
    "\0\u55c8\0\u5604\0\u5604\0\u5640\0\u567c\0\u56b8\0\u56f4\0\u5730"+
    "\0\u576c\0\u57a8\0\u57e4\0\u5820\0\u585c\0\u5898\0\170\0\u58d4"+
    "\0\u5910\0\u594c\0\u5988\0\u59c4\0\u5a00\0\u5a3c\0\u5a78\0\170"+
    "\0\170\0\u5ab4\0\u5af0\0\u5b2c\0\u5b68\0\u5ba4\0\u5be0\0\u5c1c"+
    "\0\u5c58\0\u5c94\0\u5cd0\0\u5d0c\0\u5d48\0\u5d84\0\u5dc0\0\u5dfc"+
    "\0\u5e38\0\u5e74\0\u5eb0\0\u5eec\0\u5f28\0\u5f64\0\u4e0c\0\u5fa0"+
    "\0\u5fdc\0\u6018\0\u6054\0\u6090\0\u60cc\0\u6108\0\u6144\0\u6180"+
    "\0\u61bc\0\u61f8\0\u6234\0\u6270\0\u62ac\0\u62e8\0\u6324\0\u6360"+
    "\0\u639c\0\u63d8\0\u6414\0\u6450\0\u648c\0\170\0\u64c8\0\u6504"+
    "\0\u6540\0\u657c\0\u65b8\0\u65f4\0\u6630\0\u666c\0\u66a8\0\u66e4"+
    "\0\u6720\0\u675c\0\u6798\0\u67d4\0\u6810\0\170\0\u684c\0\u6888"+
    "\0\u68c4\0\u6900\0\u693c\0\u6978\0\u69b4\0\u69f0\0\u6a2c\0\u6a68"+
    "\0\u6aa4\0\u6ae0\0\u6b1c\0\u6b58\0\u6b94\0\u6bd0\0\u6c0c\0\u6c48"+
    "\0\170\0\u6c84\0\u6cc0\0\u6cfc\0\u6d38\0\u6d74\0\u6db0\0\u6dec"+
    "\0\u6e28\0\u6e64\0\u6ea0\0\u6edc\0\u6f18\0\u6f54\0\u6f90\0\u6fcc"+
    "\0\u7008\0\u7044\0\u7080\0\u70bc\0\u70f8\0\170\0\u7134\0\u7170"+
    "\0\u71ac\0\u71e8\0\u7224\0\170\0\u7260\0\u729c\0\u72d8\0\u7314"+
    "\0\170\0\u7350\0\u738c\0\u73c8\0\u7404\0\u7440\0\u747c\0\u74b8"+
    "\0\u74f4\0\u7530\0\u756c\0\u75a8\0\u75e4\0\u7620\0\u765c\0\u7698"+
    "\0\u76d4\0\u7710\0\u774c\0\u7788\0\u7134\0\u77c4\0\u7800\0\u783c"+
    "\0\u7878\0\u78b4\0\u78f0\0\u792c\0\170\0\u7968\0\u79a4\0\u79e0"+
    "\0\u7a1c\0\u7a58\0\u7a94\0\170\0\u7ad0\0\u7b0c\0\u7b48\0\u7b84"+
    "\0\u7bc0\0\170\0\u7bfc\0\u7c38\0\u7c74\0\u7cb0\0\u7cec\0\170"+
    "\0\170\0\u7d28\0\u7d64\0\u7da0\0\u7ddc\0\u7e18\0\u7e54\0\u7e90"+
    "\0\u7ecc\0\u7f08\0\u7f44\0\u7f80\0\u7fbc\0\u7ff8\0\u8034\0\u8070"+
    "\0\u80ac\0\u80e8\0\u8124\0\u8160\0\u819c\0\u81d8\0\u8214\0\u8250"+
    "\0\u828c\0\u82c8\0\u8304\0\u8340\0\u837c\0\u83b8\0\u83f4\0\u8430"+
    "\0\170\0\u846c\0\u84a8\0\u84e4\0\u8520\0\u855c\0\u8598\0\u85d4"+
    "\0\u8610\0\u864c\0\u8688\0\u86c4\0\u8700\0\u873c\0\u8778\0\u87b4"+
    "\0\u87f0\0\u882c\0\u8868\0\u88a4\0\170\0\u88e0\0\u891c\0\u8958"+
    "\0\u8994\0\u89d0\0\u8a0c\0\170\0\u8a48\0\170\0\u8a84\0\u8ac0"+
    "\0\170\0\u8afc\0\u8b38\0\u8b74\0\u8bb0\0\u8bec\0\u8c28\0\u8c64"+
    "\0\u8ca0\0\u8cdc\0\u8d18\0\u8d54\0\u8d90\0\u8dcc\0\170\0\u8e08"+
    "\0\u8e44\0\u8e80\0\170\0\u8ebc\0\u4bb4\0\170\0\u8ef8\0\u8f34"+
    "\0\u8f70\0\u8fac\0\u8fe8\0\u9024\0\u9060\0\170\0\u909c\0\u90d8"+
    "\0\u9114\0\u9150\0\u918c\0\170\0\u91c8\0\u9204\0\u9240\0\u927c"+
    "\0\u92b8\0\u4290\0\u92f4\0\u9330\0\u936c\0\u93a8\0\u93e4\0\u9420"+
    "\0\u945c\0\u9498\0\u94d4\0\u9510\0\u954c\0\170\0\u9588\0\u95c4"+
    "\0\170\0\u9600\0\u963c\0\u9678\0\u96b4\0\u96f0\0\u972c\0\u9768"+
    "\0\u97a4\0\u97e0\0\u981c\0\u9858\0\u9894\0\u98d0\0\u990c\0\170"+
    "\0\u9948\0\u9984\0\u99c0\0\u99fc\0\170\0\170\0\u9a38\0\u9a74"+
    "\0\u9ab0\0\u9aec\0\u9b28\0\170\0\u9b64\0\u9ba0\0\u9bdc\0\u9c18"+
    "\0\u9c54\0\170\0\170\0\u9984\0\u9c90\0\u9ccc\0\u9d08\0\u594c"+
    "\0\170\0\170\0\u9d44\0\u9d80\0\u9dbc\0\u9df8\0\u9e34\0\u9e70"+
    "\0\170\0\u9eac\0\u9ee8\0\u9f24\0\170\0\u9f60\0\u9f9c\0\170"+
    "\0\u9fd8\0\ua014\0\ua050\0\170\0\ua08c\0\ua0c8\0\170\0\170"+
    "\0\170\0\ua104\0\ua140\0\ua17c\0\ua1b8\0\ua1f4\0\ua230\0\ua26c"+
    "\0\ua2a8\0\ua2e4\0\ua320\0\ua35c\0\ua398\0\ua3d4\0\170\0\ua410"+
    "\0\170\0\ua44c\0\ua488\0\ua4c4\0\ua500\0\ua53c\0\ua578\0\ua5b4"+
    "\0\ua5f0\0\ua62c\0\ua668\0\ua6a4\0\ua6e0\0\ua71c\0\ua758\0\ua794"+
    "\0\ua7d0\0\ua80c\0\ua848\0\170\0\ua884\0\ua8c0\0\ua8fc\0\ua938"+
    "\0\ua974\0\170\0\ua9b0\0\ua9ec\0\uaa28\0\uaa64\0\uaaa0\0\170"+
    "\0\uaadc\0\uab18\0\uab54\0\uab90\0\uabcc\0\uac08\0\uac44\0\uac80"+
    "\0\uacbc\0\uacf8\0\uad34\0\uad70\0\uadac\0\uade8\0\uae24\0\uae60"+
    "\0\uae9c\0\uaed8\0\uaf14\0\uaf50\0\uaf8c\0\uafc8\0\ub004\0\ub040"+
    "\0\ub07c\0\ub0b8\0\ub0f4\0\ub130\0\ub16c\0\170\0\ub1a8\0\170"+
    "\0\170\0\170\0\170\0\ub1e4\0\u5118\0\ub220\0\ub25c\0\ub298"+
    "\0\ub2d4\0\u9ee8\0\ub310\0\ub34c\0\ub388\0\ub3c4\0\ub400\0\ub43c"+
    "\0\u3084\0\ub478\0\ub4b4\0\ub4f0\0\ub52c\0\170\0\ub568\0\u2cc4"+
    "\0\ub5a4\0\ub5e0\0\ub61c\0\ub658\0\ub694\0\ub6d0\0\ub70c\0\ub748"+
    "\0\ub784\0\ub7c0\0\ub7fc\0\170\0\u1734\0\ub838\0\ub874\0\ub8b0"+
    "\0\ub8ec\0\170\0\ub928\0\ub964\0\ub9a0\0\ub9dc\0\170\0\uba18"+
    "\0\uba54\0\uba90\0\ubacc\0\ubb08\0\170\0\ubb44\0\170\0\ubb80"+
    "\0\ubbbc\0\170\0\170\0\ubbf8\0\ubc34\0\ubc70\0\ubcac\0\170"+
    "\0\ubce8\0\ubd24\0\170\0\ubd60\0\ubd9c\0\ubdd8\0\ube14\0\170"+
    "\0\ube50\0\ube8c\0\170\0\ubec8\0\170\0\ubf04\0\ubf40\0\ubf7c"+
    "\0\170\0\ubfb8\0\170\0\ubff4\0\170\0\uc030\0\74\0\uc06c"+
    "\0\uc0a8\0\uc0e4\0\uc120\0\uc15c\0\uc198\0\uc1d4\0\uc210\0\uc24c"+
    "\0\uc288\0\uc2c4\0\uc300\0\uc33c\0\uc378\0\uc3b4\0\170\0\uc3f0"+
    "\0\uc42c\0\uc468\0\uc4a4\0\uc4e0\0\uc51c\0\uc558\0\uc594\0\170"+
    "\0\uc5d0\0\uc60c\0\uc648\0\170\0\uc684\0\uc6c0\0\uc6fc\0\uc738"+
    "\0\uc774\0\uc7b0\0\uc7ec\0\uc828\0\170\0\uc864\0\uc8a0\0\170"+
    "\0\170\0\170\0\uc8dc\0\uc918\0\uc954\0\uc990\0\uc9cc\0\uca08"+
    "\0\170\0\uca44\0\uca80\0\ucabc\0\ucaf8\0\ucb34\0\ucb70\0\ucbac"+
    "\0\ucbe8\0\ucc24\0\ucc60\0\170\0\ucc9c\0\uccd8\0\u4bb4\0\170"+
    "\0\ucd14\0\ucd50\0\ucd8c\0\170\0\ucdc8\0\170\0\170\0\uce04"+
    "\0\uce40\0\uce7c\0\uceb8\0\170\0\ucef4\0\ucf30\0\ucf6c\0\ucfa8"+
    "\0\ucfe4\0\170\0\ud020\0\ud05c\0\ud098\0\ud0d4\0\170\0\ud110"+
    "\0\170\0\ud14c\0\ud188\0\ud1c4\0\ud200\0\ud23c\0\ud278\0\ud2b4"+
    "\0\ud2f0\0\u5d48\0\ud32c\0\ud368\0\ud3a4\0\ud3e0\0\ud41c\0\170"+
    "\0\ud458\0\ud494\0\170\0\ud4d0\0\ud50c\0\ud548\0\ud584\0\170"+
    "\0\ud5c0\0\ud5fc\0\ud638\0\ud674\0\ud6b0\0\ud6ec\0\ud728\0\ud764"+
    "\0\ud7a0\0\ud7dc\0\ud818\0\ud854\0\ud890\0\170\0\ud8cc\0\ud908"+
    "\0\170\0\ud944\0\ud980\0\ud9bc\0\ud9f8\0\uda34\0\uda70\0\170"+
    "\0\udaac\0\udae8\0\udb24\0\170\0\udb60\0\udb9c\0\udbd8\0\170"+
    "\0\udc14\0\udc50\0\udc8c\0\170\0\170\0\udcc8\0\udd04\0\udd40"+
    "\0\170\0\170\0\udd7c\0\uddb8\0\uddf4\0\ude30\0\ude6c\0\udea8"+
    "\0\udee4\0\udf20\0\udf5c\0\170\0\170\0\udf98\0\udfd4\0\ue010"+
    "\0\ue04c\0\ue088\0\ue0c4\0\ue100\0\ue13c\0\170\0\ue178\0\uc2c4"+
    "\0\ue1b4\0\ue1f0\0\ue22c\0\ue268\0\ue2a4\0\ue2e0\0\ue31c\0\ue358"+
    "\0\ue394\0\ue3d0\0\ue40c\0\ue448\0\ue484\0\ue4c0\0\ue4fc\0\ue538"+
    "\0\ue574\0\ue5b0\0\ue5ec\0\ue628\0\ue664\0\ue6a0\0\ue6dc\0\ue718"+
    "\0\ue754";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1145];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\1\5\1\10"+
    "\1\11\1\12\1\13\1\14\2\15\1\16\1\17\1\3"+
    "\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27"+
    "\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37"+
    "\1\40\1\41\1\42\1\2\1\43\1\3\1\4\1\44"+
    "\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54"+
    "\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64"+
    "\1\65\1\66\76\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\30\3\23\0\1\4\11\0\2\4\1\67\30\0"+
    "\1\4\26\0\1\70\2\0\1\71\6\0\2\70\31\0"+
    "\1\70\34\0\1\72\64\0\2\3\6\0\1\3\1\73"+
    "\3\3\1\0\2\3\2\0\1\3\1\74\3\3\1\75"+
    "\1\3\1\76\20\3\22\0\2\3\6\0\1\77\4\3"+
    "\1\0\2\3\2\0\1\100\11\3\1\101\15\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\102\1\3\2\0\3\3"+
    "\1\103\1\3\1\104\1\3\1\105\20\3\23\0\1\106"+
    "\11\0\2\106\31\0\1\106\25\0\2\3\6\0\1\107"+
    "\1\3\1\110\2\3\1\0\2\3\2\0\1\111\3\3"+
    "\1\112\7\3\1\113\13\3\21\0\6\114\1\0\13\114"+
    "\1\115\51\114\1\0\2\3\6\0\1\3\1\116\3\3"+
    "\1\0\1\117\1\3\2\0\1\3\1\120\1\121\1\122"+
    "\1\3\1\123\1\3\1\124\2\3\1\125\3\3\1\126"+
    "\1\127\1\130\2\3\1\131\4\3\22\0\2\3\6\0"+
    "\1\3\1\132\1\133\2\3\1\0\2\3\2\0\4\3"+
    "\1\134\1\135\1\3\1\136\10\3\1\137\7\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\140\1\3\2\0\1\141"+
    "\2\3\1\142\1\143\1\144\1\3\1\145\3\3\1\146"+
    "\3\3\1\147\1\150\7\3\22\0\2\3\6\0\1\151"+
    "\4\3\1\0\2\3\2\0\1\152\7\3\1\153\1\154"+
    "\4\3\1\155\11\3\22\0\2\3\6\0\1\3\1\156"+
    "\3\3\1\0\1\157\1\3\2\0\3\3\1\160\1\3"+
    "\1\161\1\3\1\162\20\3\22\0\2\3\6\0\1\163"+
    "\1\164\3\3\1\0\2\3\2\0\1\3\1\165\2\3"+
    "\1\166\1\3\1\167\2\3\1\170\1\171\2\3\1\172"+
    "\12\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\173\3\3\1\174\20\3\22\0\2\3\6\0"+
    "\1\175\1\176\1\177\2\3\1\0\2\3\2\0\1\200"+
    "\1\201\1\202\1\3\1\203\1\3\1\204\1\3\1\205"+
    "\17\3\22\0\2\3\6\0\1\3\1\206\3\3\1\0"+
    "\1\207\1\3\2\0\3\3\1\210\1\211\1\212\1\3"+
    "\1\213\3\3\1\214\3\3\1\215\10\3\22\0\2\3"+
    "\6\0\1\3\1\216\1\217\2\3\1\0\1\220\1\3"+
    "\2\0\3\3\1\221\1\222\1\223\1\3\1\224\20\3"+
    "\22\0\2\3\6\0\1\3\1\225\1\226\2\3\1\0"+
    "\1\227\1\3\2\0\3\3\1\230\1\231\1\232\1\3"+
    "\1\233\20\3\22\0\2\3\6\0\1\3\1\234\3\3"+
    "\1\0\1\235\1\3\2\0\3\3\1\236\1\237\1\240"+
    "\1\3\1\241\7\3\1\242\10\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\243\1\3\2\0\30\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\3\3\1\244\1\245"+
    "\1\246\1\3\1\247\10\3\1\250\7\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\251\1\3\2\0\3\3\1\252"+
    "\1\3\1\253\1\3\1\254\3\3\1\255\14\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\256\1\3\2\0\30\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\5\3"+
    "\1\257\1\3\1\260\20\3\22\0\2\3\6\0\2\3"+
    "\1\261\2\3\1\0\1\262\1\3\2\0\4\3\1\263"+
    "\1\264\5\3\1\265\14\3\22\0\2\3\6\0\5\3"+
    "\1\0\1\266\1\3\2\0\3\3\1\267\7\3\1\270"+
    "\14\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\5\3\1\271\22\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\5\3\1\272\22\3\22\0\1\273\7\0"+
    "\3\273\3\0\2\273\2\0\21\273\1\0\2\273\1\0"+
    "\3\273\1\0\1\274\76\0\1\275\73\0\1\276\73\0"+
    "\1\277\73\0\1\300\76\0\1\301\74\0\1\302\76\0"+
    "\1\303\75\0\1\304\75\0\1\305\3\0\1\67\11\0"+
    "\2\67\1\0\2\306\26\0\1\67\26\0\1\70\11\0"+
    "\2\70\31\0\1\70\24\0\6\71\1\0\65\71\7\72"+
    "\1\307\1\310\63\72\1\0\2\3\6\0\2\3\1\311"+
    "\2\3\1\0\2\3\2\0\16\3\1\312\11\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\20\3\1\256"+
    "\7\3\22\0\2\3\6\0\1\313\4\3\1\0\2\3"+
    "\2\0\1\3\1\314\1\315\25\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\2\3\1\316\13\3\1\317"+
    "\11\3\22\0\2\3\6\0\1\3\1\320\3\3\1\0"+
    "\2\3\2\0\3\3\1\321\6\3\1\322\12\3\1\323"+
    "\2\3\22\0\2\3\6\0\5\3\1\0\1\324\1\3"+
    "\2\0\3\3\1\325\3\3\1\326\20\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\10\3\1\327\1\3"+
    "\1\330\15\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\6\3\1\331\1\332\1\3\1\333\16\3\22\0"+
    "\2\3\6\0\1\334\4\3\1\0\2\3\2\0\25\3"+
    "\1\335\2\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\1\3\1\336\5\3\1\337\5\3\1\330\4\3"+
    "\1\340\5\3\22\0\2\3\6\0\1\341\4\3\1\0"+
    "\2\3\2\0\1\262\27\3\23\0\1\106\11\0\2\106"+
    "\1\0\2\342\26\0\1\106\25\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\1\3\1\343\6\3\1\344\17\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\1\203"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\3\1\345\26\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\4\3\1\346\23\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\347\1\3\2\0\1\3\1\350\1\351"+
    "\1\352\24\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\13\3\1\353\2\3\1\354\11\3\22\0\2\3"+
    "\6\0\2\3\1\355\2\3\1\0\2\3\2\0\1\356"+
    "\1\357\1\360\13\3\1\361\11\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\4\3\1\362\13\3\1\363"+
    "\7\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\7\3\1\364\20\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\27\3\1\365\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\16\3\1\203\11\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\6\3\1\366\21\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\7\3"+
    "\1\367\20\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\7\3\1\370\20\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\1\371\27\3\22\0\2\3\6\0"+
    "\1\3\1\372\3\3\1\0\2\3\2\0\30\3\22\0"+
    "\2\3\6\0\2\3\1\373\2\3\1\0\2\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\374\23\3\22\0\2\3\6\0\1\3\1\375"+
    "\3\3\1\0\2\3\2\0\5\3\1\110\22\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\376\1\3\2\0\5\3"+
    "\1\377\22\3\22\0\2\3\6\0\1\u0100\1\u0101\1\u0102"+
    "\2\3\1\0\2\3\2\0\4\3\1\u0103\2\3\1\u0104"+
    "\6\3\1\u0105\11\3\22\0\2\3\6\0\2\3\1\u0106"+
    "\2\3\1\0\2\3\2\0\1\u0107\1\3\1\u0108\25\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\u0109\1\3\2\0"+
    "\7\3\1\u010a\20\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\14\3\1\u010b\1\3\1\u010c\11\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\u010d\1\3\2\0\30\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\16\3"+
    "\1\u010e\11\3\22\0\2\3\6\0\1\3\1\u010f\3\3"+
    "\1\0\2\3\2\0\3\3\1\u0110\3\3\1\u0111\7\3"+
    "\1\u0112\10\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\12\3\1\u0113\15\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\13\3\1\u0114\14\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\12\3\1\u0115\15\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\u0116\1\3\2\0"+
    "\30\3\22\0\2\3\6\0\1\u0117\1\3\1\u0118\2\3"+
    "\1\0\2\3\2\0\1\u0119\1\u011a\1\u011b\1\u011c\4\3"+
    "\1\u011d\1\3\1\u011e\3\3\1\u011f\11\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\5\3\1\u0120\22\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\u0121\1\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\7\3\1\u0122\6\3\1\u0123\11\3\22\0\2\3\6\0"+
    "\2\3\1\203\2\3\1\0\2\3\2\0\30\3\22\0"+
    "\2\3\6\0\2\3\1\u0124\2\3\1\0\2\3\2\0"+
    "\1\u0125\1\u0126\1\u0127\3\3\1\u0128\1\u0129\1\3\1\u012a"+
    "\1\u012b\1\u012c\14\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\22\3\1\u012d\5\3\22\0\2\3\6\0"+
    "\2\3\1\u012e\2\3\1\0\2\3\2\0\15\3\1\u012f"+
    "\12\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\u0130\24\3\22\0\2\3\6\0\2\3\1\u0131"+
    "\2\3\1\0\2\3\2\0\30\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\2\3\1\u0132\25\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\2\3\1\u0133"+
    "\25\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\10\3\1\u0134\17\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u0135\1\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\11\3\1\u0136\16\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\u0137\1\3\2\0\2\3\1\u0138"+
    "\25\3\22\0\2\3\6\0\1\u0139\4\3\1\0\2\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\1\u013a"+
    "\1\3\2\0\30\3\22\0\2\3\6\0\2\3\1\u013b"+
    "\2\3\1\0\2\3\2\0\4\3\1\u013c\23\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\10\3\1\u013d"+
    "\6\3\1\202\10\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\2\3\1\u013e\25\3\22\0\2\3\6\0"+
    "\2\3\1\u013f\2\3\1\0\2\3\2\0\2\3\1\u0140"+
    "\25\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\u0141\1\u0142\26\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\2\3\1\u0143\25\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\202\1\3\2\0\30\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\22\3\1\u0144\5\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\10\3"+
    "\1\u0145\17\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\16\3\1\u0146\11\3\22\0\2\3\6\0\1\u0131"+
    "\1\3\1\u0147\2\3\1\0\2\3\2\0\1\u0148\1\u0149"+
    "\5\3\1\u014a\1\3\1\u014b\16\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\1\u014c\6\3\1\u014d\20\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\5\3"+
    "\1\u014e\22\3\22\0\2\3\6\0\1\3\1\u014f\3\3"+
    "\1\0\2\3\2\0\16\3\1\u0150\11\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\2\3\1\u0151\14\3"+
    "\1\202\10\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\1\3\1\243\26\3\22\0\2\3\6\0\1\u0152"+
    "\4\3\1\0\2\3\2\0\30\3\22\0\2\3\6\0"+
    "\1\u0153\1\3\1\u0154\2\3\1\0\2\3\2\0\30\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\5\3"+
    "\1\u0155\22\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\2\3\1\u0156\25\3\22\0\2\3\6\0\2\3"+
    "\1\u0157\2\3\1\0\2\3\2\0\4\3\1\u0158\23\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\u0159\1\3\2\0"+
    "\5\3\1\u015a\22\3\22\0\2\3\6\0\1\3\1\u015b"+
    "\3\3\1\0\2\3\2\0\4\3\1\u015c\23\3\22\0"+
    "\2\3\6\0\2\3\1\110\2\3\1\0\2\3\2\0"+
    "\1\u015d\27\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\13\3\1\u015e\14\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\7\3\1\u0116\20\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\4\3\1\u015f\23\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\6\3"+
    "\1\u0160\21\3\22\0\2\3\6\0\5\3\1\0\1\u0161"+
    "\1\3\2\0\3\3\1\u0162\1\3\1\u0163\22\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\1\u0164\27\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\1\u0165"+
    "\27\3\22\0\2\3\6\0\2\3\1\u0166\2\3\1\0"+
    "\2\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\2\3\1\u0167\17\3\1\u0168\5\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\2\3\1\u0169"+
    "\25\3\22\0\2\3\6\0\5\3\1\0\1\u016a\1\3"+
    "\2\0\5\3\1\u016b\22\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\2\3\1\u016c\25\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\3\1\u016d\26\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\1\3"+
    "\1\202\26\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\2\3\1\u016e\25\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\3\3\1\u016f\24\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\4\3\1\u0166\23\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\u0170\24\3\22\0\2\3\6\0\5\3\1\0\1\u0171"+
    "\1\3\2\0\3\3\1\156\24\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\4\3\1\u0172\23\3\22\0"+
    "\2\3\6\0\1\u0173\4\3\1\0\2\3\2\0\30\3"+
    "\22\0\2\3\6\0\1\u0174\4\3\1\0\2\3\2\0"+
    "\10\3\1\u0175\17\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\2\3\1\u0156\1\3\1\u0176\7\3\1\u0177"+
    "\13\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\7\3\1\u0178\20\3\22\0\2\3\6\0\1\3\1\u0178"+
    "\1\u0179\2\3\1\0\2\3\2\0\30\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\6\3\1\u017a\21\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\5\3"+
    "\1\u017b\22\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\2\3\1\202\25\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\5\3\1\u017c\1\3\1\u017d\20\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\2\3"+
    "\1\u017e\25\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\17\3\1\u017f\10\3\22\0\2\3\6\0\2\3"+
    "\1\u0180\2\3\1\0\2\3\2\0\30\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\3\3\1\u0181\24\3"+
    "\22\0\2\3\6\0\1\203\4\3\1\0\2\3\2\0"+
    "\30\3\22\0\2\273\6\0\5\273\1\0\2\273\2\0"+
    "\30\273\1\0\1\u0182\21\0\1\u0183\2\0\1\u0184\6\0"+
    "\2\u0183\3\0\1\u0184\25\0\1\u0183\24\0\10\307\1\310"+
    "\72\307\1\5\1\310\63\307\1\0\2\3\6\0\2\3"+
    "\1\u0185\2\3\1\0\2\3\2\0\30\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\u0186\1\3\2\0\30\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\202\1\3\2\0\1\3"+
    "\1\u0187\26\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\20\3\1\u0188\7\3\22\0\2\3\6\0\1\3"+
    "\1\u0189\3\3\1\0\2\3\2\0\3\3\1\u018a\24\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\u018b\1\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\u018c\27\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\5\3\1\u0116\15\3\1\u018d\4\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\3\3\1\230\24\3"+
    "\22\0\2\3\6\0\1\u018e\4\3\1\0\2\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\u018f\23\3\22\0\2\3\6\0\1\u0190\4\3"+
    "\1\0\2\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\13\3\1\u0191\6\3\1\203\5\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\7\3"+
    "\1\u0192\20\3\22\0\2\3\6\0\5\3\1\0\1\u0178"+
    "\1\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u0180\1\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\10\3\1\u0193\17\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\2\3\1\u0194\25\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\u0195\1\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\1\u0196\1\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\7\3\1\u0197\20\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\10\3\1\202\17\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\3\3\1\u0198\24\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\22\3"+
    "\1\u0199\5\3\23\0\1\u019a\2\0\1\u019b\6\0\2\u019a"+
    "\3\0\1\u019b\25\0\1\u019a\25\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\4\3\1\u019c\23\3\22\0\2\3"+
    "\2\0\1\u019d\3\0\5\3\1\0\2\3\2\0\30\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\7\3"+
    "\1\u019e\20\3\22\0\2\3\6\0\2\3\1\u019f\2\3"+
    "\1\0\2\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\1\3\1\u01a0\26\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\u01a1\1\3\2\0\30\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\u01a2\1\3\2\0\4\3"+
    "\1\u01a3\23\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\1\u01a4\1\3\1\202\25\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\1\u01a5\27\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\u01a6\1\3\2\0\11\3\1\u01a7"+
    "\16\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\u01a8\27\3\22\0\2\3\6\0\1\3\1\u01a9\3\3"+
    "\1\0\2\3\2\0\2\3\1\u01aa\2\3\1\u015b\22\3"+
    "\22\0\2\3\6\0\1\3\1\u01ab\3\3\1\0\2\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\7\3\1\u01ac\20\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\5\3\1\u01ad\22\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\u01ae\1\3\2\0\30\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\2\3\1\u01af"+
    "\25\3\22\0\2\3\6\0\5\3\1\0\1\u01b0\1\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\1\u01b1"+
    "\1\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\1\3\1\203\26\3\22\0\2\3\6\0"+
    "\2\3\1\u01b2\2\3\1\0\2\3\2\0\30\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\2\3\1\u01b3"+
    "\25\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\2\3\1\u01b4\25\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u01b5\1\3\2\0\1\u01b6\1\u01b7\13\3\1\u01b8\12\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\1\u01b9"+
    "\3\3\1\u01ba\23\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\1\u01bb\27\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\7\3\1\u01bc\20\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\u01bd\27\3\22\0"+
    "\2\3\6\0\1\u01be\4\3\1\0\2\3\2\0\1\u01bf"+
    "\1\3\1\u01c0\3\3\1\u01c1\21\3\22\0\2\3\6\0"+
    "\1\u01c2\4\3\1\0\2\3\2\0\30\3\22\0\2\3"+
    "\6\0\1\3\1\u01c3\1\u01c4\2\3\1\0\2\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\u01c5\23\3\22\0\2\3\6\0\2\3\1\u01c6"+
    "\2\3\1\0\2\3\2\0\30\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\12\3\1\u01c7\3\3\1\u01c8"+
    "\11\3\22\0\2\3\6\0\2\3\1\u01c9\2\3\1\0"+
    "\2\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\202\1\3\2\0\1\3\1\u01ca\1\202\25\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\7\3\1\u01cb"+
    "\20\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\3\1\u01cc\26\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\4\3\1\u01cd\23\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\2\3\1\u01ce\25\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\12\3\1\u01cf"+
    "\15\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\23\3\1\u01d0\4\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u01d1\1\3\2\0\30\3\22\0\2\3\6\0\1\u01d2"+
    "\4\3\1\0\1\202\1\3\2\0\30\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\16\3\1\202\3\3"+
    "\1\u01d3\5\3\22\0\2\3\6\0\1\u01d4\4\3\1\0"+
    "\2\3\2\0\3\3\1\u01d5\24\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\21\3\1\u01d6\6\3\22\0"+
    "\2\3\6\0\2\3\1\u01d7\2\3\1\0\2\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\1\u01d8\1\3"+
    "\2\0\30\3\22\0\2\3\6\0\1\202\4\3\1\0"+
    "\2\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u01d9\1\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\3\3\1\u01da\24\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\u01db\1\3\2\0\30\3\22\0"+
    "\2\3\6\0\2\3\1\u01dc\2\3\1\0\2\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\1\u01dd\1\3"+
    "\2\0\5\3\1\u01de\22\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\2\3\1\u01df\25\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\u01e0\1\3\2\0\3\3\1\u01e1"+
    "\24\3\22\0\2\3\6\0\1\3\1\u01e2\3\3\1\0"+
    "\2\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u01e3\1\3\2\0\30\3\22\0\2\3\6\0\2\3"+
    "\1\u01e4\2\3\1\0\2\3\2\0\30\3\22\0\2\3"+
    "\6\0\1\u01e5\4\3\1\0\2\3\2\0\30\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\22\3\1\u01e6"+
    "\5\3\22\0\2\3\6\0\5\3\1\0\1\u01e7\1\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\7\3\1\u01e8\20\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\2\3\1\u01e9\25\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\5\3\1\u01ea\22\3"+
    "\22\0\2\3\6\0\1\3\1\u01eb\3\3\1\0\2\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\1\u01ec"+
    "\1\3\2\0\5\3\1\u01ed\22\3\22\0\2\3\6\0"+
    "\2\3\1\u01ee\2\3\1\0\2\3\2\0\10\3\1\u01ef"+
    "\17\3\22\0\2\3\6\0\5\3\1\0\1\u01f0\1\3"+
    "\2\0\30\3\22\0\2\3\6\0\2\3\1\u01f1\2\3"+
    "\1\0\2\3\2\0\30\3\22\0\2\3\6\0\1\3"+
    "\1\u01f2\3\3\1\0\2\3\2\0\30\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\20\3\1\u01f3\7\3"+
    "\22\0\2\3\6\0\2\3\1\u01f4\2\3\1\0\2\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\1\202\1\u01f5\20\3\1\u01f6\5\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\u01f7\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\17\3\1\202"+
    "\10\3\22\0\2\3\6\0\5\3\1\0\1\u01f8\1\3"+
    "\2\0\12\3\1\u01f9\15\3\22\0\2\3\6\0\5\3"+
    "\1\0\1\u01fa\1\3\2\0\30\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\u01fb\1\3\2\0\30\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\4\3\1\u01fc\23\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\1\u01fd"+
    "\27\3\22\0\2\3\6\0\1\u01fe\4\3\1\0\2\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\3\3\1\u01ff\24\3\22\0\2\3\6\0\5\3"+
    "\1\0\1\u0200\1\3\2\0\30\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\15\3\1\u0201\12\3\22\0"+
    "\2\3\6\0\1\3\1\u0202\3\3\1\0\2\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\3\1\u0203\11\3\1\u0204\3\3\1\u0205\10\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\20\3\1\u0206"+
    "\7\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\5\3\1\u0207\22\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u0208\1\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\1\u0209\1\3\2\0\30\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\u020a\24\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\12\3\1\202"+
    "\15\3\22\0\2\3\6\0\5\3\1\0\1\u020b\1\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\1\3\1\u020c\26\3\22\0\2\3\6\0\2\3"+
    "\1\u020d\2\3\1\0\2\3\2\0\3\3\1\u020e\24\3"+
    "\22\0\2\3\6\0\2\3\1\u020f\2\3\1\0\2\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\1\u0210"+
    "\1\3\2\0\7\3\1\u0211\20\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\1\3\1\u0212\1\u0213\4\3"+
    "\1\u0214\15\3\1\202\2\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\22\3\1\u0215\5\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\12\3\1\u0216\15\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\13\3"+
    "\1\156\14\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\7\3\1\u0217\20\3\22\0\2\3\6\0\5\3"+
    "\1\0\1\u0218\1\3\2\0\7\3\1\u0219\20\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\7\3\1\u021a"+
    "\20\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\3\1\u021b\26\3\22\0\2\3\6\0\2\3\1\u021c"+
    "\2\3\1\0\2\3\2\0\30\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\7\3\1\u021d\20\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\1\3\1\u016c"+
    "\26\3\22\0\2\3\6\0\2\3\1\u021e\2\3\1\0"+
    "\1\u021f\1\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\1\262\27\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\u0220\1\3\2\0\30\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\16\3\1\u0221\11\3"+
    "\22\0\2\3\6\0\1\337\4\3\1\0\2\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\1\u0222\1\3"+
    "\2\0\2\3\1\u0223\12\3\1\u0224\12\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\2\3\1\u0225\25\3"+
    "\22\0\2\3\6\0\2\3\1\u0226\2\3\1\0\2\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\1\3\1\u0227\26\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\5\3\1\262\22\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\u0228\1\u0229\10\3"+
    "\1\u022a\15\3\22\0\2\3\6\0\1\262\4\3\1\0"+
    "\2\3\2\0\5\3\1\u0178\1\u022b\7\3\1\u022c\11\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\1\3"+
    "\1\u022d\26\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\3\3\1\u022e\24\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\1\u022f\1\u0230\26\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\25\3\1\202\2\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\15\3"+
    "\1\u0231\12\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\3\3\1\u0232\24\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\21\3\1\u0233\6\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\7\3\1\u0166\20\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\15\3"+
    "\1\110\12\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\20\3\1\202\7\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\25\3\1\u0234\2\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\20\3\1\u0235\7\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\2\3"+
    "\1\u0236\25\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\2\3\1\u0237\25\3\22\0\2\3\6\0\1\u0238"+
    "\4\3\1\0\2\3\2\0\4\3\1\u0239\23\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\22\3\1\203"+
    "\5\3\22\0\2\3\6\0\1\3\1\u023a\3\3\1\0"+
    "\2\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u023b\1\3\2\0\2\3\1\u016c\25\3\22\0\2\3"+
    "\6\0\1\3\1\156\3\3\1\0\2\3\2\0\3\3"+
    "\1\u023c\24\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\25\3\1\u023d\2\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\1\u023e\27\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\4\3\1\202\23\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\10\3\1\u023f"+
    "\17\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\u0240\24\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\13\3\1\u0241\14\3\22\0\2\3\6\0"+
    "\1\3\1\u0242\3\3\1\0\2\3\2\0\30\3\22\0"+
    "\2\3\6\0\1\262\4\3\1\0\2\3\2\0\30\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\5\3"+
    "\1\202\22\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\1\u0243\27\3\22\0\2\3\6\0\2\3\1\202"+
    "\2\3\1\0\2\3\2\0\30\3\22\0\2\3\6\0"+
    "\1\u0244\4\3\1\0\2\3\2\0\30\3\23\0\1\u0183"+
    "\11\0\2\u0183\31\0\1\u0183\25\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\3\3\1\u0245\24\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\4\3\1\u0246\23\3"+
    "\22\0\2\3\6\0\2\3\1\u0247\2\3\1\0\2\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\1\u0248"+
    "\1\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\4\3\1\u0230\23\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\5\3\1\u0249\22\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\1\u024a\27\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\7\3"+
    "\1\u024b\20\3\22\0\2\3\6\0\1\3\1\u024c\3\3"+
    "\1\0\2\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\5\3\1\u024d\22\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\22\3\1\202\5\3"+
    "\22\0\2\3\6\0\2\3\1\u024e\2\3\1\0\2\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\2\3\1\u024f\25\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\3\3\1\325\24\3\22\0\2\3"+
    "\6\0\1\u017e\4\3\1\0\2\3\2\0\30\3\22\0"+
    "\2\3\6\0\2\3\1\u0250\2\3\1\0\2\3\2\0"+
    "\30\3\22\0\2\3\6\0\1\u0251\4\3\1\0\2\3"+
    "\2\0\30\3\22\0\2\3\6\0\1\3\1\u0252\3\3"+
    "\1\0\2\3\2\0\30\3\23\0\1\u019a\11\0\2\u019a"+
    "\31\0\1\u019a\25\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\17\3\1\u0253\10\3\40\0\1\u0254\55\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\12\3\1\203\15\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\6\3"+
    "\1\u0180\21\3\22\0\2\3\6\0\1\3\1\u0255\3\3"+
    "\1\0\2\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\12\3\1\u0256\15\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\4\3\1\u0257\23\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\7\3"+
    "\1\u0258\20\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\2\3\1\u0259\25\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\2\3\1\u025a\25\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\3\1\u025b\26\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\u025c\24\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\4\3\1\u025d\23\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\3\3\1\u025e\24\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\330\27\3\22\0"+
    "\2\3\6\0\1\u025f\4\3\1\0\2\3\2\0\30\3"+
    "\22\0\2\3\6\0\2\3\1\u0260\2\3\1\0\2\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\16\3\1\u0261\11\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\3\3\1\u0262\24\3\22\0\2\3"+
    "\6\0\2\3\1\u0263\2\3\1\0\2\3\2\0\30\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\u0264\1\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\10\3\1\u018e\17\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\4\3\1\u0265\23\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\2\3\1\u0266\25\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\5\3\1\u0267"+
    "\1\3\1\202\20\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\7\3\1\u0268\20\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\5\3\1\u0269\22\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\u026a\1\3\2\0\30\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\2\3"+
    "\1\u026b\25\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\2\3\1\u026c\25\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\1\202\27\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\u026d\1\3\2\0\30\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\2\3\1\u026e\25\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\u026f\3\3\1\u0270\20\3\22\0\2\3\6\0\5\3"+
    "\1\0\1\u01ec\1\3\2\0\30\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\2\3\1\u0271\25\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\16\3\1\u0272"+
    "\11\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\7\3\1\u0273\20\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u0274\1\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\1\u0275\1\3\2\0\30\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\u0276\24\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\u0277\1\3\2\0\30\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\7\3"+
    "\1\u0278\20\3\22\0\2\3\6\0\2\3\1\u0279\2\3"+
    "\1\0\2\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\25\3\1\u027a\2\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\7\3\1\u027b\11\3"+
    "\1\u0233\6\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\1\u027c\27\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\5\3\1\u027d\22\3\22\0\2\3\6\0"+
    "\1\3\1\u0230\3\3\1\0\2\3\2\0\30\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\1\u027e\26\3"+
    "\1\u027f\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\3\1\u0280\26\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\22\3\1\330\5\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\1\u0281\27\3\22\0\2\3"+
    "\6\0\2\3\1\u0193\2\3\1\0\2\3\2\0\30\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\1\3"+
    "\1\u0282\26\3\22\0\2\3\6\0\5\3\1\0\1\u0283"+
    "\1\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\21\3\1\u0284\6\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\4\3\1\u0285\23\3\22\0"+
    "\2\3\6\0\1\u0286\4\3\1\0\2\3\2\0\30\3"+
    "\22\0\2\3\6\0\1\u0287\4\3\1\0\2\3\2\0"+
    "\4\3\1\u0288\23\3\22\0\2\3\6\0\1\3\1\u0289"+
    "\3\3\1\0\2\3\2\0\30\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\4\3\1\u028a\15\3\1\330"+
    "\5\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\u028b\24\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\14\3\1\u028c\13\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\1\3\1\u028d\26\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\2\3\1\u028e"+
    "\25\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\10\3\1\u028f\17\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\7\3\1\u022e\20\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\2\3\1\u0290\25\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\u0291\1\3\2\0\30\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\10\3"+
    "\1\u0292\17\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\2\3\1\u0293\25\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\4\3\1\u0294\1\u0295\22\3\22\0"+
    "\2\3\6\0\1\u0296\4\3\1\0\2\3\2\0\16\3"+
    "\1\u0297\11\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\4\3\1\u0298\23\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\4\3\1\262\23\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\25\3\1\203\2\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\2\3"+
    "\1\u0299\2\3\1\u029a\13\3\1\u029b\6\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\4\3\1\u029c\23\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\u029d\24\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\3\3\1\u029e\24\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\2\3\1\u029f\25\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\13\3\1\u02a0\14\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\5\3"+
    "\1\u02a1\22\3\22\0\2\3\6\0\1\3\1\u02a2\3\3"+
    "\1\0\2\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\1\u01b5\1\3\2\0\30\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\4\3\1\u02a3\23\3\22\0"+
    "\2\3\6\0\1\3\1\u02a4\3\3\1\0\2\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\2\3\1\u02a5\25\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\4\3\1\u02a6\23\3\22\0\2\3\6\0"+
    "\2\3\1\u02a7\2\3\1\0\2\3\2\0\30\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\u02a8\1\3\2\0\30\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\4\3"+
    "\1\u02a9\3\3\1\u02aa\3\3\1\u02ab\6\3\1\u02ac\4\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\5\3"+
    "\1\u0116\10\3\1\u02ad\11\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\4\3\1\u02ae\23\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\u02af\1\3\2\0\30\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\20\3\1\u02b0"+
    "\7\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\u02b1\24\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\3\3\1\u02b2\24\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\5\3\1\u02b3\22\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\1\3\1\u0266"+
    "\26\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\u02b4\23\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\4\3\1\u022e\23\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\5\3\1\u02b5\22\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\2\3\1\u02b6"+
    "\25\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\u02b7\23\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\7\3\1\u02b8\20\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\16\3\1\u02b9\11\3\22\0"+
    "\2\3\6\0\2\3\1\u02ba\2\3\1\0\2\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\u02bb\23\3\22\0\2\3\6\0\1\3\1\u02bc"+
    "\3\3\1\0\2\3\2\0\30\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\5\3\1\u02bd\22\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\3\3\1\u02be"+
    "\1\u02bf\23\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\13\3\1\u02c0\14\3\22\0\2\3\6\0\1\u02c1"+
    "\4\3\1\0\2\3\2\0\30\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\u0116\24\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\2\3\1\u02c2"+
    "\25\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\13\3\1\u02c3\14\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\16\3\1\u02c4\11\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\2\3\1\u02c5\25\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\2\3\1\u02c6"+
    "\25\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\11\3\1\u02c7\16\3\22\0\2\3\6\0\1\u02c8\4\3"+
    "\1\0\2\3\2\0\1\u02c9\21\3\1\u02ca\5\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\2\3\1\u02cb"+
    "\25\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\u02cc\24\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\4\3\1\226\23\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\7\3\1\u02cd\20\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\21\3\1\u02ce"+
    "\6\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\243\24\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u02cf\1\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\1\u02d0\1\3\2\0\30\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\u02d1\24\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\7\3\1\u0295"+
    "\20\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\u02d2\24\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\7\3\1\u02d3\20\3\22\0\2\3\6\0"+
    "\4\3\1\u02d4\1\0\1\u02d5\1\3\2\0\30\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\2\3\1\u01aa"+
    "\25\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\15\3\1\u02d6\12\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\7\3\1\u0180\20\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\u02d7\1\3\2\0\30\3\22\0\2\3"+
    "\6\0\1\u02d8\4\3\1\0\2\3\2\0\30\3\22\0"+
    "\2\3\6\0\2\3\1\u02d9\2\3\1\0\2\3\2\0"+
    "\30\3\22\0\2\3\6\0\1\3\1\u0146\3\3\1\0"+
    "\2\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u02da\1\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\11\3\1\u02db\16\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\u02dc\1\3\2\0\30\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\u02dd\1\3\2\0\30\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\2\3"+
    "\1\203\25\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\17\3\1\u02de\10\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\11\3\1\u02df\16\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\3\3\1\u02e0\24\3"+
    "\22\0\2\3\6\0\2\3\1\u02e1\2\3\1\0\2\3"+
    "\2\0\30\3\22\0\2\3\6\0\1\u02e2\4\3\1\0"+
    "\2\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\7\3\1\u02e3\20\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\12\3\1\u02e4\15\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\u02e5\1\3\2\0\30\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\11\3"+
    "\1\202\16\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\3\3\1\u02e6\24\3\22\0\2\3\6\0\1\3"+
    "\1\u02e7\3\3\1\0\2\3\2\0\30\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\3\1\u0166\26\3"+
    "\22\0\2\3\6\0\1\u02e8\4\3\1\0\2\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\13\3\1\u02e9\14\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u02ea\1\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\15\3\1\u0116\12\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\u02eb\1\3\2\0\30\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\u02ec\1\3\2\0\30\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\7\3"+
    "\1\u0172\20\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\12\3\1\u02ed\15\3\60\0\1\u02ee\35\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\2\3\1\u02ef\25\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\2\3"+
    "\1\u02f0\25\3\22\0\2\3\6\0\1\u0230\4\3\1\0"+
    "\2\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\1\3\1\262\26\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\1\u02f1\27\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\4\3\1\u0193\23\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\2\3"+
    "\1\u02f2\25\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\5\3\1\u02f3\22\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\3\3\1\u02f4\24\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\5\3\1\u0116\22\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\2\3"+
    "\1\u02f5\25\3\22\0\2\3\6\0\2\3\1\u02f6\2\3"+
    "\1\0\2\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\7\3\1\u02f7\20\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\u02f8\1\u02f9\26\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\u017d\4\3\1\u02fa\17\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\16\3\1\u02fb\11\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\4\3\1\u02db\23\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\7\3"+
    "\1\u023a\20\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\10\3\1\203\17\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\4\3\1\u02fc\23\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\4\3\1\u02fd\23\3"+
    "\22\0\2\3\6\0\1\u02fe\4\3\1\0\2\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\1\u02ff\1\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\1\u0300"+
    "\1\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\1\3\1\u0256\26\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\4\3\1\u0301\23\3\22\0"+
    "\2\3\6\0\1\u0302\4\3\1\0\2\3\2\0\30\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\u0303\24\3\22\0\2\3\6\0\1\u0304\4\3\1\0"+
    "\2\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\2\3\1\u0305\25\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\1\u0306\27\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\367\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\2\3\1\u0307"+
    "\25\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\u0308\3\3\1\u0309\17\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\10\3\1\u030a\17\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\5\3\1\u0190"+
    "\22\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\12\3\1\u030b\15\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\1\3\1\u030c\26\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\u030d\24\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\4\3\1\u030e"+
    "\23\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\2\3\1\u030f\25\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\5\3\1\u0310\22\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\7\3\1\u0311\20\3\22\0"+
    "\2\3\6\0\2\3\1\u0312\2\3\1\0\2\3\2\0"+
    "\7\3\1\u0313\20\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\5\3\1\u0314\22\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\1\u0315\27\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\15\3\1\u0316\12\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\u0317\1\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\u0318\27\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\2\3\1\u0319\25\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\10\3\1\u031a\17\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\u031b\5\3\1\u0230"+
    "\21\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\7\3\1\u031c\20\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\7\3\1\u031d\20\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\u031e\24\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\3\3\1\u031f"+
    "\24\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\u0266\24\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\3\3\1\u0320\24\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\u0258\24\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\4\3\1\203"+
    "\23\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\11\3\1\u0321\16\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\12\3\1\u0322\15\3\22\0\2\3\6\0"+
    "\1\u0323\4\3\1\0\2\3\2\0\30\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\u0324\1\3\2\0\30\3\22\0"+
    "\2\3\6\0\1\u0325\4\3\1\0\2\3\2\0\30\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\5\3"+
    "\1\u0326\22\3\22\0\2\3\6\0\5\3\1\0\1\u0327"+
    "\1\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\1\3\1\u0328\26\3\22\0\2\3\6\0"+
    "\2\3\1\u0329\2\3\1\0\2\3\2\0\30\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\7\3\1\u032a"+
    "\20\3\22\0\2\3\6\0\1\3\1\u017d\3\3\1\0"+
    "\2\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\3\3\1\u032b\24\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\2\3\1\u032c\25\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\7\3\1\u032d"+
    "\20\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\2\3\1\u01bd\25\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\5\3\1\u032e\22\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\7\3\1\u032f\20\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\16\3\1\u0180"+
    "\11\3\22\0\2\3\6\0\1\3\1\u0330\3\3\1\0"+
    "\2\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\3\3\1\u0331\24\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\1\u0332\27\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\7\3\1\u0333\20\3"+
    "\22\0\2\3\6\0\1\u0334\4\3\1\0\2\3\2\0"+
    "\30\3\22\0\2\3\6\0\1\u0335\4\3\1\0\2\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\4\3\1\u0336\23\3\22\0\2\3\6\0\1\u0337"+
    "\4\3\1\0\2\3\2\0\30\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\u0338\1\3\2\0\30\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\3\3\1\u0339\24\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\4\3"+
    "\1\u033a\23\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\7\3\1\u033b\20\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\4\3\1\u033c\23\3\22\0\2\3"+
    "\6\0\2\3\1\u033d\2\3\1\0\2\3\2\0\30\3"+
    "\22\0\2\3\6\0\1\u033e\4\3\1\0\2\3\2\0"+
    "\30\3\22\0\2\3\6\0\1\u033f\4\3\1\0\2\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\3\3\1\u0340\24\3\22\0\2\3\6\0\2\3"+
    "\1\u0341\2\3\1\0\2\3\2\0\30\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\5\3\1\u0342\22\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\u0343\24\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\7\3\1\u0344\20\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\3\3\1\u0345\24\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\3\3\1\u0346\24\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\7\3"+
    "\1\u0347\20\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\7\3\1\u0348\20\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\4\3\1\u0349\23\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\u034a\1\3\2\0\30\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\22\3\1\u034b"+
    "\5\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\u034c\23\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\11\3\1\u034d\16\3\22\0\2\3\6\0"+
    "\1\u034e\4\3\1\0\2\3\2\0\30\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\4\3\1\u0320\23\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\1\u01aa"+
    "\27\3\22\0\2\3\6\0\2\3\1\u034f\2\3\1\0"+
    "\2\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\4\3\1\u0350\23\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\7\3\1\u0351\20\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\10\3\1\u0352"+
    "\17\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\5\3\1\u0353\22\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u0354\1\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\1\u0355\1\3\2\0\30\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\2\3\1\u0299\25\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\5\3\1\u0178"+
    "\22\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\6\3\1\330\21\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\17\3\1\u0356\10\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\27\3\1\u0357\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\5\3\1\u0248\22\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\22\3"+
    "\1\u0358\5\3\22\0\2\3\6\0\2\3\1\u0359\2\3"+
    "\1\0\2\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\2\3\1\u035a\25\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\3\1\u035b\26\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\1\u035c"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\7\3\1\u035d\20\3\22\0\2\3\6\0\2\3\1\u035e"+
    "\2\3\1\0\2\3\2\0\30\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\2\3\1\u035f\25\3\40\0"+
    "\1\u0360\55\0\2\3\6\0\5\3\1\0\1\u0361\1\3"+
    "\2\0\30\3\22\0\2\3\6\0\1\u0362\4\3\1\0"+
    "\2\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\2\3\1\u0363\25\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\u0364\24\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\21\3\1\u0365"+
    "\6\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\13\3\1\u0366\14\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\2\3\1\u0367\25\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\7\3\1\u0368\20\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\21\3\1\u0369"+
    "\6\3\22\0\2\3\6\0\1\u0193\4\3\1\0\2\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\2\3\1\u036a\25\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\4\3\1\u036b\23\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\7\3\1\u036c\20\3"+
    "\22\0\2\3\6\0\1\3\1\203\3\3\1\0\2\3"+
    "\2\0\30\3\22\0\2\3\6\0\1\u036d\4\3\1\0"+
    "\2\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u036e\1\3\2\0\3\3\1\u025e\24\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\12\3\1\u036f\15\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\u0370\1\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\5\3\1\u0371\22\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\2\3\1\u0372\25\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\27\3\1\203\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\7\3\1\u0373\20\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\7\3"+
    "\1\u0374\20\3\22\0\2\3\6\0\1\u0375\4\3\1\0"+
    "\2\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\2\3\1\u0376\25\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\7\3\1\u0377\20\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\1\3\1\u0378"+
    "\26\3\22\0\2\3\6\0\1\u0379\4\3\1\0\2\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\7\3\1\u037a\20\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\7\3\1\u037b\20\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\3\3\1\u01e8\24\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\u037c\1\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\1\u0258\1\3"+
    "\2\0\30\3\22\0\2\3\6\0\2\3\1\u037d\2\3"+
    "\1\0\2\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\2\3\1\u02db\25\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\7\3\1\u037e\20\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\2\3"+
    "\1\u037f\25\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\6\3\1\203\21\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\3\3\1\u0380\24\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\3\3\1\u0381\24\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\1\u0382"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\14\3\1\262\13\3\22\0\2\3\6\0\2\3\1\u0383"+
    "\2\3\1\0\2\3\2\0\30\3\22\0\2\3\6\0"+
    "\1\u0384\4\3\1\0\2\3\2\0\30\3\22\0\2\3"+
    "\6\0\1\u0385\4\3\1\0\2\3\2\0\30\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\7\3\1\u0386"+
    "\20\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\10\3\1\u0387\17\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\1\3\1\u0388\26\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\10\3\1\u0389\17\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\12\3\1\u01bd"+
    "\15\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\15\3\1\u038a\12\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\2\3\1\u038b\25\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\u0373\1\3\2\0\30\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\u038c\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\4\3\1\u038d"+
    "\23\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\7\3\1\u038e\20\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\22\3\1\u038f\5\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\u0390\24\3\22\0"+
    "\2\3\6\0\4\3\1\u0391\1\0\2\3\2\0\30\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\12\3"+
    "\1\u031d\1\203\14\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u0392\1\3\2\0\30\3\22\0\2\3\6\0\2\3"+
    "\1\u0393\2\3\1\0\2\3\2\0\30\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\337\1\3\2\0\7\3\1\u0394"+
    "\20\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\2\3\1\u0395\25\3\22\0\2\3\6\0\1\u031b\4\3"+
    "\1\0\2\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\1\3\1\u0396\26\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\13\3\1\u0397\14\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\u0398\1\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\u02f8\27\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\16\3\1\u0399\11\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\1\u039a\27\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\1\3\1\u039b\26\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\5\3\1\u039c"+
    "\22\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\3\1\u031d\26\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\16\3\1\u039d\11\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\5\3\1\u039e\22\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\14\3\1\u039f"+
    "\13\3\22\0\2\3\6\0\1\u03a0\4\3\1\0\2\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\10\3\1\u03a1\17\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\5\3\1\u03a2\22\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\2\3\1\u03a3\25\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\u03a4\1\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\17\3\1\u03a5\10\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\13\3\1\u03a6\14\3\22\0\2\3\6\0"+
    "\1\3\1\u03a7\3\3\1\0\2\3\2\0\30\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\4\3\1\u03a8"+
    "\23\3\22\0\2\3\6\0\1\u03a9\4\3\1\0\2\3"+
    "\2\0\30\3\22\0\2\3\6\0\1\u03aa\4\3\1\0"+
    "\2\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u03ab\1\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\2\3\1\u03ac\25\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\u03ad\1\3\2\0\30\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\3\3\1\u03ae"+
    "\24\3\45\0\1\u03af\50\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\21\3\1\u03b0\6\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\17\3\1\u03b1\10\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\1\3\1\u03b2"+
    "\26\3\22\0\2\3\6\0\2\3\1\u03b3\2\3\1\0"+
    "\2\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\3\3\1\u03b4\24\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\u03b5\24\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\2\3\1\u03b6"+
    "\25\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\21\3\1\u03b7\6\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u03b8\1\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\3\3\1\u03b9\24\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\u03ba\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\5\3\1\u03bb"+
    "\22\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\u017d\24\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u03bc\1\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\4\3\1\u0131\23\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\16\3\1\u03bd\11\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\u03be\1\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\1\u03bf\1\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\2\3\1\u03c0\25\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\2\3\1\u03c1\25\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\6\3\1\u01c1\21\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\16\3"+
    "\1\u03c2\11\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\4\3\1\u03c3\23\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\2\3\1\u03c4\25\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\17\3\1\u03c5\10\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\22\3"+
    "\1\u03c6\5\3\22\0\2\3\6\0\2\3\1\u03c7\2\3"+
    "\1\0\2\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\17\3\1\u03c8\10\3\22\0\2\3"+
    "\6\0\2\3\1\u03c9\2\3\1\0\2\3\2\0\30\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\1\3"+
    "\1\u03ca\26\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\2\3\1\u03cb\25\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\25\3\1\u03cc\2\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\3\1\u03cd\26\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\1\u03ce"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\7\3\1\u03cf\20\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\2\3\1\u03d0\25\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\4\3\1\u03d1\23\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\27\3\1\u01e4"+
    "\22\0\2\3\6\0\5\3\1\0\1\u03d2\1\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\13\3\1\u03d3\14\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\21\3\1\u03d4\6\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\2\3\1\u03d5\25\3\22\0"+
    "\2\3\6\0\1\3\1\u03d6\3\3\1\0\2\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\1\u03d7\1\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\1\u03d8"+
    "\1\3\2\0\30\3\22\0\2\3\6\0\1\u03d9\4\3"+
    "\1\0\2\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\1\u03da\1\3\2\0\30\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\15\3\1\u03db\12\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\2\3\1\u03ba"+
    "\25\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\21\3\1\u03dc\6\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\4\3\1\u03dd\23\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\22\3\1\u03de\5\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\1\u03df\27\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\4\3"+
    "\1\u03e0\23\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\10\3\1\u03e1\17\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\22\3\1\240\5\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\u03e2\1\3\2\0\30\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\5\3\1\u03e3"+
    "\22\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\7\3\1\u03e4\20\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\7\3\1\u03e5\20\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\1\u03e6\24\3\1\u03e7\2\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\5\3"+
    "\1\u03e8\22\3\22\0\2\3\6\0\1\u03e9\4\3\1\0"+
    "\2\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\1\3\1\u01bd\26\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\u03ea\1\3\2\0\30\3\22\0\2\3"+
    "\6\0\1\3\1\u01ab\3\3\1\0\2\3\2\0\2\3"+
    "\1\u03eb\5\3\1\u0266\17\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\10\3\1\u03ec\17\3\22\0\2\3"+
    "\6\0\1\u03ed\4\3\1\0\2\3\2\0\30\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\2\3\1\u03ee"+
    "\25\3\22\0\2\3\6\0\1\332\4\3\1\0\2\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\4\3\1\u03ef\23\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\12\3\1\u03f0\15\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\21\3\1\u03f1\6\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\202\1\3\2\0"+
    "\3\3\1\u025e\24\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\3\3\1\u03f2\24\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\12\3\1\156\15\3\22\0"+
    "\2\3\6\0\1\u03f3\4\3\1\0\2\3\2\0\30\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\u03f4\1\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\3\1\u03cd\17\3\1\u03f5\6\3\22\0\2\3\6\0"+
    "\1\3\1\u0295\3\3\1\0\2\3\2\0\30\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\u03f6\1\3\2\0\30\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\17\3"+
    "\1\u03f7\10\3\22\0\2\3\6\0\5\3\1\0\1\u03f8"+
    "\1\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\3\3\1\u03f9\24\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\5\3\1\u0180\22\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\262\1\3\2\0\30\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\1\u03fa"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\u03fb\24\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\17\3\1\u03fc\10\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\14\3\1\u03fd\13\3\22\0"+
    "\2\3\6\0\2\3\1\u03fe\2\3\1\0\2\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\u03ff\27\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\2\3\1\u0400\25\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\5\3\1\u0401\16\3\1\u0402\3\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\2\3"+
    "\1\u0403\25\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\5\3\1\u0404\22\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\15\3\1\u0405\12\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\u01bd\1\3\2\0\30\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\5\3\1\u0406"+
    "\22\3\22\0\2\3\6\0\5\3\1\0\1\u0407\1\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\4\3\1\u0408\23\3\22\0\2\3\6\0\1\u0409"+
    "\4\3\1\0\2\3\2\0\30\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\1\u040a\27\3\22\0\2\3"+
    "\6\0\1\3\1\u040b\3\3\1\0\2\3\2\0\30\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\u040c\24\3\22\0\2\3\6\0\5\3\1\0\1\u040d"+
    "\1\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\1\3\1\u040e\26\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\10\3\1\u040f\17\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\2\3\1\u0410"+
    "\25\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\u0411\24\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\2\3\1\u0412\25\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\7\3\1\u014f\20\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\16\3\1\u0413"+
    "\1\3\1\u0414\7\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\5\3\1\u0415\22\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\u0416\24\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\3\3\1\u0417"+
    "\24\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\u0418\27\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\5\3\1\u0419\22\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\5\3\1\u041a\22\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\3\1\u041b\26\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\u041c\1\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\1\u041d\1\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\1\3\1\u041e\26\3\22\0\2\3\6\0\5\3"+
    "\1\0\1\337\1\3\2\0\30\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\11\3\1\u041f\16\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\20\3\1\u0420"+
    "\7\3\22\0\2\3\6\0\1\u0421\4\3\1\0\2\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\7\3\1\u0422\20\3\22\0\2\3\6\0\2\3"+
    "\1\u01c7\2\3\1\0\2\3\2\0\30\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\u0423\1\3\2\0\30\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\21\3\1\u0424"+
    "\6\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\10\3\1\u0425\17\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\16\3\1\u0426\11\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\17\3\1\u0427\10\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\25\3\1\u0428"+
    "\2\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\u0429\24\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\3\3\1\u042a\24\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\16\3\1\u042b\11\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\3\3\1\u042c"+
    "\24\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\5\3\1\u042d\22\3\22\0\2\3\6\0\1\u042e\4\3"+
    "\1\0\2\3\2\0\30\3\22\0\2\3\6\0\1\u042f"+
    "\4\3\1\0\2\3\2\0\30\3\22\0\2\3\6\0"+
    "\1\u0430\4\3\1\0\2\3\2\0\30\3\22\0\2\3"+
    "\6\0\1\u0431\4\3\1\0\2\3\2\0\30\3\22\0"+
    "\2\3\6\0\1\3\1\u0432\3\3\1\0\2\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\3\1\u0433\26\3\22\0\2\3\6\0\1\u0299\4\3"+
    "\1\0\2\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\20\3\1\u0434\7\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\11\3\1\u0435\16\3"+
    "\22\0\2\3\6\0\2\3\1\u0436\2\3\1\0\2\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\4\3\1\u0437\23\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\10\3\1\u0438\17\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\3\1\u0439\26\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\262\24\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\3\3\1\u043a\24\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\12\3\1\u043b\15\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\u043c\27\3\22\0"+
    "\2\3\6\0\1\u043d\4\3\1\0\2\3\2\0\30\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\16\3"+
    "\1\u043e\11\3\22\0\2\3\6\0\5\3\1\0\1\u043f"+
    "\1\3\2\0\30\3\22\0\2\3\6\0\1\u01c7\4\3"+
    "\1\0\2\3\2\0\30\3\22\0\2\3\6\0\1\3"+
    "\1\u0178\3\3\1\0\2\3\2\0\30\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\22\3\1\u0440\5\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\1\u01c1"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\367\23\3\22\0\2\3\6\0\1\3\1\u0441"+
    "\3\3\1\0\2\3\2\0\30\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\u0442\1\3\2\0\30\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\u0443\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\17\3\1\u0444"+
    "\10\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\10\3\1\u0445\17\3\22\0\2\3\6\0\2\3\1\u0446"+
    "\2\3\1\0\2\3\2\0\30\3\22\0\2\3\6\0"+
    "\2\3\1\u0447\2\3\1\0\2\3\2\0\30\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\20\3\1\u0448"+
    "\7\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\22\3\1\u0449\5\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u044a\1\3\2\0\30\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\1\u044b\27\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\2\3\1\u044c\25\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\16\3\1\u044d"+
    "\11\3\22\0\2\3\6\0\5\3\1\0\1\u044e\1\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\7\3\1\u044f\20\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\7\3\1\u0450\20\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\4\3\1\u0451\23\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\2\3"+
    "\1\u0452\25\3\22\0\2\3\6\0\5\3\1\0\1\u0453"+
    "\1\3\2\0\30\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\7\3\1\u0454\20\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\2\3\1\u0455\25\3\22\0"+
    "\2\3\6\0\1\3\1\u0456\3\3\1\0\2\3\2\0"+
    "\30\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\u0457\23\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\7\3\1\u0458\20\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\7\3\1\206\20\3\22\0"+
    "\2\3\6\0\4\3\1\u0459\1\0\2\3\2\0\30\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\1\u045a"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\u045b\24\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\1\u045c\27\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\12\3\1\u045d\15\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\u045e\1\3\2\0\30\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\2\3\1\u045f"+
    "\25\3\22\0\2\3\6\0\5\3\1\0\1\u0460\1\3"+
    "\2\0\30\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\7\3\1\u0461\20\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\17\3\1\u0462\10\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\10\3\1\u0463\17\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\2\3"+
    "\1\u03ee\5\3\1\u0464\17\3\22\0\2\3\6\0\4\3"+
    "\1\u0465\1\0\2\3\2\0\30\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\u0466\1\3\2\0\30\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\7\3\1\u0467\20\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\2\3"+
    "\1\u0468\25\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\10\3\1\u0469\17\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\7\3\1\u046a\20\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\7\3\1\u046b\20\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\u046c\24\3\22\0\2\3\6\0\4\3\1\u046d\1\0"+
    "\2\3\2\0\30\3\22\0\2\3\6\0\2\3\1\u046e"+
    "\2\3\1\0\2\3\2\0\30\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\u046f\1\3\2\0\30\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\u0460\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\14\3\1\u0470"+
    "\13\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\u0471\24\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\1\u0472\27\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\2\3\1\u0473\25\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\u0474\27\3\22\0"+
    "\2\3\6\0\4\3\1\u0475\1\0\2\3\2\0\30\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\12\3"+
    "\1\u0476\15\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\7\3\1\u0477\20\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\4\3\1\u0478\23\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\2\3\1\u0479\25\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\u0230\24\3\21\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[59280];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\2\1\2\11\2\1\1\11\6\1\1\11"+
    "\27\1\2\11\6\1\1\11\1\1\1\11\1\1\2\11"+
    "\26\1\1\0\1\11\155\1\1\0\12\11\3\0\31\1"+
    "\1\0\237\1\1\11\1\1\1\0\26\1\1\0\1\1"+
    "\1\0\266\1\1\0\231\1\1\0\161\1\1\0\116\1"+
    "\1\11\312\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1145];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    private Symbol symbol(int type, Object value){
        return new Symbol(type, yyline, yycolumn, value);
    }

    private Symbol symbol(int type){
        return new Symbol(type, yyline, yycolumn);
    }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  LexerCup(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 188) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
      yyclose();
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          zzR = false;
          break;
        case '\r':
          yyline++;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
          }
          break;
        default:
          zzR = false;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
          { return new java_cup.runtime.Symbol(sym.EOF); }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { return new Symbol(sym.ERROR, yychar, yyline, yytext());
            } 
            // fall through
          case 196: break;
          case 2: 
            { return new Symbol(sym.ID, yychar, yyline, yytext());
            } 
            // fall through
          case 197: break;
          case 3: 
            { return new Symbol(sym.INT, yychar, yyline, yytext());
            } 
            // fall through
          case 198: break;
          case 4: 
            { /*Ignore*/
            } 
            // fall through
          case 199: break;
          case 5: 
            { return new Symbol(sym.COMA, yychar, yyline, yytext());
            } 
            // fall through
          case 200: break;
          case 6: 
            { return new Symbol(sym.MENOS, yychar, yyline, yytext());
            } 
            // fall through
          case 201: break;
          case 7: 
            { return new Symbol(sym.DIV, yychar, yyline, yytext());
            } 
            // fall through
          case 202: break;
          case 8: 
            { return new Symbol(sym.MULT, yychar, yyline, yytext());
            } 
            // fall through
          case 203: break;
          case 9: 
            { return new Symbol(sym.BIT, yychar, yyline, yytext());
            } 
            // fall through
          case 204: break;
          case 10: 
            { return new Symbol(sym.PUNTO, yychar, yyline, yytext());
            } 
            // fall through
          case 205: break;
          case 11: 
            { return new Symbol(sym.MAS, yychar, yyline, yytext());
            } 
            // fall through
          case 206: break;
          case 12: 
            { return new Symbol(sym.CORCHETE_ABIERTO, yychar, yyline, yytext());
            } 
            // fall through
          case 207: break;
          case 13: 
            { return new Symbol(sym.CORCHETE_CERRADO, yychar, yyline, yytext());
            } 
            // fall through
          case 208: break;
          case 14: 
            { return new Symbol(sym.RES, yychar, yyline, yytext());
            } 
            // fall through
          case 209: break;
          case 15: 
            { return new Symbol(sym.MENOR, yychar, yyline, yytext());
            } 
            // fall through
          case 210: break;
          case 16: 
            { return new Symbol(sym.IGUAL, yychar, yyline, yytext());
            } 
            // fall through
          case 211: break;
          case 17: 
            { return new Symbol(sym.MAYOR, yychar, yyline, yytext());
            } 
            // fall through
          case 212: break;
          case 18: 
            { return new Symbol(sym.EXCLAMACION, yychar, yyline, yytext());
            } 
            // fall through
          case 213: break;
          case 19: 
            { return new Symbol(sym.PUNTO_COMA, yychar, yyline, yytext());
            } 
            // fall through
          case 214: break;
          case 20: 
            { return new Symbol(sym.PARENTESIS_ABIERTO, yychar, yyline, yytext());
            } 
            // fall through
          case 215: break;
          case 21: 
            { return new Symbol(sym.PARENTESIS_CERRADO, yychar, yyline, yytext());
            } 
            // fall through
          case 216: break;
          case 22: 
            { return new Symbol(sym.LLAVE_ABIERTO, yychar, yyline, yytext());
            } 
            // fall through
          case 217: break;
          case 23: 
            { return new Symbol(sym.LLAVE_CERRADO, yychar, yyline, yytext());
            } 
            // fall through
          case 218: break;
          case 24: 
            { return new Symbol(sym.ARROBA, yychar, yyline, yytext());
            } 
            // fall through
          case 219: break;
          case 25: 
            { return new Symbol(sym.NUMERAL, yychar, yyline, yytext());
            } 
            // fall through
          case 220: break;
          case 26: 
            { return new Symbol(sym.FLOAT, yychar, yyline, yytext());
            } 
            // fall through
          case 221: break;
          case 27: 
            { return new Symbol(sym.COMENTARIO_M, yychar, yyline, yytext());
            } 
            // fall through
          case 222: break;
          case 28: 
            { return new Symbol(sym.PALABRA_RESERVADA, yychar, yyline, yytext());
            } 
            // fall through
          case 223: break;
          case 29: 
            { return new Symbol(sym.ERROR_F, yychar, yyline, yytext());
            } 
            // fall through
          case 224: break;
          case 30: 
            { return new Symbol(sym.STRING, yychar, yyline, yytext());
            } 
            // fall through
          case 225: break;
          case 31: 
            { return new Symbol(sym.TO, yychar, yyline, yytext());
            } 
            // fall through
          case 226: break;
          case 32: 
            { return new Symbol(sym.TB, yychar, yyline, yytext());
            } 
            // fall through
          case 227: break;
          case 33: 
            { return new Symbol(sym.IF, yychar, yyline, yytext());
            } 
            // fall through
          case 228: break;
          case 34: 
            { return new Symbol(sym.ON, yychar, yyline, yytext());
            } 
            // fall through
          case 229: break;
          case 35: 
            { return new Symbol(sym.OR, yychar, yyline, yytext());
            } 
            // fall through
          case 230: break;
          case 36: 
            { return new Symbol(sym.AS, yychar, yyline, yytext());
            } 
            // fall through
          case 231: break;
          case 37: 
            { return new Symbol(sym.BY, yychar, yyline, yytext());
            } 
            // fall through
          case 232: break;
          case 38: 
            { return new Symbol(sym.MB, yychar, yyline, yytext());
            } 
            // fall through
          case 233: break;
          case 39: 
            { return new Symbol(sym.GO, yychar, yyline, yytext());
            } 
            // fall through
          case 234: break;
          case 40: 
            { return new Symbol(sym.GB, yychar, yyline, yytext());
            } 
            // fall through
          case 235: break;
          case 41: 
            { return new Symbol(sym.KB, yychar, yyline, yytext());
            } 
            // fall through
          case 236: break;
          case 42: 
            { return new Symbol(sym.CORCHETES, yychar, yyline, yytext());
            } 
            // fall through
          case 237: break;
          case 43: 
            { return new Symbol(sym.MENOR_O_IGUAL, yychar, yyline, yytext());
            } 
            // fall through
          case 238: break;
          case 44: 
            { return new Symbol(sym.IGUAL_A, yychar, yyline, yytext());
            } 
            // fall through
          case 239: break;
          case 45: 
            { return new Symbol(sym.MAYOR_O_IGUAL, yychar, yyline, yytext());
            } 
            // fall through
          case 240: break;
          case 46: 
            { return new Symbol(sym.DIFERENTE, yychar, yyline, yytext());
            } 
            // fall through
          case 241: break;
          case 47: 
            { return new Symbol(sym.AND_O, yychar, yyline, yytext());
            } 
            // fall through
          case 242: break;
          case 48: 
            { return new Symbol(sym.OR_O, yychar, yyline, yytext());
            } 
            // fall through
          case 243: break;
          case 49: 
            { return new Symbol(sym.PARENTESIS, yychar, yyline, yytext());
            } 
            // fall through
          case 244: break;
          case 50: 
            { return new Symbol(sym.LLAVES, yychar, yyline, yytext());
            } 
            // fall through
          case 245: break;
          case 51: 
            { return new Symbol(sym.DOBLE_NUMERAL, yychar, yyline, yytext());
            } 
            // fall through
          case 246: break;
          case 52: 
            { return new Symbol(sym.NOT, yychar, yyline, yytext());
            } 
            // fall through
          case 247: break;
          case 53: 
            { return new Symbol(sym.USE, yychar, yyline, yytext());
            } 
            // fall through
          case 248: break;
          case 54: 
            { return new Symbol(sym.END, yychar, yyline, yytext());
            } 
            // fall through
          case 249: break;
          case 55: 
            { return new Symbol(sym.SUM, yychar, yyline, yytext());
            } 
            // fall through
          case 250: break;
          case 56: 
            { return new Symbol(sym.SET, yychar, yyline, yytext());
            } 
            // fall through
          case 251: break;
          case 57: 
            { return new Symbol(sym.TOP, yychar, yyline, yytext());
            } 
            // fall through
          case 252: break;
          case 58: 
            { return new Symbol(sym.INT_P, yychar, yyline, yytext());
            } 
            // fall through
          case 253: break;
          case 59: 
            { return new Symbol(sym.OUT, yychar, yyline, yytext());
            } 
            // fall through
          case 254: break;
          case 60: 
            { return new Symbol(sym.OFF, yychar, yyline, yytext());
            } 
            // fall through
          case 255: break;
          case 61: 
            { return new Symbol(sym.AND, yychar, yyline, yytext());
            } 
            // fall through
          case 256: break;
          case 62: 
            { return new Symbol(sym.ALL, yychar, yyline, yytext());
            } 
            // fall through
          case 257: break;
          case 63: 
            { return new Symbol(sym.ASC, yychar, yyline, yytext());
            } 
            // fall through
          case 258: break;
          case 64: 
            { return new Symbol(sym.AVG, yychar, yyline, yytext());
            } 
            // fall through
          case 259: break;
          case 65: 
            { return new Symbol(sym.ADD, yychar, yyline, yytext());
            } 
            // fall through
          case 260: break;
          case 66: 
            { return new Symbol(sym.FOR, yychar, yyline, yytext());
            } 
            // fall through
          case 261: break;
          case 67: 
            { return new Symbol(sym.BIT_P, yychar, yyline, yytext());
            } 
            // fall through
          case 262: break;
          case 68: 
            { return new Symbol(sym.MIN, yychar, yyline, yytext());
            } 
            // fall through
          case 263: break;
          case 69: 
            { return new Symbol(sym.MAX, yychar, yyline, yytext());
            } 
            // fall through
          case 264: break;
          case 70: 
            { return new Symbol(sym.KEY, yychar, yyline, yytext());
            } 
            // fall through
          case 265: break;
          case 71: 
            { return new Symbol(sym.NULL, yychar, yyline, yytext());
            } 
            // fall through
          case 266: break;
          case 72: 
            { return new Symbol(sym.NAME, yychar, yyline, yytext());
            } 
            // fall through
          case 267: break;
          case 73: 
            { return new Symbol(sym.USER, yychar, yyline, yytext());
            } 
            // fall through
          case 268: break;
          case 74: 
            { return new Symbol(sym.LEFT, yychar, yyline, yytext());
            } 
            // fall through
          case 269: break;
          case 75: 
            { return new Symbol(sym.LIKE, yychar, yyline, yytext());
            } 
            // fall through
          case 270: break;
          case 76: 
            { return new Symbol(sym.EXEC, yychar, yyline, yytext());
            } 
            // fall through
          case 271: break;
          case 77: 
            { return new Symbol(sym.SELF, yychar, yyline, yytext());
            } 
            // fall through
          case 272: break;
          case 78: 
            { return new Symbol(sym.SIZE, yychar, yyline, yytext());
            } 
            // fall through
          case 273: break;
          case 79: 
            { return new Symbol(sym.SAVE, yychar, yyline, yytext());
            } 
            // fall through
          case 274: break;
          case 80: 
            { return new Symbol(sym.CHAR, yychar, yyline, yytext());
            } 
            // fall through
          case 275: break;
          case 81: 
            { return new Symbol(sym.TEXT, yychar, yyline, yytext());
            } 
            // fall through
          case 276: break;
          case 82: 
            { return new Symbol(sym.TIME, yychar, yyline, yytext());
            } 
            // fall through
          case 277: break;
          case 83: 
            { return new Symbol(sym.TRAN, yychar, yyline, yytext());
            } 
            // fall through
          case 278: break;
          case 84: 
            { return new Symbol(sym.INTO, yychar, yyline, yytext());
            } 
            // fall through
          case 279: break;
          case 85: 
            { return new Symbol(sym.REAL, yychar, yyline, yytext());
            } 
            // fall through
          case 280: break;
          case 86: 
            { return new Symbol(sym.VIEW, yychar, yyline, yytext());
            } 
            // fall through
          case 281: break;
          case 87: 
            { return new Symbol(sym.DESC, yychar, yyline, yytext());
            } 
            // fall through
          case 282: break;
          case 88: 
            { return new Symbol(sym.DROP, yychar, yyline, yytext());
            } 
            // fall through
          case 283: break;
          case 89: 
            { return new Symbol(sym.DATE, yychar, yyline, yytext());
            } 
            // fall through
          case 284: break;
          case 90: 
            { return new Symbol(sym.FULL, yychar, yyline, yytext());
            } 
            // fall through
          case 285: break;
          case 91: 
            { return new Symbol(sym.FILE, yychar, yyline, yytext());
            } 
            // fall through
          case 286: break;
          case 92: 
            { return new Symbol(sym.FROM, yychar, yyline, yytext());
            } 
            // fall through
          case 287: break;
          case 93: 
            { return new Symbol(sym.WITH, yychar, yyline, yytext());
            } 
            // fall through
          case 288: break;
          case 94: 
            { return new Symbol(sym.MARK, yychar, yyline, yytext());
            } 
            // fall through
          case 289: break;
          case 95: 
            { return new Symbol(sym.JOIN, yychar, yyline, yytext());
            } 
            // fall through
          case 290: break;
          case 96: 
            { return new Symbol(sym.NAMES, yychar, yyline, yytext());
            } 
            // fall through
          case 291: break;
          case 97: 
            { return new Symbol(sym.LOCAL, yychar, yyline, yytext());
            } 
            // fall through
          case 292: break;
          case 98: 
            { return new Symbol(sym.LOGIN, yychar, yyline, yytext());
            } 
            // fall through
          case 293: break;
          case 99: 
            { return new Symbol(sym.COUNT, yychar, yyline, yytext());
            } 
            // fall through
          case 294: break;
          case 100: 
            { return new Symbol(sym.CHECK, yychar, yyline, yytext());
            } 
            // fall through
          case 295: break;
          case 101: 
            { return new Symbol(sym.TABLE, yychar, yyline, yytext());
            } 
            // fall through
          case 296: break;
          case 102: 
            { return new Symbol(sym.INNER, yychar, yyline, yytext());
            } 
            // fall through
          case 297: break;
          case 103: 
            { return new Symbol(sym.INDEX, yychar, yyline, yytext());
            } 
            // fall through
          case 298: break;
          case 104: 
            { return new Symbol(sym.INPUT, yychar, yyline, yytext());
            } 
            // fall through
          case 299: break;
          case 105: 
            { return new Symbol(sym.IMAGE, yychar, yyline, yytext());
            } 
            // fall through
          case 300: break;
          case 106: 
            { return new Symbol(sym.RIGHT, yychar, yyline, yytext());
            } 
            // fall through
          case 301: break;
          case 107: 
            { return new Symbol(sym.OUTER, yychar, yyline, yytext());
            } 
            // fall through
          case 302: break;
          case 108: 
            { return new Symbol(sym.ORDER, yychar, yyline, yytext());
            } 
            // fall through
          case 303: break;
          case 109: 
            { return new Symbol(sym.OWNER, yychar, yyline, yytext());
            } 
            // fall through
          case 304: break;
          case 110: 
            { return new Symbol(sym.ALTER, yychar, yyline, yytext());
            } 
            // fall through
          case 305: break;
          case 111: 
            { return new Symbol(sym.FLOAT_P, yychar, yyline, yytext());
            } 
            // fall through
          case 306: break;
          case 112: 
            { return new Symbol(sym.FILES, yychar, yyline, yytext());
            } 
            // fall through
          case 307: break;
          case 113: 
            { return new Symbol(sym.BEGIN, yychar, yyline, yytext());
            } 
            // fall through
          case 308: break;
          case 114: 
            { return new Symbol(sym.WHERE, yychar, yyline, yytext());
            } 
            // fall through
          case 309: break;
          case 115: 
            { return new Symbol(sym.MONEY, yychar, yyline, yytext());
            } 
            // fall through
          case 310: break;
          case 116: 
            { return new Symbol(sym.GROUP, yychar, yyline, yytext());
            } 
            // fall through
          case 311: break;
          case 117: 
            { return new Symbol(sym.UNIQUE, yychar, yyline, yytext());
            } 
            // fall through
          case 312: break;
          case 118: 
            { return new Symbol(sym.USABLE, yychar, yyline, yytext());
            } 
            // fall through
          case 313: break;
          case 119: 
            { return new Symbol(sym.UPDATE, yychar, yyline, yytext());
            } 
            // fall through
          case 314: break;
          case 120: 
            { return new Symbol(sym.EXISTS, yychar, yyline, yytext());
            } 
            // fall through
          case 315: break;
          case 121: 
            { return new Symbol(sym.SELECT, yychar, yyline, yytext());
            } 
            // fall through
          case 316: break;
          case 122: 
            { return new Symbol(sym.SCROLL, yychar, yyline, yytext());
            } 
            // fall through
          case 317: break;
          case 123: 
            { return new Symbol(sym.SCHEMA, yychar, yyline, yytext());
            } 
            // fall through
          case 318: break;
          case 124: 
            { return new Symbol(sym.STATIC, yychar, yyline, yytext());
            } 
            // fall through
          case 319: break;
          case 125: 
            { return new Symbol(sym.CURSOR, yychar, yyline, yytext());
            } 
            // fall through
          case 320: break;
          case 126: 
            { return new Symbol(sym.CREATE, yychar, yyline, yytext());
            } 
            // fall through
          case 321: break;
          case 127: 
            { return new Symbol(sym.COLUMN, yychar, yyline, yytext());
            } 
            // fall through
          case 322: break;
          case 128: 
            { return new Symbol(sym.COMMIT, yychar, yyline, yytext());
            } 
            // fall through
          case 323: break;
          case 129: 
            { return new Symbol(sym.CALLER, yychar, yyline, yytext());
            } 
            // fall through
          case 324: break;
          case 130: 
            { return new Symbol(sym.CALLED, yychar, yyline, yytext());
            } 
            // fall through
          case 325: break;
          case 131: 
            { return new Symbol(sym.INLINE, yychar, yyline, yytext());
            } 
            // fall through
          case 326: break;
          case 132: 
            { return new Symbol(sym.INSERT, yychar, yyline, yytext());
            } 
            // fall through
          case 327: break;
          case 133: 
            { return new Symbol(sym.RETURN, yychar, yyline, yytext());
            } 
            // fall through
          case 328: break;
          case 134: 
            { return new Symbol(sym.OUTPUT, yychar, yyline, yytext());
            } 
            // fall through
          case 329: break;
          case 135: 
            { return new Symbol(sym.VALUES, yychar, yyline, yytext());
            } 
            // fall through
          case 330: break;
          case 136: 
            { return new Symbol(sym.DELETE, yychar, yyline, yytext());
            } 
            // fall through
          case 331: break;
          case 137: 
            { return new Symbol(sym.MODIFY, yychar, yyline, yytext());
            } 
            // fall through
          case 332: break;
          case 138: 
            { return new Symbol(sym.HAVING, yychar, yyline, yytext());
            } 
            // fall through
          case 333: break;
          case 139: 
            { return new Symbol(sym.GLOBAL, yychar, yyline, yytext());
            } 
            // fall through
          case 334: break;
          case 140: 
            { return new Symbol(sym.KEYSET, yychar, yyline, yytext());
            } 
            // fall through
          case 335: break;
          case 141: 
            { return new Symbol(sym.NUMERIC, yychar, yyline, yytext());
            } 
            // fall through
          case 336: break;
          case 142: 
            { return new Symbol(sym.EXECUTE, yychar, yyline, yytext());
            } 
            // fall through
          case 337: break;
          case 143: 
            { return new Symbol(sym.CURRENT, yychar, yyline, yytext());
            } 
            // fall through
          case 338: break;
          case 144: 
            { return new Symbol(sym.COLLATE, yychar, yyline, yytext());
            } 
            // fall through
          case 339: break;
          case 145: 
            { return new Symbol(sym.INCLUDE, yychar, yyline, yytext());
            } 
            // fall through
          case 340: break;
          case 146: 
            { return new Symbol(sym.RETURNS, yychar, yyline, yytext());
            } 
            // fall through
          case 341: break;
          case 147: 
            { return new Symbol(sym.REBUILD, yychar, yyline, yytext());
            } 
            // fall through
          case 342: break;
          case 148: 
            { return new Symbol(sym.VARCHAR, yychar, yyline, yytext());
            } 
            // fall through
          case 343: break;
          case 149: 
            { return new Symbol(sym.VARYING, yychar, yyline, yytext());
            } 
            // fall through
          case 344: break;
          case 150: 
            { return new Symbol(sym.DECLARE, yychar, yyline, yytext());
            } 
            // fall through
          case 345: break;
          case 151: 
            { return new Symbol(sym.DECIMAL, yychar, yyline, yytext());
            } 
            // fall through
          case 346: break;
          case 152: 
            { return new Symbol(sym.DEFAULT, yychar, yyline, yytext());
            } 
            // fall through
          case 347: break;
          case 153: 
            { return new Symbol(sym.DISABLE, yychar, yyline, yytext());
            } 
            // fall through
          case 348: break;
          case 154: 
            { return new Symbol(sym.DYNAMIC, yychar, yyline, yytext());
            } 
            // fall through
          case 349: break;
          case 155: 
            { return new Symbol(sym.FOREIGN, yychar, yyline, yytext());
            } 
            // fall through
          case 350: break;
          case 156: 
            { return new Symbol(sym.PERCENT, yychar, yyline, yytext());
            } 
            // fall through
          case 351: break;
          case 157: 
            { return new Symbol(sym.PRIMARY, yychar, yyline, yytext());
            } 
            // fall through
          case 352: break;
          case 158: 
            { return new Symbol(sym.BETWEEN, yychar, yyline, yytext());
            } 
            // fall through
          case 353: break;
          case 159: 
            { return new Symbol(sym.MAXSIZE, yychar, yyline, yytext());
            } 
            // fall through
          case 354: break;
          case 160: 
            { return new Symbol(sym.UNUSABLE, yychar, yyline, yytext());
            } 
            // fall through
          case 355: break;
          case 161: 
            { return new Symbol(sym.TRUNCATE, yychar, yyline, yytext());
            } 
            // fall through
          case 356: break;
          case 162: 
            { return new Symbol(sym.IDENTITY, yychar, yyline, yytext());
            } 
            // fall through
          case 357: break;
          case 163: 
            { return new Symbol(sym.READONLY, yychar, yyline, yytext());
            } 
            // fall through
          case 358: break;
          case 164: 
            { return new Symbol(sym.ROLLBACK, yychar, yyline, yytext());
            } 
            // fall through
          case 359: break;
          case 165: 
            { return new Symbol(sym.DISTINCT, yychar, yyline, yytext());
            } 
            // fall through
          case 360: break;
          case 166: 
            { return new Symbol(sym.DATETIME, yychar, yyline, yytext());
            } 
            // fall through
          case 361: break;
          case 167: 
            { return new Symbol(sym.DATABASE, yychar, yyline, yytext());
            } 
            // fall through
          case 362: break;
          case 168: 
            { return new Symbol(sym.FUNCTION, yychar, yyline, yytext());
            } 
            // fall through
          case 363: break;
          case 169: 
            { return new Symbol(sym.FILENAME, yychar, yyline, yytext());
            } 
            // fall through
          case 364: break;
          case 170: 
            { return new Symbol(sym.PASSWORD, yychar, yyline, yytext());
            } 
            // fall through
          case 365: break;
          case 171: 
            { return new Symbol(sym.CLUSTERED, yychar, yyline, yytext());
            } 
            // fall through
          case 366: break;
          case 172: 
            { return new Symbol(sym.TIMESTAMP, yychar, yyline, yytext());
            } 
            // fall through
          case 367: break;
          case 173: 
            { return new Symbol(sym.INMEDIATE, yychar, yyline, yytext());
            } 
            // fall through
          case 368: break;
          case 174: 
            { return new Symbol(sym.RECOMPILE, yychar, yyline, yytext());
            } 
            // fall through
          case 369: break;
          case 175: 
            { return new Symbol(sym.READ_ONLY, yychar, yyline, yytext());
            } 
            // fall through
          case 370: break;
          case 176: 
            { return new Symbol(sym.VARBINARY, yychar, yyline, yytext());
            } 
            // fall through
          case 371: break;
          case 177: 
            { return new Symbol(sym.DATETIME2, yychar, yyline, yytext());
            } 
            // fall through
          case 372: break;
          case 178: 
            { return new Symbol(sym.PROCEDURE, yychar, yyline, yytext());
            } 
            // fall through
          case 373: break;
          case 179: 
            { return new Symbol(sym.ENCRYPTION, yychar, yyline, yytext());
            } 
            // fall through
          case 374: break;
          case 180: 
            { return new Symbol(sym.CONSTRAINT, yychar, yyline, yytext());
            } 
            // fall through
          case 375: break;
          case 181: 
            { return new Symbol(sym.REFERENCES, yychar, yyline, yytext());
            } 
            // fall through
          case 376: break;
          case 182: 
            { return new Symbol(sym.OPTIMISTIC, yychar, yyline, yytext());
            } 
            // fall through
          case 377: break;
          case 183: 
            { return new Symbol(sym.FILEGROWTH, yychar, yyline, yytext());
            } 
            // fall through
          case 378: break;
          case 184: 
            { return new Symbol(sym.TRANSACTION, yychar, yyline, yytext());
            } 
            // fall through
          case 379: break;
          case 185: 
            { return new Symbol(sym.REPLICATION, yychar, yyline, yytext());
            } 
            // fall through
          case 380: break;
          case 186: 
            { return new Symbol(sym.NONCLUSTERED, yychar, yyline, yytext());
            } 
            // fall through
          case 381: break;
          case 187: 
            { return new Symbol(sym.SCROLL_LOCKS, yychar, yyline, yytext());
            } 
            // fall through
          case 382: break;
          case 188: 
            { return new Symbol(sym.TYPE_WARNING, yychar, yyline, yytext());
            } 
            // fall through
          case 383: break;
          case 189: 
            { return new Symbol(sym.FORWARD_ONLY, yychar, yyline, yytext());
            } 
            // fall through
          case 384: break;
          case 190: 
            { return new Symbol(sym.FAST_FORWARD, yychar, yyline, yytext());
            } 
            // fall through
          case 385: break;
          case 191: 
            { return new Symbol(sym.SCHEMABINDING, yychar, yyline, yytext());
            } 
            // fall through
          case 386: break;
          case 192: 
            { return new Symbol(sym.SMALLDATETIME, yychar, yyline, yytext());
            } 
            // fall through
          case 387: break;
          case 193: 
            { return new Symbol(sym.DEFAULT_SCHEMA, yychar, yyline, yytext());
            } 
            // fall through
          case 388: break;
          case 194: 
            { return new Symbol(sym.DATETIMEOFFSET, yychar, yyline, yytext());
            } 
            // fall through
          case 389: break;
          case 195: 
            { return new Symbol(sym.EXECUTE_AS_CLAUSE, yychar, yyline, yytext());
            } 
            // fall through
          case 390: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
