/* The following code was generated by JFlex 1.7.0 */

package Classes;
import static Classes.Token.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>C:/Users/eecon/OneDrive/Escritorio/URL/2019/Segundo ciclo/Compis/Proyecto_Compiladores/minisql/src/Classes/Lexer.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\3\1\6\1\72\1\72\1\3\22\0\1\3\1\56\1\0"+
    "\1\71\1\0\1\52\1\57\1\22\1\64\1\65\1\10\1\21\1\4"+
    "\1\5\1\16\1\7\1\11\1\12\10\2\1\0\1\61\1\53\1\54"+
    "\1\55\1\0\1\70\1\32\1\37\1\24\1\30\1\17\1\35\1\41"+
    "\1\36\1\26\1\50\1\43\1\15\1\44\1\13\1\33\1\31\1\51"+
    "\1\27\1\23\1\25\1\14\1\46\1\45\1\34\1\40\1\42\1\62"+
    "\1\0\1\63\1\0\1\47\1\0\4\1\1\20\25\1\1\66\1\60"+
    "\1\67\7\0\1\72\u1fa2\0\1\72\1\72\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udfe6\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7"+
    "\1\10\1\11\3\2\1\12\1\2\1\13\1\1\25\2"+
    "\1\14\1\15\1\16\1\17\1\20\2\1\1\21\1\22"+
    "\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32"+
    "\1\3\1\4\1\33\3\2\1\34\7\2\1\35\5\2"+
    "\1\0\1\36\27\2\1\34\1\2\2\34\31\2\1\34"+
    "\1\2\1\34\3\2\1\34\2\2\1\34\1\2\1\34"+
    "\25\2\1\34\17\2\1\37\1\40\1\41\1\42\1\43"+
    "\1\44\1\45\1\46\1\47\1\50\3\0\11\2\1\34"+
    "\11\2\1\0\1\34\12\2\1\34\10\2\1\34\32\2"+
    "\1\34\26\2\1\34\21\2\1\34\7\2\1\34\12\2"+
    "\1\34\5\2\1\34\7\2\1\34\10\2\1\32\1\0"+
    "\1\11\13\2\1\35\2\0\46\2\1\34\3\2\1\34"+
    "\2\2\1\34\22\2\1\34\10\2\1\34\10\2\1\51"+
    "\17\2\1\34\2\2\1\34\10\2\1\34\2\2\1\34"+
    "\10\2\1\0\34\2\1\34\10\2\1\34\42\2\1\52"+
    "\15\2\1\34\1\2\1\53\1\0\1\34\1\54\10\2"+
    "\1\55\15\2\1\56\10\2\1\57\20\2\1\34\1\0"+
    "\1\34\4\2\1\34\1\2\1\34\27\2\1\34\5\2"+
    "\1\34\3\2\1\60\1\2\1\34\47\2\1\34\50\2";

  private static int [] zzUnpackAction() {
    int [] result = new int[747];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\73\0\166\0\261\0\73\0\73\0\354\0\u0127"+
    "\0\73\0\261\0\u0162\0\u019d\0\u01d8\0\u0213\0\u024e\0\u0289"+
    "\0\u02c4\0\u02ff\0\u033a\0\u0375\0\u03b0\0\u03eb\0\u0426\0\u0461"+
    "\0\u049c\0\u04d7\0\u0512\0\u054d\0\u0588\0\u05c3\0\u05fe\0\u0639"+
    "\0\u0674\0\u06af\0\u06ea\0\u0725\0\u0760\0\u079b\0\73\0\u07d6"+
    "\0\u0811\0\u084c\0\u0887\0\u08c2\0\u08fd\0\73\0\u0938\0\73"+
    "\0\u0973\0\73\0\u09ae\0\73\0\73\0\u09e9\0\u0a24\0\u0289"+
    "\0\u0a5f\0\u0a9a\0\u0ad5\0\u0b10\0\u0b4b\0\u0b86\0\u0bc1\0\u0bfc"+
    "\0\u0c37\0\u0c72\0\u0cad\0\u0ce8\0\u0d23\0\u0d5e\0\u0d99\0\u0dd4"+
    "\0\u0e0f\0\u0e4a\0\u0e85\0\u02c4\0\73\0\u0ec0\0\u0efb\0\u0f36"+
    "\0\u0f71\0\u0fac\0\u0fe7\0\u1022\0\u105d\0\u1098\0\u10d3\0\u110e"+
    "\0\u1149\0\u1184\0\u11bf\0\u11fa\0\u1235\0\u1270\0\u12ab\0\u12e6"+
    "\0\u1321\0\u135c\0\u1397\0\u13d2\0\u140d\0\u1448\0\u1483\0\u14be"+
    "\0\u14f9\0\u1534\0\u156f\0\u15aa\0\u15e5\0\u1620\0\u165b\0\u1696"+
    "\0\u16d1\0\u170c\0\u1747\0\u1782\0\u17bd\0\u17f8\0\u1833\0\u186e"+
    "\0\u18a9\0\u18e4\0\u191f\0\u195a\0\u1995\0\u19d0\0\u1a0b\0\u1a46"+
    "\0\u1a81\0\u1abc\0\u1af7\0\166\0\u1b32\0\u1b6d\0\u1ba8\0\u1be3"+
    "\0\u1c1e\0\u1c59\0\u1c94\0\u1ccf\0\u1d0a\0\u1d45\0\u1d80\0\u1dbb"+
    "\0\u1df6\0\u1e31\0\u1e6c\0\u1ea7\0\u1ee2\0\u1f1d\0\u1f58\0\u1f93"+
    "\0\u1fce\0\u2009\0\u2044\0\u207f\0\u20ba\0\u20f5\0\u2130\0\u216b"+
    "\0\u21a6\0\u21e1\0\u221c\0\u2257\0\u2292\0\u22cd\0\u2308\0\u2343"+
    "\0\u237e\0\u23b9\0\u23f4\0\u242f\0\u246a\0\u24a5\0\u24e0\0\u251b"+
    "\0\u2556\0\u2591\0\73\0\73\0\73\0\73\0\73\0\73"+
    "\0\73\0\73\0\73\0\73\0\u25cc\0\u2607\0\u2642\0\u267d"+
    "\0\u26b8\0\u26f3\0\u272e\0\u2769\0\u27a4\0\u27df\0\u281a\0\u2855"+
    "\0\u2890\0\u28cb\0\u2906\0\u2941\0\u297c\0\u29b7\0\u29f2\0\u2a2d"+
    "\0\u2a68\0\u2aa3\0\u2ade\0\u2b19\0\u2b54\0\u2b8f\0\u2bca\0\u2c05"+
    "\0\u2c40\0\u2c7b\0\u2cb6\0\u2cf1\0\u2d2c\0\u2d67\0\u2da2\0\u2ddd"+
    "\0\u2e18\0\u2e53\0\u2e8e\0\u2ec9\0\u2f04\0\u2f3f\0\u2f7a\0\u2fb5"+
    "\0\u2ff0\0\u302b\0\u3066\0\u30a1\0\u30dc\0\u3117\0\u3152\0\u318d"+
    "\0\u31c8\0\u3203\0\u323e\0\u3279\0\u32b4\0\u32ef\0\u332a\0\u3365"+
    "\0\u33a0\0\u33db\0\u3416\0\u3451\0\u348c\0\u34c7\0\u3502\0\u353d"+
    "\0\u3578\0\u35b3\0\u35ee\0\u3629\0\u3664\0\u369f\0\u36da\0\u3715"+
    "\0\u3750\0\u378b\0\u37c6\0\u3801\0\u383c\0\u3877\0\u38b2\0\u38ed"+
    "\0\u3928\0\u3963\0\u399e\0\u39d9\0\u3a14\0\u3a4f\0\u140d\0\u3a8a"+
    "\0\u3ac5\0\u3b00\0\u3b3b\0\u3b76\0\u3bb1\0\u3bec\0\u3c27\0\u3c62"+
    "\0\u3c9d\0\u3cd8\0\u3d13\0\u3d4e\0\u3d89\0\u3dc4\0\u3dff\0\u3e3a"+
    "\0\u3e75\0\u3eb0\0\u3eeb\0\u3f26\0\u3f61\0\u3f9c\0\u3fd7\0\u4012"+
    "\0\u404d\0\u4088\0\u40c3\0\u40fe\0\u4139\0\u4174\0\u41af\0\u41ea"+
    "\0\u4225\0\u4260\0\u429b\0\u42d6\0\u4311\0\u434c\0\u4387\0\u43c2"+
    "\0\u2890\0\u43fd\0\u4438\0\u4473\0\u44ae\0\u44e9\0\u4524\0\u455f"+
    "\0\u459a\0\u45d5\0\u4610\0\u464b\0\u4686\0\u46c1\0\u46fc\0\u4737"+
    "\0\u4772\0\u47ad\0\u47e8\0\u4823\0\u485e\0\u4899\0\u4899\0\u48d4"+
    "\0\u490f\0\u494a\0\u4985\0\u49c0\0\u49fb\0\u4a36\0\u4a71\0\u4aac"+
    "\0\u4ae7\0\u4b22\0\u4b5d\0\u4b98\0\u4b98\0\u4bd3\0\u4c0e\0\u4c49"+
    "\0\u4c84\0\u4cbf\0\u4cfa\0\u4d35\0\u4d70\0\u4dab\0\u4de6\0\u4e21"+
    "\0\u4e5c\0\u4e97\0\u4ed2\0\u4f0d\0\u4f48\0\u4f83\0\u4fbe\0\u4ff9"+
    "\0\u5034\0\u506f\0\u50aa\0\u50e5\0\u5120\0\u515b\0\u5196\0\u51d1"+
    "\0\u520c\0\u5247\0\u5282\0\u52bd\0\u52f8\0\u5333\0\u536e\0\u53a9"+
    "\0\u53e4\0\u4686\0\u541f\0\u545a\0\u5495\0\u54d0\0\u550b\0\u5546"+
    "\0\u5581\0\u55bc\0\u55f7\0\u5632\0\u566d\0\u56a8\0\u56e3\0\u571e"+
    "\0\u5759\0\u5794\0\u57cf\0\u580a\0\u5845\0\u5880\0\u58bb\0\u58f6"+
    "\0\u5931\0\u596c\0\u59a7\0\u59e2\0\u5a1d\0\u5a58\0\u5a93\0\u5ace"+
    "\0\u5b09\0\u5b44\0\u5b7f\0\u5bba\0\u5bf5\0\u5c30\0\u5c6b\0\u5ca6"+
    "\0\u5ce1\0\u5d1c\0\u5d57\0\u5d92\0\u5dcd\0\u5e08\0\u5e43\0\u5e7e"+
    "\0\166\0\u5eb9\0\u5ef4\0\u5f2f\0\u5f6a\0\u5fa5\0\u5fe0\0\u601b"+
    "\0\u6056\0\u6091\0\u60cc\0\u6107\0\u6142\0\u617d\0\u61b8\0\u61f3"+
    "\0\u622e\0\u6269\0\u62a4\0\u62df\0\u631a\0\u6355\0\u6390\0\u63cb"+
    "\0\u6406\0\u6441\0\u647c\0\u64b7\0\u2591\0\u64f2\0\u652d\0\u6568"+
    "\0\u65a3\0\u65de\0\u6619\0\u6654\0\u668f\0\u66ca\0\u6705\0\u6740"+
    "\0\u677b\0\u67b6\0\u67f1\0\u682c\0\u6867\0\u68a2\0\u68dd\0\u6918"+
    "\0\u6953\0\u698e\0\u69c9\0\u6a04\0\u6a3f\0\u6a7a\0\u6ab5\0\u6af0"+
    "\0\u6b2b\0\u6b66\0\u6ba1\0\u6bdc\0\u6c17\0\u6c52\0\u6c8d\0\u6cc8"+
    "\0\u6d03\0\u6d3e\0\u6d79\0\u6db4\0\u6def\0\u6e2a\0\u6e65\0\u6ea0"+
    "\0\u6edb\0\u6f16\0\u6f51\0\u6f8c\0\u6fc7\0\u7002\0\u703d\0\u7078"+
    "\0\u70b3\0\u70ee\0\u7129\0\u7164\0\u719f\0\u71da\0\u7215\0\u7250"+
    "\0\u728b\0\u72c6\0\u7301\0\u733c\0\u7377\0\u73b2\0\u73ed\0\u7428"+
    "\0\u7463\0\u749e\0\u3f26\0\u74d9\0\u7514\0\u754f\0\u758a\0\u75c5"+
    "\0\u7600\0\u763b\0\u7676\0\u76b1\0\u76ec\0\u7727\0\u7762\0\u779d"+
    "\0\u77d8\0\166\0\u7813\0\u44ae\0\u784e\0\u7889\0\u78c4\0\u78ff"+
    "\0\u793a\0\u7975\0\u79b0\0\u79eb\0\u7a26\0\u7a61\0\u7a9c\0\u49c0"+
    "\0\u7ad7\0\u5a93\0\u7b12\0\u40c3\0\166\0\u7b4d\0\u7b88\0\u7bc3"+
    "\0\u7bfe\0\u7c39\0\u7c74\0\u7caf\0\u7cea\0\166\0\u7d25\0\u7d60"+
    "\0\u7d9b\0\u7dd6\0\u7e11\0\u7e4c\0\u7e87\0\u7ec2\0\u7efd\0\u7f38"+
    "\0\u7f73\0\u7fae\0\u7fe9\0\166\0\u8024\0\u805f\0\u809a\0\u80d5"+
    "\0\u8110\0\u814b\0\u8186\0\u81c1\0\166\0\u81fc\0\u8237\0\u8272"+
    "\0\u82ad\0\u82e8\0\u8323\0\u835e\0\u8399\0\u83d4\0\u840f\0\u844a"+
    "\0\u8485\0\u84c0\0\u84fb\0\u8536\0\u8571\0\u41af\0\u85ac\0\u7c39"+
    "\0\u85e7\0\u8622\0\u865d\0\u2da2\0\u8698\0\u86d3\0\u1b6d\0\u870e"+
    "\0\u8749\0\u8784\0\u87bf\0\u87fa\0\u8835\0\u8870\0\u88ab\0\u1be3"+
    "\0\u88e6\0\u8921\0\u895c\0\u8997\0\u89d2\0\u8a0d\0\u8a48\0\u8a83"+
    "\0\u8abe\0\u8af9\0\u8b34\0\u8b6f\0\u8baa\0\u8be5\0\73\0\u8c20"+
    "\0\u8c5b\0\u8c96\0\u8cd1\0\u8d0c\0\u8d47\0\u8d82\0\u8dbd\0\u8df8"+
    "\0\166\0\u8e33\0\u8e6e\0\u8ea9\0\u8ee4\0\u8f1f\0\u8f5a\0\u8f95"+
    "\0\u8fd0\0\u900b\0\u9046\0\u9081\0\u90bc\0\u90f7\0\u9132\0\u916d"+
    "\0\u91a8\0\u91e3\0\u921e\0\u9259\0\u9294\0\u92cf\0\u930a\0\u9345"+
    "\0\u9380\0\u93bb\0\u93f6\0\u9431\0\u946c\0\u94a7\0\u94e2\0\u951d"+
    "\0\u9558\0\u9593\0\u95ce\0\u9609\0\u9644\0\u967f\0\u96ba\0\u96f5"+
    "\0\u9730\0\u976b\0\u97a6\0\u97e1\0\u981c\0\u9857\0\u9892\0\u98cd"+
    "\0\u9908\0\u9943\0\u997e\0\u99b9\0\u99f4\0\u9a2f\0\u9a6a\0\u9aa5"+
    "\0\u9ae0\0\u8d47\0\u9b1b\0\u9b56\0\u9b91\0\u9bcc\0\u9c07\0\u9c42"+
    "\0\u9c7d\0\u9cb8\0\u9cf3\0\u9d2e\0\u9d69\0\u9da4\0\u9ddf\0\u9e1a"+
    "\0\u9e55\0\u9e90\0\u9ecb\0\u9f06\0\u9f41\0\u9f7c\0\u9fb7\0\u9ff2"+
    "\0\ua02d\0\ua068\0\ua0a3";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[747];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\1\5\1\10"+
    "\1\11\2\12\1\13\1\14\1\15\1\16\1\17\1\3"+
    "\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27"+
    "\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37"+
    "\1\40\1\41\1\42\1\43\1\44\1\45\1\3\1\46"+
    "\1\3\1\47\1\50\1\51\1\52\1\53\1\54\1\55"+
    "\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65"+
    "\1\66\75\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\27\3\23\0\1\4\6\0\2\4\3\0\1\67\56\0"+
    "\1\70\2\0\1\71\3\0\2\70\70\0\1\72\63\0"+
    "\2\3\6\0\3\3\1\73\1\3\1\0\2\3\2\0"+
    "\1\3\1\74\5\3\1\75\1\76\16\3\22\0\2\3"+
    "\6\0\2\3\1\77\2\3\1\0\2\3\2\0\1\100"+
    "\5\3\1\101\20\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\102\1\3\2\0\3\3\1\103\3\3\1\104\1\105"+
    "\16\3\23\0\1\106\6\0\2\106\61\0\2\3\6\0"+
    "\2\3\1\107\1\3\1\110\1\0\2\3\2\0\1\111"+
    "\3\3\1\112\4\3\1\113\15\3\23\0\1\70\6\0"+
    "\2\70\60\0\6\114\1\0\13\114\1\115\50\114\1\0"+
    "\2\3\6\0\3\3\1\116\1\3\1\0\1\117\1\3"+
    "\2\0\1\3\1\120\1\121\1\122\2\3\1\123\1\124"+
    "\1\125\2\3\1\126\1\3\1\127\3\3\1\130\4\3"+
    "\1\131\22\0\2\3\6\0\3\3\1\132\1\133\1\0"+
    "\2\3\2\0\4\3\1\134\2\3\1\135\1\136\2\3"+
    "\1\137\13\3\22\0\2\3\6\0\5\3\1\0\1\140"+
    "\1\3\2\0\1\141\2\3\1\142\1\143\2\3\1\144"+
    "\1\145\2\3\1\146\13\3\22\0\2\3\6\0\2\3"+
    "\1\147\2\3\1\0\2\3\2\0\1\150\4\3\1\151"+
    "\4\3\1\152\6\3\1\153\5\3\22\0\2\3\6\0"+
    "\3\3\1\154\1\3\1\0\1\155\1\3\2\0\3\3"+
    "\1\156\3\3\1\157\1\160\16\3\22\0\2\3\6\0"+
    "\3\3\1\161\1\3\1\0\1\162\1\3\2\0\3\3"+
    "\1\163\1\164\2\3\1\165\1\166\3\3\1\167\12\3"+
    "\22\0\2\3\6\0\3\3\1\170\1\171\1\0\1\172"+
    "\1\3\2\0\3\3\1\173\1\174\2\3\1\175\1\176"+
    "\16\3\22\0\2\3\6\0\2\3\1\177\1\200\1\201"+
    "\1\0\2\3\2\0\1\202\1\203\1\204\1\3\1\205"+
    "\1\206\15\3\1\207\3\3\22\0\2\3\6\0\2\3"+
    "\1\210\1\211\1\3\1\0\2\3\2\0\1\3\1\212"+
    "\2\3\1\213\1\3\1\214\3\3\1\215\10\3\1\216"+
    "\3\3\22\0\2\3\6\0\5\3\1\0\1\217\1\3"+
    "\2\0\27\3\22\0\2\3\6\0\3\3\1\220\1\221"+
    "\1\0\1\222\1\3\2\0\3\3\1\223\1\224\2\3"+
    "\1\225\1\226\16\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\7\3\1\227\1\230\16\3\22\0\2\3"+
    "\6\0\3\3\1\231\1\3\1\0\1\232\1\3\2\0"+
    "\3\3\1\233\1\234\2\3\1\235\1\236\4\3\1\204"+
    "\11\3\22\0\2\3\6\0\5\3\1\0\1\237\1\3"+
    "\2\0\27\3\22\0\2\3\6\0\4\3\1\240\1\0"+
    "\1\241\1\3\2\0\4\3\1\242\3\3\1\243\16\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\10\3"+
    "\1\244\16\3\22\0\2\3\6\0\5\3\1\0\1\245"+
    "\1\3\2\0\3\3\1\246\23\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\247\1\3\2\0\3\3\1\250\3\3"+
    "\1\251\1\252\16\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\3\3\1\253\1\254\2\3\1\255\1\256"+
    "\2\3\1\257\13\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\3\3\1\260\3\3\1\261\17\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\10\3\1\262"+
    "\16\3\75\0\1\263\72\0\1\264\72\0\1\265\72\0"+
    "\1\266\75\0\1\267\73\0\1\270\75\0\1\271\74\0"+
    "\1\272\74\0\1\273\74\0\1\274\3\0\1\67\6\0"+
    "\2\67\4\0\2\275\52\0\6\71\1\0\64\71\7\72"+
    "\1\276\1\277\62\72\1\0\2\3\6\0\4\3\1\300"+
    "\1\0\2\3\2\0\21\3\1\301\5\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\13\3\1\237\13\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\2\3"+
    "\1\302\16\3\1\303\5\3\22\0\2\3\6\0\2\3"+
    "\1\304\2\3\1\0\2\3\2\0\1\3\1\305\1\204"+
    "\24\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\306\2\3\1\307\11\3\1\310\6\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\311\1\3\2\0\3\3"+
    "\1\312\3\3\1\313\17\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\5\3\1\314\1\315\20\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\7\3\1\316"+
    "\2\3\1\241\10\3\1\317\3\3\22\0\2\3\6\0"+
    "\2\3\1\320\2\3\1\0\2\3\2\0\20\3\1\205"+
    "\6\3\22\0\2\3\6\0\2\3\1\321\2\3\1\0"+
    "\2\3\2\0\1\241\26\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\1\3\1\322\5\3\1\206\12\3"+
    "\1\315\4\3\23\0\1\106\6\0\2\106\4\0\2\323"+
    "\53\0\2\3\6\0\5\3\1\0\2\3\2\0\5\3"+
    "\1\324\21\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\1\205\26\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\1\3\1\325\25\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\4\3\1\326\22\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\327\1\3\2\0\1\3"+
    "\1\330\1\331\1\332\23\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\14\3\1\333\4\3\1\204\5\3"+
    "\22\0\2\3\6\0\4\3\1\334\1\0\2\3\2\0"+
    "\1\335\1\336\1\337\16\3\1\340\5\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\4\3\1\341\6\3"+
    "\1\342\13\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\7\3\1\343\17\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\17\3\1\205\7\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\7\3\1\344\17\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\23\3"+
    "\1\205\3\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\21\3\1\205\5\3\22\0\2\3\6\0\3\3"+
    "\1\345\1\3\1\0\2\3\2\0\27\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\346\26\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\7\3\1\347"+
    "\17\3\22\0\2\3\6\0\4\3\1\350\1\0\2\3"+
    "\2\0\27\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\4\3\1\351\22\3\22\0\2\3\6\0\3\3"+
    "\1\352\1\3\1\0\2\3\2\0\10\3\1\110\16\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\353\1\3\2\0"+
    "\10\3\1\354\16\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\1\355\1\3\1\356\24\3\22\0\2\3"+
    "\6\0\2\3\1\357\1\360\1\361\1\0\2\3\2\0"+
    "\4\3\1\362\2\3\1\363\11\3\1\364\5\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\365\1\3\2\0\7\3"+
    "\1\366\17\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\11\3\1\367\7\3\1\370\5\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\371\1\3\2\0\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\21\3\1\372"+
    "\5\3\22\0\2\3\6\0\3\3\1\373\1\3\1\0"+
    "\2\3\2\0\3\3\1\374\3\3\1\375\5\3\1\376"+
    "\11\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\14\3\1\377\12\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\6\3\1\204\20\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\u0100\1\3\2\0\27\3\22\0\2\3"+
    "\6\0\2\3\1\315\2\3\1\0\2\3\2\0\1\u0101"+
    "\1\u0102\1\u0103\1\u0104\1\3\1\u0105\1\u0106\20\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\10\3\1\u0107"+
    "\16\3\22\0\2\3\6\0\5\3\1\0\1\u0108\1\3"+
    "\2\0\27\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\1\u0109\26\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\21\3\1\u010a\5\3\22\0\2\3\6\0"+
    "\4\3\1\205\1\0\2\3\2\0\27\3\22\0\2\3"+
    "\6\0\4\3\1\u010b\1\0\2\3\2\0\1\u010c\1\u010d"+
    "\1\u010e\3\3\1\u010f\1\u0110\2\3\1\u0111\10\3\1\u0112"+
    "\3\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\16\3\1\u0113\10\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\3\3\1\u0114\23\3\22\0\2\3\6\0"+
    "\4\3\1\u0115\1\0\2\3\2\0\22\3\1\u0116\4\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\21\3"+
    "\1\u0117\5\3\22\0\2\3\6\0\2\3\1\245\1\3"+
    "\1\u0118\1\0\2\3\2\0\1\u0119\1\u011a\5\3\1\u011b"+
    "\2\3\1\u011c\14\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\1\u011d\6\3\1\u011e\17\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\10\3\1\u011f\16\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\2\3"+
    "\1\u0120\12\3\1\204\11\3\22\0\2\3\6\0\3\3"+
    "\1\u0121\1\3\1\0\2\3\2\0\21\3\1\u0122\5\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\1\3"+
    "\1\217\25\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\14\3\1\u0123\12\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\7\3\1\u0100\17\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\4\3\1\u0124\22\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\23\3"+
    "\1\u0125\3\3\22\0\2\3\6\0\5\3\1\0\1\u0126"+
    "\1\3\2\0\3\3\1\u0127\4\3\1\u0128\16\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\1\u0129\26\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\1\u012a"+
    "\26\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\5\3\1\204\7\3\1\204\11\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\2\3\1\u012b\24\3\22\0"+
    "\2\3\6\0\4\3\1\u012c\1\0\2\3\2\0\2\3"+
    "\1\u012d\24\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\1\u012e\1\204\25\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\2\3\1\u012f\24\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\204\1\3\2\0\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\5\3\1\204"+
    "\21\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\16\3\1\204\10\3\22\0\2\3\6\0\4\3\1\245"+
    "\1\0\2\3\2\0\27\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\2\3\1\u0130\24\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\2\3\1\u0131\24\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\5\3"+
    "\1\315\21\3\22\0\2\3\6\0\5\3\1\0\1\u0132"+
    "\1\3\2\0\2\3\1\u0133\24\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\12\3\1\u0134\14\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\u0135\1\3\2\0\27\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\1\3"+
    "\1\204\25\3\22\0\2\3\6\0\2\3\1\u0136\1\3"+
    "\1\u0137\1\0\2\3\2\0\27\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\10\3\1\u0138\16\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\2\3\1\u0139"+
    "\24\3\22\0\2\3\6\0\4\3\1\u013a\1\0\2\3"+
    "\2\0\4\3\1\u013b\22\3\22\0\2\3\6\0\5\3"+
    "\1\0\1\u013c\1\3\2\0\10\3\1\u013d\16\3\22\0"+
    "\2\3\6\0\4\3\1\110\1\0\2\3\2\0\27\3"+
    "\22\0\2\3\6\0\3\3\1\u013e\1\3\1\0\2\3"+
    "\2\0\4\3\1\u013f\22\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\23\3\1\u0140\3\3\22\0\2\3"+
    "\6\0\3\3\1\u0141\1\u0142\1\0\2\3\2\0\27\3"+
    "\22\0\2\3\6\0\4\3\1\u0143\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\2\3\1\u0144\13\3\1\262\10\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\2\3\1\u0145\24\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\u0146\1\3\2\0\10\3"+
    "\1\u0147\16\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\1\3\1\u0148\25\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\2\3\1\u0149\24\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\7\3\1\u0141\17\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\10\3"+
    "\1\u014a\16\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\2\3\1\204\24\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\7\3\1\360\1\u014b\16\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\2\3\1\u014c"+
    "\24\3\22\0\2\3\6\0\2\3\1\205\2\3\1\0"+
    "\2\3\2\0\27\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\15\3\1\204\11\3\22\0\2\3\6\0"+
    "\4\3\1\u0137\1\0\2\3\2\0\27\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\4\3\1\313\22\3"+
    "\22\0\2\3\6\0\2\3\1\u014d\2\3\1\0\2\3"+
    "\2\0\27\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\2\3\1\u0139\6\3\1\204\15\3\22\0\2\3"+
    "\6\0\2\3\1\236\2\3\1\0\2\3\2\0\5\3"+
    "\1\u014e\21\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\2\3\1\u014f\24\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\3\3\1\u0150\23\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\3\3\1\u0151\23\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\4\3"+
    "\1\u0143\22\3\22\0\2\3\6\0\5\3\1\0\1\u0152"+
    "\1\3\2\0\3\3\1\154\23\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\u0153\1\3\2\0\27\3\22\0\2\3"+
    "\6\0\4\3\1\u0154\1\0\2\3\2\0\4\3\1\u0155"+
    "\22\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\u0100\23\3\23\0\1\u0156\2\0\1\u0157\3\0"+
    "\2\u0156\6\0\1\u0157\51\0\10\276\1\277\71\276\1\5"+
    "\1\277\62\276\1\0\2\3\6\0\4\3\1\u0158\1\0"+
    "\2\3\2\0\27\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u0159\1\3\2\0\27\3\22\0\2\3\6\0\3\3"+
    "\1\u015a\1\3\1\0\2\3\2\0\3\3\1\u015b\23\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\u015c\1\3\2\0"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\1\204\1\3"+
    "\2\0\1\3\1\u015d\25\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\13\3\1\u015e\13\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\10\3\1\u0100\15\3"+
    "\1\u015f\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\173\23\3\22\0\2\3\6\0\2\3\1\u0160"+
    "\2\3\1\0\2\3\2\0\27\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\4\3\1\204\22\3\22\0"+
    "\2\3\6\0\2\3\1\207\2\3\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\16\3\1\205\10\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\7\3\1\u0161\17\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\u0141\1\3\2\0\27\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\5\3\1\u0140\21\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\u0137\1\3\2\0"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\1\u0162\1\3"+
    "\2\0\27\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\16\3\1\u0163\10\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\7\3\1\u0137\17\3\23\0\1\u0164"+
    "\2\0\1\u0165\3\0\2\u0164\6\0\1\u0165\52\0\2\3"+
    "\2\0\1\u0166\3\0\5\3\1\0\2\3\2\0\27\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\7\3"+
    "\1\u0167\17\3\22\0\2\3\6\0\4\3\1\u0168\1\0"+
    "\2\3\2\0\27\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\1\3\1\u014d\25\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\u0169\1\3\2\0\27\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\u016a\1\3\2\0\4\3\1\u016b"+
    "\22\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\u016c\1\3\1\204\24\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\1\u016d\26\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\u016e\1\3\2\0\27\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\u016f\26\3\22\0"+
    "\2\3\6\0\3\3\1\u0170\1\3\1\0\2\3\2\0"+
    "\2\3\1\u0133\5\3\1\u013e\16\3\22\0\2\3\6\0"+
    "\3\3\1\u0171\1\3\1\0\2\3\2\0\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\7\3\1\u0172"+
    "\17\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\10\3\1\246\16\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u0173\1\3\2\0\27\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\2\3\1\u0174\24\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\3\1\205\25\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\2\3"+
    "\1\u0175\24\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\2\3\1\u0176\24\3\22\0\2\3\6\0\4\3"+
    "\1\u0177\1\0\2\3\2\0\27\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\u0178\1\3\2\0\1\u0179\1\u017a\20\3"+
    "\1\u017b\4\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\1\u017c\3\3\1\u017d\22\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\1\u017e\26\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\7\3\1\u017f\17\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\1\u015c"+
    "\26\3\22\0\2\3\6\0\5\3\1\0\1\204\1\3"+
    "\2\0\1\3\1\u0180\1\204\24\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\7\3\1\u0181\17\3\22\0"+
    "\2\3\6\0\2\3\1\u0182\2\3\1\0\2\3\2\0"+
    "\1\u0183\1\3\1\u0184\20\3\1\u0185\3\3\22\0\2\3"+
    "\6\0\2\3\1\241\2\3\1\0\2\3\2\0\27\3"+
    "\22\0\2\3\6\0\3\3\1\u0186\1\u0187\1\0\2\3"+
    "\2\0\27\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\4\3\1\u0188\22\3\22\0\2\3\6\0\4\3"+
    "\1\u0189\1\0\2\3\2\0\27\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\6\3\1\u018a\12\3\1\u018b"+
    "\5\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\3\1\u018c\25\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\4\3\1\u018d\22\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\2\3\1\u018e\24\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\6\3\1\u018f"+
    "\20\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\26\3\1\u0190\22\0\2\3\6\0\5\3\1\0\1\u0191"+
    "\1\3\2\0\27\3\22\0\2\3\6\0\2\3\1\u0192"+
    "\2\3\1\0\1\204\1\3\2\0\27\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\16\3\1\u0193\2\3"+
    "\1\204\5\3\22\0\2\3\6\0\2\3\1\u0194\2\3"+
    "\1\0\2\3\2\0\3\3\1\u0195\23\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\24\3\1\u0196\2\3"+
    "\22\0\2\3\6\0\4\3\1\u0197\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\6\0\2\3\1\204\2\3\1\0"+
    "\2\3\2\0\27\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u0198\1\3\2\0\27\3\22\0\2\3\6\0\4\3"+
    "\1\u0199\1\0\2\3\2\0\27\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\u019a\1\3\2\0\10\3\1\204\16\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\2\3"+
    "\1\u019b\24\3\22\0\2\3\6\0\5\3\1\0\1\u019c"+
    "\1\3\2\0\3\3\1\u019d\23\3\22\0\2\3\6\0"+
    "\3\3\1\241\1\3\1\0\2\3\2\0\27\3\22\0"+
    "\2\3\6\0\4\3\1\u019e\1\0\2\3\2\0\27\3"+
    "\22\0\2\3\6\0\2\3\1\u019f\2\3\1\0\2\3"+
    "\2\0\27\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\1\3\1\u01a0\25\3\22\0\2\3\6\0\5\3"+
    "\1\0\1\u01a1\1\3\2\0\27\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\7\3\1\u01a2\17\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\2\3\1\u01a3"+
    "\24\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\10\3\1\u01a4\16\3\22\0\2\3\6\0\3\3\1\u01a5"+
    "\1\3\1\0\2\3\2\0\27\3\22\0\2\3\6\0"+
    "\4\3\1\u01a6\1\0\2\3\2\0\27\3\22\0\2\3"+
    "\6\0\4\3\1\204\1\0\2\3\2\0\5\3\1\u01a7"+
    "\21\3\22\0\2\3\6\0\5\3\1\0\1\u01a8\1\3"+
    "\2\0\27\3\22\0\2\3\6\0\5\3\1\0\1\u01a9"+
    "\1\3\2\0\10\3\1\u01aa\16\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\13\3\1\241\13\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\1\u01ab\26\3"+
    "\22\0\2\3\6\0\4\3\1\u01ac\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\204\1\u01ad\14\3\1\u01ae\10\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\u01af\1\3\2\0\27\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\3\1\u01b0\25\3"+
    "\22\0\2\3\6\0\4\3\1\u01b1\1\0\2\3\2\0"+
    "\3\3\1\u01b2\23\3\22\0\2\3\6\0\4\3\1\u01b3"+
    "\1\0\2\3\2\0\27\3\22\0\2\3\6\0\5\3"+
    "\1\0\1\u01b4\1\3\2\0\7\3\1\u01b5\17\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\1\3\1\u01b6"+
    "\1\u01b7\15\3\1\204\6\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\16\3\1\u01b8\10\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\6\3\1\u01b9\20\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\204\1\3\2\0"+
    "\7\3\1\u01ba\17\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\14\3\1\154\12\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\7\3\1\262\17\3\22\0"+
    "\2\3\6\0\4\3\1\u01bb\1\0\2\3\2\0\27\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\1\3"+
    "\1\u01bc\25\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\10\3\1\241\16\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\1\u01bd\1\u01be\4\3\1\u01b1\20\3"+
    "\22\0\2\3\6\0\2\3\1\241\2\3\1\0\2\3"+
    "\2\0\10\3\1\u0141\10\3\1\u01bf\1\3\1\u01c0\3\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\1\3"+
    "\1\u01c1\25\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\1\3\1\322\25\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\3\3\1\u01c2\23\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\13\3\1\u01c3\13\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\10\3"+
    "\1\u01c4\16\3\22\0\2\3\6\0\5\3\1\0\1\u01c5"+
    "\1\3\2\0\27\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u01c6\1\3\2\0\27\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\3\3\1\u01c7\23\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\u0141\1\3\2\0\6\3\1\u0106"+
    "\20\3\22\0\2\3\6\0\5\3\1\0\1\u01c8\1\3"+
    "\2\0\27\3\22\0\2\3\6\0\2\3\1\u01c9\2\3"+
    "\1\0\2\3\2\0\27\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\3\3\1\u01ca\23\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\u01cb\26\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\4\3\1\u01cc"+
    "\22\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\3\1\u01c2\25\3\22\0\2\3\6\0\4\3\1\204"+
    "\1\0\2\3\2\0\27\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\7\3\1\241\17\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\3\1\u0149\25\3"+
    "\22\0\2\3\6\0\4\3\1\u01cd\1\0\1\204\1\3"+
    "\2\0\27\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\1\241\26\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u01ce\1\3\2\0\27\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\21\3\1\204\5\3\22\0\2\3"+
    "\6\0\2\3\1\206\2\3\1\0\2\3\2\0\27\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\u01cf\1\3\2\0"+
    "\2\3\1\u01d0\24\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\3\3\1\312\23\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\5\3\1\u01d1\21\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\20\3\1\204"+
    "\6\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\22\3\1\u01d2\4\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\24\3\1\u01d3\2\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\7\3\1\u0143\17\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\22\3\1\110"+
    "\4\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\20\3\1\u014b\6\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\13\3\1\204\13\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\14\3\1\322\12\3\22\0"+
    "\2\3\6\0\3\3\1\u0117\1\3\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\10\3\1\204\16\3\22\0\2\3\6\0\3\3\1\u01d4"+
    "\1\3\1\0\2\3\2\0\27\3\22\0\2\3\6\0"+
    "\3\3\1\154\1\3\1\0\2\3\2\0\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\13\3\1\u01d5"+
    "\13\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\2\3\1\u01d6\24\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\2\3\1\u01d7\24\3\22\0\2\3\6\0"+
    "\2\3\1\u01d8\2\3\1\0\2\3\2\0\4\3\1\205"+
    "\22\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\22\3\1\204\4\3\22\0\2\3\6\0\3\3\1\u01d9"+
    "\1\3\1\0\2\3\2\0\27\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\1\3\1\74\13\3\1\u0140"+
    "\11\3\23\0\1\u0156\6\0\2\u0156\61\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\u01da\23\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\4\3\1\u01bb"+
    "\22\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\322\22\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\10\3\1\u01db\16\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\1\204\26\3\22\0\2\3"+
    "\6\0\4\3\1\u01dc\1\0\2\3\2\0\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\u01dd\1\3\2\0\27\3"+
    "\22\0\2\3\6\0\3\3\1\205\1\3\1\0\2\3"+
    "\2\0\27\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\10\3\1\u01de\16\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\2\3\1\u01df\24\3\22\0\2\3"+
    "\6\0\2\3\1\u014c\2\3\1\0\2\3\2\0\27\3"+
    "\22\0\2\3\6\0\3\3\1\u01e0\1\3\1\0\2\3"+
    "\2\0\27\3\23\0\1\u0164\6\0\2\u0164\77\0\1\u01e1"+
    "\54\0\2\3\6\0\5\3\1\0\2\3\2\0\6\3"+
    "\1\205\20\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\23\3\1\u0137\3\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\6\3\1\u01e2\20\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\4\3\1\u01e3\22\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\7\3"+
    "\1\u01e4\17\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\2\3\1\u015c\24\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\2\3\1\u01e5\24\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\3\1\u01e6\25\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\u01e7\23\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\4\3\1\u01e8\22\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\1\315\26\3\22\0\2\3\6\0"+
    "\2\3\1\u01e9\2\3\1\0\2\3\2\0\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\21\3\1\u01ea"+
    "\5\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\u01eb\23\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\5\3\1\u0160\21\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\u01ec\1\3\2\0\27\3\22\0\2\3"+
    "\6\0\4\3\1\u01ed\1\0\2\3\2\0\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\4\3\1\u01ee"+
    "\22\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\2\3\1\u01ef\24\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\7\3\1\204\1\u01f0\16\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\7\3\1\u01f1\17\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\10\3"+
    "\1\u0141\16\3\22\0\2\3\6\0\5\3\1\0\1\u01f2"+
    "\1\3\2\0\27\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\2\3\1\u01f3\24\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\2\3\1\u01f4\24\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\7\3\1\u01f5"+
    "\17\3\22\0\2\3\6\0\4\3\1\u01f6\1\0\2\3"+
    "\2\0\27\3\22\0\2\3\6\0\5\3\1\0\1\u01f7"+
    "\1\3\2\0\27\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\2\3\1\u01f8\24\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\u01f9\3\3\1\u01fa"+
    "\17\3\22\0\2\3\6\0\5\3\1\0\1\u01a9\1\3"+
    "\2\0\27\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\21\3\1\u0100\5\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\7\3\1\u01fb\17\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\u01fc\1\3\2\0\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\u01fd\1\3\2\0\27\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\241\23\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\20\3\1\u01fe\6\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\7\3\1\u01ff\14\3\1\u01d3\2\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\1\u0200"+
    "\26\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\10\3\1\u0201\16\3\22\0\2\3\6\0\3\3\1\322"+
    "\1\3\1\0\2\3\2\0\27\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\1\u0202\16\3\1\u0203\7\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\1\3"+
    "\1\u0204\25\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\16\3\1\315\10\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\1\u0205\26\3\22\0\2\3\6\0"+
    "\4\3\1\u0140\1\0\2\3\2\0\27\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\3\1\u0206\25\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\u0207\1\3\2\0"+
    "\27\3\22\0\2\3\6\0\2\3\1\u0208\2\3\1\0"+
    "\2\3\2\0\4\3\1\u0209\22\3\22\0\2\3\6\0"+
    "\3\3\1\u01f0\1\3\1\0\2\3\2\0\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\4\3\1\u020a"+
    "\11\3\1\315\10\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\3\3\1\u020b\23\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\11\3\1\204\15\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\1\3\1\u020c"+
    "\25\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\7\3\1\u01c2\17\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\2\3\1\u020d\24\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\13\3\1\342\13\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\5\3\1\u020e"+
    "\21\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\2\3\1\u020f\24\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\4\3\1\u0210\3\3\1\u0211\16\3\22\0"+
    "\2\3\6\0\2\3\1\u0212\2\3\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\u0100\22\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\3\3\1\u0213\23\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\2\3\1\u0214\24\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\4\3\1\u0215"+
    "\22\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\241\22\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\20\3\1\205\6\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\u0178\1\3\2\0\27\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\14\3\1\u0216\12\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\10\3"+
    "\1\u0217\16\3\22\0\2\3\6\0\3\3\1\u0218\1\3"+
    "\1\0\2\3\2\0\27\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\2\3\1\u0219\24\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\4\3\1\u021a\22\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\7\3"+
    "\1\u0211\17\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\21\3\1\322\5\3\22\0\2\3\6\0\4\3"+
    "\1\u021b\1\0\2\3\2\0\27\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\4\3\1\u021c\22\3\22\0"+
    "\2\3\6\0\3\3\1\u021d\1\3\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\10\3\1\u021e\16\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\3\3\1\u021f\1\u0220\22\3\22\0\2\3"+
    "\6\0\2\3\1\u0221\2\3\1\0\2\3\2\0\27\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\14\3"+
    "\1\u0222\12\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\3\3\1\217\23\3\22\0\2\3\6\0\5\3"+
    "\1\0\1\360\1\3\2\0\27\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\u0223\1\3\2\0\27\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\3\3\1\u0224\23\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\7\3"+
    "\1\u0225\17\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\3\3\1\u0226\23\3\22\0\2\3\6\0\1\3"+
    "\1\u0227\3\3\1\0\1\u0228\1\3\2\0\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\2\3\1\u0133"+
    "\24\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\10\3\1\u0229\16\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\1\3\1\u01ef\25\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\4\3\1\u022a\22\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\4\3\1\u01c2"+
    "\22\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\10\3\1\u022b\16\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\2\3\1\u022c\24\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\4\3\1\u022d\1\u022e\3\3"+
    "\1\u022f\14\3\1\u0230\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\10\3\1\u0100\16\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\u016c\1\3\2\0\27\3\22\0\2\3"+
    "\6\0\4\3\1\u0231\1\0\2\3\2\0\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\12\3\1\u0232"+
    "\14\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\2\3\1\u0233\24\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\3\3\1\u0234\23\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\4\3\1\171\22\3\22\0"+
    "\2\3\6\0\4\3\1\u0235\1\0\2\3\2\0\27\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\146\1\3\2\0"+
    "\27\3\22\0\2\3\6\0\4\3\1\u0236\1\0\2\3"+
    "\2\0\27\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\2\3\1\205\24\3\22\0\2\3\6\0\5\3"+
    "\1\0\1\u01a7\1\3\2\0\27\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\12\3\1\u017c\14\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\u0237\1\3\2\0\27\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\u0238\1\3\2\0"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\12\3\1\204\14\3\22\0\2\3\6\0\2\3\1\u0239"+
    "\2\3\1\0\2\3\2\0\27\3\22\0\2\3\6\0"+
    "\3\3\1\352\1\3\1\0\2\3\2\0\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\1\3\1\u0143"+
    "\25\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\22\3\1\u0100\4\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u023a\1\3\2\0\27\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\7\3\1\313\17\3\55\0\1\u023b"+
    "\37\0\2\3\6\0\5\3\1\0\2\3\2\0\2\3"+
    "\1\u023c\24\3\22\0\2\3\6\0\2\3\1\322\2\3"+
    "\1\0\2\3\2\0\27\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\1\3\1\241\25\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\4\3\1\u0140\22\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\2\3"+
    "\1\u023d\24\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\10\3\1\u023e\16\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\3\3\1\u023f\23\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\2\3\1\u0240\24\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\7\3"+
    "\1\204\17\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\1\u0241\26\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\21\3\1\u0242\5\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\360\23\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\4\3\1\u017c"+
    "\22\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\7\3\1\u01d4\17\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\5\3\1\205\21\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\4\3\1\u0243\22\3\22\0"+
    "\2\3\6\0\2\3\1\u0244\2\3\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\1\u0245\1\3"+
    "\2\0\27\3\22\0\2\3\6\0\5\3\1\0\1\u0246"+
    "\1\3\2\0\27\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\5\3\1\u0247\21\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\10\3\1\207\16\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\1\3\1\u01e2"+
    "\25\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\u0248\22\3\22\0\2\3\6\0\2\3\1\u015f"+
    "\2\3\1\0\2\3\2\0\27\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\u0249\23\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\2\3\1\u024a"+
    "\24\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\u024b\26\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\1\344\26\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\6\3\1\u024c\20\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\1\3\1\u024d\25\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\3\3\1\122"+
    "\23\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\u01bf\22\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\2\3\1\u024e\24\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\10\3\1\u024f\16\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\7\3\1\u0250"+
    "\17\3\22\0\2\3\6\0\4\3\1\u0187\1\0\2\3"+
    "\2\0\7\3\1\u0136\17\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\10\3\1\u0251\16\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\1\u0252\26\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\1\u0253\26\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\2\3"+
    "\1\u0254\24\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\1\u0255\22\3\1\322\3\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\7\3\1\u0256\17\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\7\3\1\u0257"+
    "\17\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\u0258\23\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\3\3\1\u01ef\23\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\124\23\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\3\3\1\u01e4"+
    "\23\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\205\22\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\12\3\1\u0259\14\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\1\3\1\u019e\25\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\u025a\1\3\2\0\27\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\u025b\1\3\2\0"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\7\3\1\u01dd\17\3\22\0\2\3\6\0\3\3\1\360"+
    "\1\3\1\0\2\3\2\0\27\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\u025c\23\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\u025d\1\3\2\0\27\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\u025e\23\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\4\3\1\u025f\22\3\22\0\2\3\6\0\4\3"+
    "\1\241\1\0\2\3\2\0\27\3\22\0\2\3\6\0"+
    "\2\3\1\u0260\2\3\1\0\2\3\2\0\27\3\22\0"+
    "\2\3\6\0\2\3\1\u01e4\2\3\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\u0261\23\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\10\3\1\u01eb\16\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\7\3\1\110\17\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\4\3\1\124"+
    "\22\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\u0133\26\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\4\3\1\245\22\3\22\0\2\3\6\0\4\3"+
    "\1\u0262\1\0\2\3\2\0\27\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\7\3\1\u0263\17\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\5\3\1\u0264"+
    "\21\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\u0265\22\3\22\0\2\3\6\0\2\3\1\u0266"+
    "\2\3\1\0\2\3\2\0\27\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\10\3\1\u0267\16\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\7\3\1\u0268"+
    "\17\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\21\3\1\u0137\5\3\22\0\2\3\6\0\3\3\1\u0269"+
    "\1\3\1\0\2\3\2\0\27\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\7\3\1\u026a\17\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\7\3\1\u026b"+
    "\17\3\22\0\2\3\6\0\5\3\1\0\1\u026c\1\3"+
    "\2\0\27\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\16\3\1\u0100\10\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\10\3\1\u01dd\16\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\u026d\1\3\2\0\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\23\3\1\315"+
    "\3\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\7\3\1\u026e\17\3\40\0\1\u026f\54\0\2\3\6\0"+
    "\2\3\1\u0270\2\3\1\0\2\3\2\0\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\2\3\1\u0271"+
    "\24\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\u0272\23\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\2\3\1\u0273\24\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\24\3\1\u0274\2\3\22\0"+
    "\2\3\6\0\2\3\1\u0140\2\3\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\2\3\1\u0275\24\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\4\3\1\u0276\22\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\u0277\1\3\2\0\27\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\7\3\1\u0278\17\3"+
    "\22\0\2\3\6\0\2\3\1\u0279\2\3\1\0\2\3"+
    "\2\0\27\3\22\0\2\3\6\0\5\3\1\0\1\204"+
    "\1\3\2\0\3\3\1\u01ca\23\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\6\3\1\u027a\20\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\10\3\1\u01ed"+
    "\16\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\2\3\1\u027b\24\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\7\3\1\161\17\3\22\0\2\3\6\0"+
    "\2\3\1\u027c\2\3\1\0\2\3\2\0\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\2\3\1\u027d"+
    "\24\3\22\0\2\3\6\0\2\3\1\u027e\2\3\1\0"+
    "\2\3\2\0\27\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\7\3\1\u027f\17\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\u01a2\23\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\u01e4\1\3\2\0\27\3"+
    "\22\0\2\3\6\0\4\3\1\u0280\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\2\3\1\u017c\24\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\2\3\1\u0281\24\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\u0282\23\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\11\3\1\241"+
    "\15\3\22\0\2\3\6\0\2\3\1\u0283\2\3\1\0"+
    "\2\3\2\0\27\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\5\3\1\u0284\21\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\6\3\1\u0257\5\3\1\205"+
    "\12\3\22\0\2\3\6\0\5\3\1\0\1\206\1\3"+
    "\2\0\7\3\1\u0285\17\3\22\0\2\3\6\0\2\3"+
    "\1\u0255\2\3\1\0\2\3\2\0\27\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\14\3\1\u0286\12\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\u0287\1\3\2\0"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\14\3\1\u0288\12\3\22\0\2\3\6\0\3\3\1\u0211"+
    "\1\3\1\0\2\3\2\0\27\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\u0289\23\3\22\0"+
    "\2\3\6\0\1\3\1\u028a\3\3\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\22\3\1\u028b\4\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\2\3\1\u028c\24\3\22\0\2\3\6\0"+
    "\5\3\1\0\1\u0225\1\3\2\0\27\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\6\3\1\u015c\20\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\1\3"+
    "\1\u0257\25\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\11\3\1\u028d\15\3\22\0\2\3\6\0\2\3"+
    "\1\u028e\2\3\1\0\2\3\2\0\27\3\45\0\1\u028f"+
    "\47\0\2\3\6\0\5\3\1\0\2\3\2\0\15\3"+
    "\1\u0290\11\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\1\3\1\u0291\25\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\3\3\1\u0292\23\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\24\3\1\u0293\2\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\206\1\3\2\0"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\u0294\23\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\1\u0295\26\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\10\3\1\u0296\16\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\u0297\1\3\2\0\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\u0298\1\3\2\0\27\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\u0299\1\3\2\0"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\23\3\1\u0185\3\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\21\3\1\u029a\5\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\15\3\1\u029b\11\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\16\3\1\u0264"+
    "\10\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\3\1\303\25\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\1\3\1\u029c\25\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\14\3\1\u029d\12\3\22\0"+
    "\2\3\6\0\3\3\1\u029e\1\3\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\16\3\1\303\10\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\1\u029f\26\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\17\3\1\u019e\7\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\u02a0\1\3\2\0\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\1\u02a1\26\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\7\3"+
    "\1\u02a2\17\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\2\3\1\u0295\24\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\16\3\1\236\10\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\7\3\1\u02a3\17\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\1\u02a4"+
    "\17\3\1\u02a5\6\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\1\3\1\u015c\25\3\22\0\2\3\6\0"+
    "\3\3\1\u0171\1\3\1\0\2\3\2\0\2\3\1\u02a6"+
    "\2\3\1\u01ef\21\3\22\0\2\3\6\0\2\3\1\u02a7"+
    "\2\3\1\0\2\3\2\0\27\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\2\3\1\u02a8\24\3\22\0"+
    "\2\3\6\0\2\3\1\316\2\3\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\u0145\22\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\24\3\1\u02a9\2\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\6\3\1\154\20\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\1\3\1\u029c"+
    "\22\3\1\u02aa\2\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\10\3\1\u0137\16\3\22\0\2\3\6\0"+
    "\4\3\1\u02ab\1\0\2\3\2\0\27\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\2\3\1\u0276\24\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\10\3"+
    "\1\u02ac\16\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\11\3\1\u02ad\15\3\22\0\2\3\6\0\5\3"+
    "\1\0\1\241\1\3\2\0\27\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\1\u02ae\26\3\22\0\2\3"+
    "\6\0\3\3\1\u02af\1\3\1\0\2\3\2\0\27\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\u02b0\23\3\22\0\2\3\6\0\5\3\1\0\1\u02b1"+
    "\1\3\2\0\27\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\3\3\1\u02b2\23\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\2\3\1\u0238\24\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\7\3\1\u0121"+
    "\17\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\13\3\1\u02b3\5\3\1\u02b4\5\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\u02b5\23\3\22\0"+
    "\2\3\6\0\5\3\1\0\1\u02b6\1\3\2\0\27\3"+
    "\22\0\2\3\6\0\4\3\1\u018a\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\1\u02b7\1\3"+
    "\2\0\27\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\10\3\1\u02b8\16\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\5\3\1\u018b\21\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\21\3\1\u02b9\5\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\15\3"+
    "\1\u02ba\11\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\21\3\1\u02bb\5\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\10\3\1\u02bc\16\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\3\3\1\u02bd\23\3"+
    "\22\0\2\3\6\0\2\3\1\u02be\2\3\1\0\2\3"+
    "\2\0\27\3\22\0\2\3\6\0\2\3\1\u0214\2\3"+
    "\1\0\2\3\2\0\27\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\1\3\1\u02bf\25\3\22\0\2\3"+
    "\6\0\3\3\1\u02c0\1\3\1\0\2\3\2\0\27\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\u02c1\23\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\6\3\1\u02c2\20\3\22\0\2\3\6\0\5\3"+
    "\1\0\1\u02c3\1\3\2\0\27\3\22\0\2\3\6\0"+
    "\3\3\1\u0141\1\3\1\0\2\3\2\0\27\3\22\0"+
    "\2\3\6\0\2\3\1\u018a\2\3\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\u0185\26\3\22\0\2\3\6\0\3\3\1\u02c4\1\3"+
    "\1\0\2\3\2\0\27\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\4\3\1\344\22\3\22\0\2\3"+
    "\6\0\4\3\1\u02c5\1\0\2\3\2\0\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\13\3\1\u02c6"+
    "\13\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\u0202\26\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\2\3\1\u02c7\24\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\7\3\1\u02c8\17\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\4\3\1\u02c9\22\3"+
    "\22\0\2\3\6\0\5\3\1\0\1\u02ca\1\3\2\0"+
    "\27\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\u02cb\22\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\7\3\1\u02cc\17\3\22\0\2\3\6\0"+
    "\1\3\1\u02cd\3\3\1\0\2\3\2\0\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\3\3\1\u02ce"+
    "\23\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\u02cf\26\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\6\3\1\u02d0\20\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\2\3\1\u02d1\24\3\22\0\2\3"+
    "\6\0\5\3\1\0\1\u02d2\1\3\2\0\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\7\3\1\u02d3"+
    "\17\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\15\3\1\u02d4\11\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\5\3\1\u02d5\21\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\2\3\1\u02a8\2\3\1\u02d6"+
    "\21\3\22\0\2\3\6\0\1\3\1\u02d7\3\3\1\0"+
    "\2\3\2\0\27\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u02d8\1\3\2\0\27\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\7\3\1\u02d9\17\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\2\3\1\u02da\24\3"+
    "\22\0\2\3\6\0\5\3\1\0\2\3\2\0\5\3"+
    "\1\u02db\21\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\7\3\1\u02dc\17\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\7\3\1\u02dd\17\3\22\0\2\3"+
    "\6\0\5\3\1\0\2\3\2\0\3\3\1\u02de\23\3"+
    "\22\0\2\3\6\0\1\3\1\u02df\3\3\1\0\2\3"+
    "\2\0\27\3\22\0\2\3\6\0\4\3\1\u02e0\1\0"+
    "\2\3\2\0\27\3\22\0\2\3\6\0\5\3\1\0"+
    "\1\u02e1\1\3\2\0\27\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\1\u02d2\26\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\11\3\1\u02e2\15\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\3\3\1\u02e3"+
    "\23\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\1\u02e4\26\3\22\0\2\3\6\0\5\3\1\0\2\3"+
    "\2\0\2\3\1\u02e5\24\3\22\0\2\3\6\0\5\3"+
    "\1\0\2\3\2\0\1\u02e6\26\3\22\0\2\3\6\0"+
    "\1\3\1\u02e7\3\3\1\0\2\3\2\0\27\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\6\3\1\u02e8"+
    "\20\3\22\0\2\3\6\0\5\3\1\0\2\3\2\0"+
    "\7\3\1\u02e9\17\3\22\0\2\3\6\0\5\3\1\0"+
    "\2\3\2\0\4\3\1\u02ea\22\3\22\0\2\3\6\0"+
    "\5\3\1\0\2\3\2\0\2\3\1\u02eb\24\3\22\0"+
    "\2\3\6\0\5\3\1\0\2\3\2\0\3\3\1\322"+
    "\23\3\21\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[41182];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\2\1\2\11\2\1\1\11\35\1\1\11"+
    "\6\1\1\11\1\1\1\11\1\1\1\11\1\1\2\11"+
    "\26\1\1\0\1\11\145\1\12\11\3\0\23\1\1\0"+
    "\203\1\1\0\15\1\2\0\172\1\1\0\131\1\1\0"+
    "\63\1\1\0\37\1\1\11\134\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[747];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
public String lexeme;
public int getLine() { return yyline; }
public int getColumn() { return yycolumn; }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 186) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Token yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { lexeme=yytext(); return ERROR;
            } 
            // fall through
          case 49: break;
          case 2: 
            { lexeme=yytext(); return ID;
            } 
            // fall through
          case 50: break;
          case 3: 
            { lexeme=yytext(); return INT;
            } 
            // fall through
          case 51: break;
          case 4: 
            { /*Ignore*/
            } 
            // fall through
          case 52: break;
          case 5: 
            { lexeme=yytext(); return COMA;
            } 
            // fall through
          case 53: break;
          case 6: 
            { lexeme=yytext(); return MENOS;
            } 
            // fall through
          case 54: break;
          case 7: 
            { lexeme=yytext(); return DIV;
            } 
            // fall through
          case 55: break;
          case 8: 
            { lexeme=yytext(); return MULT;
            } 
            // fall through
          case 56: break;
          case 9: 
            { lexeme=yytext(); return BIT;
            } 
            // fall through
          case 57: break;
          case 10: 
            { lexeme=yytext(); return PUNTO;
            } 
            // fall through
          case 58: break;
          case 11: 
            { lexeme=yytext(); return MAS;
            } 
            // fall through
          case 59: break;
          case 12: 
            { lexeme=yytext(); return RES;
            } 
            // fall through
          case 60: break;
          case 13: 
            { lexeme=yytext(); return MENOR;
            } 
            // fall through
          case 61: break;
          case 14: 
            { lexeme=yytext(); return IGUAL;
            } 
            // fall through
          case 62: break;
          case 15: 
            { lexeme=yytext(); return MAYOR;
            } 
            // fall through
          case 63: break;
          case 16: 
            { lexeme=yytext(); return NOT;
            } 
            // fall through
          case 64: break;
          case 17: 
            { lexeme=yytext(); return PUNTO_COMA;
            } 
            // fall through
          case 65: break;
          case 18: 
            { lexeme=yytext(); return CORCHETE_ABIERTO;
            } 
            // fall through
          case 66: break;
          case 19: 
            { lexeme=yytext(); return CORCHETE_CERRADO;
            } 
            // fall through
          case 67: break;
          case 20: 
            { lexeme=yytext(); return PARENTESIS_ABIERTO;
            } 
            // fall through
          case 68: break;
          case 21: 
            { lexeme=yytext(); return PARENTESIS_CERRADO;
            } 
            // fall through
          case 69: break;
          case 22: 
            { lexeme=yytext(); return LLAVE_ABIERTO;
            } 
            // fall through
          case 70: break;
          case 23: 
            { lexeme=yytext(); return LLAVE_CERRADO;
            } 
            // fall through
          case 71: break;
          case 24: 
            { lexeme=yytext(); return ARROBA;
            } 
            // fall through
          case 72: break;
          case 25: 
            { lexeme=yytext(); return NUMERAL;
            } 
            // fall through
          case 73: break;
          case 26: 
            { lexeme=yytext(); return FLOAT;
            } 
            // fall through
          case 74: break;
          case 27: 
            { lexeme=yytext(); return COMENTARIO_M;
            } 
            // fall through
          case 75: break;
          case 28: 
            { lexeme=yytext(); return PALABRA_RESERVADA;
            } 
            // fall through
          case 76: break;
          case 29: 
            { lexeme=yytext(); return ERROR_F;
            } 
            // fall through
          case 77: break;
          case 30: 
            { lexeme=yytext(); return STRING;
            } 
            // fall through
          case 78: break;
          case 31: 
            { lexeme=yytext(); return MENOR_O_IGUAL;
            } 
            // fall through
          case 79: break;
          case 32: 
            { lexeme=yytext(); return IGUAL_A;
            } 
            // fall through
          case 80: break;
          case 33: 
            { lexeme=yytext(); return MAYOR_O_IGUAL;
            } 
            // fall through
          case 81: break;
          case 34: 
            { lexeme=yytext(); return DIFERENTE;
            } 
            // fall through
          case 82: break;
          case 35: 
            { lexeme=yytext(); return AND;
            } 
            // fall through
          case 83: break;
          case 36: 
            { lexeme=yytext(); return OR;
            } 
            // fall through
          case 84: break;
          case 37: 
            { lexeme=yytext(); return CORCHETES;
            } 
            // fall through
          case 85: break;
          case 38: 
            { lexeme=yytext(); return PARENTESIS;
            } 
            // fall through
          case 86: break;
          case 39: 
            { lexeme=yytext(); return LLAVES;
            } 
            // fall through
          case 87: break;
          case 40: 
            { lexeme=yytext(); return DOBLE_NUMERAL;
            } 
            // fall through
          case 88: break;
          case 41: 
            { lexeme=yytext(); return DROP;
            } 
            // fall through
          case 89: break;
          case 42: 
            { lexeme=yytext(); return ALTER;
            } 
            // fall through
          case 90: break;
          case 43: 
            { lexeme=yytext(); return UPDATE;
            } 
            // fall through
          case 91: break;
          case 44: 
            { lexeme=yytext(); return SELECT;
            } 
            // fall through
          case 92: break;
          case 45: 
            { lexeme=yytext(); return CREATE;
            } 
            // fall through
          case 93: break;
          case 46: 
            { lexeme=yytext(); return INSERT;
            } 
            // fall through
          case 94: break;
          case 47: 
            { lexeme=yytext(); return DELETE;
            } 
            // fall through
          case 95: break;
          case 48: 
            { lexeme=yytext(); return TRUNCATE;
            } 
            // fall through
          case 96: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
