/* The following code was generated by JFlex 1.7.0 */

package Classes;
import static Classes.Token.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>C:/Users/eecon/OneDrive/Escritorio/URL/2019/Segundo ciclo/Compis/Proyecto_Compiladores/minisql/src/Classes/Lexer.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\3\1\5\1\71\1\71\1\3\22\0\1\3\1\55\1\0"+
    "\1\70\1\0\1\51\1\56\1\21\1\63\1\64\1\7\1\20\1\3"+
    "\1\4\1\15\1\6\1\10\1\11\10\2\1\0\1\60\1\52\1\53"+
    "\1\54\1\0\1\67\1\22\1\34\1\31\1\23\1\16\1\32\1\40"+
    "\1\33\1\35\1\47\1\42\1\14\1\43\1\12\1\30\1\27\1\50"+
    "\1\26\1\36\1\25\1\13\1\45\1\44\1\24\1\37\1\41\1\61"+
    "\1\0\1\62\1\0\1\46\1\0\4\1\1\17\25\1\1\65\1\57"+
    "\1\66\7\0\1\71\u1fa2\0\1\71\1\71\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udfe6\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7"+
    "\1\10\3\2\1\11\1\2\1\12\1\1\25\2\1\13"+
    "\1\14\1\15\1\16\1\17\2\1\1\20\1\21\1\22"+
    "\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\3"+
    "\1\4\1\32\2\2\1\33\10\2\1\34\5\2\1\0"+
    "\1\35\4\2\1\33\2\2\1\33\14\2\1\33\17\2"+
    "\1\33\1\2\1\33\2\2\1\33\26\2\1\33\2\2"+
    "\1\33\21\2\1\33\17\2\1\36\1\37\1\40\1\41"+
    "\1\42\1\43\1\44\1\45\1\46\1\47\3\0\13\2"+
    "\1\33\7\2\1\0\1\33\7\2\1\33\5\2\1\33"+
    "\51\2\1\33\26\2\1\33\13\2\1\33\1\2\1\33"+
    "\12\2\1\33\12\2\1\33\4\2\1\33\7\2\1\31"+
    "\1\0\1\10\12\2\1\34\2\0\20\2\1\33\7\2"+
    "\1\33\3\2\1\33\2\2\1\33\23\2\1\33\3\2"+
    "\1\33\20\2\1\33\42\2\2\33\7\2\1\0\20\2"+
    "\1\33\44\2\1\33\30\2\1\33\1\2\1\0\1\33"+
    "\53\2\1\33\1\0\16\2\1\33\1\2\1\33\11\2"+
    "\1\33\3\2\1\33\12\2\1\33\3\2\1\33\42\2"+
    "\1\33\51\2";

  private static int [] zzUnpackAction() {
    int [] result = new int[720];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\72\0\164\0\256\0\72\0\350\0\u0122\0\72"+
    "\0\256\0\u015c\0\u0196\0\u01d0\0\u020a\0\u0244\0\u027e\0\u02b8"+
    "\0\u02f2\0\u032c\0\u0366\0\u03a0\0\u03da\0\u0414\0\u044e\0\u0488"+
    "\0\u04c2\0\u04fc\0\u0536\0\u0570\0\u05aa\0\u05e4\0\u061e\0\u0658"+
    "\0\u0692\0\u06cc\0\u0706\0\u0740\0\u077a\0\72\0\u07b4\0\u07ee"+
    "\0\u0828\0\u0862\0\u089c\0\u08d6\0\72\0\u0910\0\72\0\u094a"+
    "\0\72\0\u0984\0\72\0\72\0\u09be\0\u09f8\0\u027e\0\u0a32"+
    "\0\u0a6c\0\u0aa6\0\u0ae0\0\u0b1a\0\u0b54\0\u0b8e\0\u0bc8\0\u0c02"+
    "\0\u0c3c\0\u0c76\0\u0cb0\0\u0cea\0\u0d24\0\u0d5e\0\u0d98\0\u0dd2"+
    "\0\u0e0c\0\u0e46\0\u02b8\0\72\0\u0e80\0\u0eba\0\u0ef4\0\u0f2e"+
    "\0\164\0\u0f68\0\u0fa2\0\u0fdc\0\u1016\0\u1050\0\u108a\0\u10c4"+
    "\0\u10fe\0\u1138\0\u1172\0\u11ac\0\u11e6\0\u1220\0\u125a\0\u1294"+
    "\0\u12ce\0\u1308\0\u1342\0\u137c\0\u13b6\0\u13f0\0\u142a\0\u1464"+
    "\0\u149e\0\u14d8\0\u1512\0\u154c\0\u1586\0\u15c0\0\u15fa\0\u1634"+
    "\0\u166e\0\u16a8\0\u16e2\0\u171c\0\u1756\0\u1790\0\u17ca\0\u1804"+
    "\0\u183e\0\u1878\0\u18b2\0\u18ec\0\u1926\0\u1960\0\u199a\0\u19d4"+
    "\0\u1a0e\0\u1a48\0\u1a82\0\u1abc\0\u1af6\0\u1b30\0\u1b6a\0\u1ba4"+
    "\0\u1bde\0\u1c18\0\u1c52\0\u1c8c\0\u1cc6\0\u1d00\0\u1d3a\0\u1d74"+
    "\0\u1dae\0\u1de8\0\u1e22\0\u1e5c\0\u1e96\0\u1ed0\0\u1f0a\0\u1f44"+
    "\0\u1f7e\0\u1fb8\0\u1ff2\0\u202c\0\u2066\0\u20a0\0\u20da\0\u2114"+
    "\0\u214e\0\u2188\0\u21c2\0\u21fc\0\u2236\0\u2270\0\u22aa\0\u22e4"+
    "\0\u231e\0\u2358\0\u2392\0\u23cc\0\u2406\0\u2440\0\u247a\0\u24b4"+
    "\0\u24ee\0\72\0\72\0\72\0\72\0\72\0\72\0\72"+
    "\0\72\0\72\0\72\0\u2528\0\u2562\0\u259c\0\u25d6\0\u2610"+
    "\0\u264a\0\u2684\0\u26be\0\u26f8\0\u2732\0\u276c\0\u27a6\0\u27e0"+
    "\0\u281a\0\u2854\0\u288e\0\u28c8\0\u2902\0\u293c\0\u2976\0\u29b0"+
    "\0\u29ea\0\u2a24\0\u2a5e\0\u2a98\0\u2ad2\0\u2b0c\0\u2b46\0\u2b80"+
    "\0\u2bba\0\u2bf4\0\u2c2e\0\u2c68\0\u2ca2\0\u12ce\0\u2cdc\0\u2d16"+
    "\0\u2d50\0\u2d8a\0\u2dc4\0\u2dfe\0\u2e38\0\u2e72\0\u2eac\0\u2ee6"+
    "\0\u2f20\0\u2f5a\0\u2f94\0\u2fce\0\u3008\0\u3042\0\u307c\0\u30b6"+
    "\0\u30f0\0\u312a\0\u3164\0\u319e\0\u31d8\0\u3212\0\u324c\0\u3286"+
    "\0\u32c0\0\u32fa\0\u3334\0\u336e\0\u33a8\0\u33e2\0\u341c\0\u3456"+
    "\0\u3490\0\u34ca\0\u3504\0\u353e\0\u3578\0\u35b2\0\u35ec\0\u3626"+
    "\0\u3660\0\u369a\0\u36d4\0\u370e\0\u3748\0\u3782\0\u37bc\0\u37f6"+
    "\0\u3830\0\u386a\0\u38a4\0\u38de\0\u3918\0\u3952\0\u398c\0\u39c6"+
    "\0\u3a00\0\u3a3a\0\u3a74\0\u3aae\0\u3ae8\0\u3b22\0\u3b5c\0\u3b96"+
    "\0\u3bd0\0\u3c0a\0\u3c44\0\u3c7e\0\u3cb8\0\u2854\0\u3cf2\0\u3d2c"+
    "\0\u3d66\0\u3da0\0\u3dda\0\u3e14\0\u3e4e\0\u3e88\0\u3ec2\0\u3efc"+
    "\0\u3f36\0\u3f70\0\u3faa\0\u3fe4\0\u401e\0\u4058\0\u4092\0\u40cc"+
    "\0\u4106\0\u4140\0\u417a\0\u41b4\0\u41ee\0\u4228\0\u4262\0\u429c"+
    "\0\u42d6\0\u4310\0\u434a\0\u4384\0\u43be\0\u43f8\0\u4432\0\u446c"+
    "\0\u44a6\0\u44e0\0\u451a\0\u4554\0\u458e\0\u45c8\0\u4602\0\u463c"+
    "\0\u4676\0\u46b0\0\u46ea\0\u46ea\0\u4724\0\u475e\0\u4798\0\u47d2"+
    "\0\u480c\0\u4846\0\u4880\0\u48ba\0\u48f4\0\u492e\0\u4968\0\u49a2"+
    "\0\u49a2\0\u49dc\0\u4a16\0\u4a50\0\u4a8a\0\u4ac4\0\u4afe\0\u4b38"+
    "\0\u4b72\0\u4bac\0\u4be6\0\u4c20\0\u4c5a\0\u4c94\0\u4cce\0\u4d08"+
    "\0\u4d42\0\u4d7c\0\u4db6\0\u4df0\0\u4e2a\0\u4e64\0\u4e9e\0\u4ed8"+
    "\0\u4f12\0\u4f4c\0\u4f86\0\u4fc0\0\u4ffa\0\u5034\0\u506e\0\u50a8"+
    "\0\u50e2\0\u511c\0\u5156\0\u5190\0\u51ca\0\u5204\0\u523e\0\u5278"+
    "\0\u52b2\0\u52ec\0\u5326\0\u5360\0\u539a\0\u53d4\0\u540e\0\u5448"+
    "\0\u5482\0\u54bc\0\u54f6\0\u5530\0\u556a\0\u55a4\0\u55de\0\u5618"+
    "\0\u5652\0\u568c\0\u56c6\0\u5700\0\u573a\0\u5774\0\u57ae\0\u57e8"+
    "\0\u5822\0\u585c\0\u5896\0\u58d0\0\u590a\0\u5944\0\u597e\0\u451a"+
    "\0\u59b8\0\u59f2\0\u5a2c\0\u5a66\0\u5aa0\0\u5ada\0\u5b14\0\u5b4e"+
    "\0\u5b88\0\u5bc2\0\u5bfc\0\u5c36\0\u5c70\0\u5caa\0\u5ce4\0\u5d1e"+
    "\0\u5d58\0\u5d92\0\u5dcc\0\u5e06\0\u5e40\0\u5e7a\0\u5eb4\0\u5eee"+
    "\0\u5f28\0\u5f62\0\u5f9c\0\u5fd6\0\u6010\0\u604a\0\u6084\0\u60be"+
    "\0\u60f8\0\u6132\0\u616c\0\u61a6\0\u61e0\0\u621a\0\u24ee\0\u6254"+
    "\0\u628e\0\u62c8\0\u6302\0\u633c\0\u6376\0\u63b0\0\u63ea\0\u6424"+
    "\0\u645e\0\u6498\0\u64d2\0\u2c2e\0\u650c\0\u6546\0\u6580\0\u65ba"+
    "\0\u65f4\0\u662e\0\u6668\0\u66a2\0\u66dc\0\u6716\0\u6750\0\u678a"+
    "\0\u67c4\0\u67fe\0\u6838\0\u6872\0\u68ac\0\u68e6\0\u6920\0\u695a"+
    "\0\u6994\0\u69ce\0\u6a08\0\u6a42\0\u6a7c\0\u6ab6\0\u6af0\0\u6b2a"+
    "\0\u6b64\0\u6b9e\0\u6bd8\0\u6c12\0\u6c4c\0\u6c86\0\u6cc0\0\u3e88"+
    "\0\u6cfa\0\u6d34\0\u6d6e\0\u6da8\0\u6de2\0\u6e1c\0\u6e56\0\u6e90"+
    "\0\u6eca\0\u6f04\0\u6f3e\0\u6f78\0\u6fb2\0\u6fec\0\u7026\0\u7060"+
    "\0\u709a\0\u70d4\0\u710e\0\u7148\0\u7182\0\u71bc\0\u71f6\0\u7230"+
    "\0\u726a\0\u72a4\0\u72de\0\u7318\0\u7352\0\u738c\0\u73c6\0\u7400"+
    "\0\u743a\0\u7474\0\u74ae\0\u74e8\0\u7522\0\u480c\0\u755c\0\u7596"+
    "\0\u3660\0\u75d0\0\u760a\0\u7644\0\u767e\0\u76b8\0\u76f2\0\u772c"+
    "\0\u7766\0\u77a0\0\u77da\0\u7814\0\u784e\0\u7888\0\u78c2\0\u78fc"+
    "\0\u7936\0\u7970\0\u79aa\0\u79e4\0\u7a1e\0\u7a58\0\u7a92\0\u7acc"+
    "\0\u7b06\0\u7b40\0\u7b7a\0\u7bb4\0\u7bee\0\u7c28\0\u7c62\0\u7c9c"+
    "\0\u7cd6\0\u7d10\0\u7d4a\0\u7d84\0\u7dbe\0\u7df8\0\u7e32\0\u7e6c"+
    "\0\u7ea6\0\u7ee0\0\u7f1a\0\u7f54\0\u3aae\0\u7f8e\0\u7fc8\0\u8002"+
    "\0\u803c\0\u8076\0\u80b0\0\u80ea\0\u8124\0\u815e\0\u8198\0\u81d2"+
    "\0\u820c\0\u8246\0\u8280\0\u82ba\0\u82f4\0\u832e\0\u0f2e\0\u8368"+
    "\0\u83a2\0\u83dc\0\u8416\0\u8450\0\u848a\0\u166e\0\u84c4\0\u84fe"+
    "\0\u7f1a\0\u8538\0\u8572\0\u417a\0\72\0\u85ac\0\u85e6\0\u8620"+
    "\0\u865a\0\u8694\0\u86ce\0\u8708\0\u8742\0\u877c\0\u87b6\0\u87f0"+
    "\0\u882a\0\u8864\0\u889e\0\u88d8\0\u8912\0\u894c\0\u8986\0\u89c0"+
    "\0\u89fa\0\u8a34\0\u8a6e\0\u8aa8\0\u8ae2\0\u8b1c\0\u8b56\0\u8b90"+
    "\0\u8bca\0\u8c04\0\u8c3e\0\u8c78\0\u8cb2\0\u8cec\0\u8d26\0\u8d60"+
    "\0\u8d9a\0\u8dd4\0\u8e0e\0\u8e48\0\u8e82\0\u8ebc\0\u8ef6\0\u8f30"+
    "\0\u8f6a\0\u8fa4\0\u8fde\0\u9018\0\u9052\0\u908c\0\u90c6\0\u9100"+
    "\0\u913a\0\u9174\0\u91ae\0\u91e8\0\u9222\0\u925c\0\u9296\0\u92d0"+
    "\0\u930a\0\u9344\0\u937e\0\u93b8\0\u93f2\0\u942c\0\u9466\0\u87f0"+
    "\0\u94a0\0\u94da\0\u9514\0\u954e\0\u9588\0\u95c2\0\u95fc\0\u9636"+
    "\0\u9670\0\u96aa\0\u96e4\0\u971e\0\u9758\0\u9792\0\u97cc\0\u9806"+
    "\0\u9840\0\u987a\0\u98b4\0\u98ee\0\u9928\0\u9962\0\u999c\0\u99d6";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[720];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\5\1\7\1\10"+
    "\2\11\1\12\1\13\1\14\1\15\1\16\1\3\1\17"+
    "\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27"+
    "\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37"+
    "\1\40\1\41\1\42\1\43\1\44\1\3\1\45\1\3"+
    "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55"+
    "\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65"+
    "\74\0\2\3\5\0\5\3\1\0\2\3\2\0\27\3"+
    "\23\0\1\4\5\0\2\4\3\0\1\66\56\0\1\67"+
    "\1\0\1\70\3\0\2\67\67\0\1\71\63\0\2\3"+
    "\5\0\3\3\1\72\1\3\1\0\2\3\2\0\1\73"+
    "\5\3\1\74\1\75\17\3\22\0\2\3\5\0\2\3"+
    "\1\76\2\3\1\0\2\3\2\0\5\3\1\77\6\3"+
    "\1\100\12\3\22\0\2\3\5\0\5\3\1\0\1\101"+
    "\1\3\2\0\1\102\5\3\1\103\4\3\1\104\13\3"+
    "\23\0\1\105\5\0\2\105\61\0\2\3\5\0\2\3"+
    "\1\106\1\3\1\107\1\0\2\3\2\0\2\3\1\110"+
    "\1\3\1\111\7\3\1\112\12\3\23\0\1\67\5\0"+
    "\2\67\60\0\5\113\1\0\13\113\1\114\50\113\1\0"+
    "\2\3\5\0\2\3\1\115\1\116\1\117\1\0\2\3"+
    "\2\0\1\3\1\120\1\3\1\121\1\122\2\3\1\123"+
    "\4\3\1\124\6\3\1\125\3\3\22\0\2\3\5\0"+
    "\3\3\1\126\1\3\1\0\1\127\1\3\2\0\1\130"+
    "\3\3\1\131\1\3\1\132\3\3\1\133\1\134\13\3"+
    "\22\0\2\3\5\0\5\3\1\0\1\135\1\3\2\0"+
    "\27\3\22\0\2\3\5\0\5\3\1\0\1\136\1\3"+
    "\2\0\1\137\3\3\1\140\1\3\1\141\2\3\1\142"+
    "\1\3\1\143\1\144\12\3\22\0\2\3\5\0\3\3"+
    "\1\145\1\3\1\0\1\146\1\3\2\0\1\147\5\3"+
    "\1\150\4\3\1\151\13\3\22\0\2\3\5\0\3\3"+
    "\1\152\1\153\1\0\1\154\1\3\2\0\1\155\3\3"+
    "\1\156\1\3\1\157\4\3\1\160\13\3\22\0\2\3"+
    "\5\0\2\3\1\161\1\162\1\3\1\0\2\3\2\0"+
    "\4\3\1\163\1\164\1\3\1\165\1\166\12\3\1\167"+
    "\3\3\22\0\2\3\5\0\3\3\1\170\1\171\1\0"+
    "\2\3\2\0\1\172\3\3\1\173\1\3\1\174\2\3"+
    "\1\175\15\3\22\0\2\3\5\0\3\3\1\176\1\177"+
    "\1\0\1\200\1\3\2\0\1\201\3\3\1\202\1\3"+
    "\1\203\4\3\1\204\13\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\1\205\5\3\1\206\20\3\22\0"+
    "\2\3\5\0\3\3\1\207\1\3\1\0\1\210\1\3"+
    "\2\0\1\211\3\3\1\212\1\3\1\213\4\3\1\214"+
    "\1\3\1\121\11\3\22\0\2\3\5\0\2\3\1\215"+
    "\2\3\1\0\2\3\2\0\1\3\1\216\6\3\1\217"+
    "\3\3\1\220\4\3\1\221\5\3\22\0\2\3\5\0"+
    "\3\3\1\222\1\3\1\0\1\223\1\3\2\0\1\224"+
    "\2\3\1\225\1\3\1\226\1\227\1\230\1\3\1\231"+
    "\1\3\1\232\1\3\1\233\3\3\1\234\4\3\1\235"+
    "\22\0\2\3\5\0\5\3\1\0\1\236\1\3\2\0"+
    "\27\3\22\0\2\3\5\0\4\3\1\237\1\0\1\240"+
    "\1\3\2\0\4\3\1\241\1\3\1\242\20\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\6\3\1\243"+
    "\20\3\22\0\2\3\5\0\5\3\1\0\1\244\1\3"+
    "\2\0\13\3\1\245\13\3\22\0\2\3\5\0\5\3"+
    "\1\0\1\246\1\3\2\0\1\247\5\3\1\250\4\3"+
    "\1\251\13\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\1\252\3\3\1\253\1\3\1\254\2\3\1\255"+
    "\1\3\1\256\13\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\1\257\12\3\1\260\13\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\6\3\1\261\20\3"+
    "\74\0\1\262\71\0\1\263\71\0\1\264\71\0\1\265"+
    "\74\0\1\266\72\0\1\267\74\0\1\270\73\0\1\271"+
    "\73\0\1\272\73\0\1\273\3\0\1\66\5\0\2\66"+
    "\4\0\2\274\52\0\5\70\1\0\64\70\5\71\2\275"+
    "\1\276\62\71\1\0\2\3\5\0\4\3\1\277\1\0"+
    "\2\3\2\0\21\3\1\300\5\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\301\15\3\1\302"+
    "\5\3\22\0\2\3\5\0\2\3\1\303\2\3\1\0"+
    "\2\3\2\0\3\3\1\121\3\3\1\304\17\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\11\3\1\236"+
    "\15\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\5\3\1\305\5\3\1\306\4\3\1\307\6\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\1\3\1\310"+
    "\3\3\1\311\21\3\22\0\2\3\5\0\5\3\1\0"+
    "\1\312\1\3\2\0\1\313\12\3\1\314\13\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\1\315\7\3"+
    "\1\240\12\3\1\316\3\3\22\0\2\3\5\0\2\3"+
    "\1\317\2\3\1\0\2\3\2\0\14\3\1\240\12\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\1\120"+
    "\6\3\1\320\12\3\1\311\4\3\22\0\2\3\5\0"+
    "\2\3\1\321\2\3\1\0\2\3\2\0\20\3\1\122"+
    "\6\3\23\0\1\105\5\0\2\105\4\0\2\322\53\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\1\3\1\323"+
    "\25\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\14\3\1\122\12\3\22\0\2\3\5\0\5\3\1\0"+
    "\1\324\1\3\2\0\3\3\1\325\3\3\1\326\3\3"+
    "\1\327\13\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\4\3\1\330\22\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\7\3\1\331\17\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\1\3\1\121\13\3"+
    "\1\121\11\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\3\3\1\332\23\3\22\0\2\3\5\0\4\3"+
    "\1\333\1\0\2\3\2\0\3\3\1\311\23\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\1\3\1\121"+
    "\25\3\22\0\2\3\5\0\5\3\1\0\1\121\1\3"+
    "\2\0\27\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\3\3\1\334\23\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\7\3\1\121\4\3\1\335\12\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\16\3"+
    "\1\121\10\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\21\3\1\336\5\3\22\0\2\3\5\0\2\3"+
    "\1\244\1\3\1\337\1\0\2\3\2\0\1\340\6\3"+
    "\1\341\1\342\3\3\1\343\12\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\344\11\3\1\121"+
    "\11\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\6\3\1\336\20\3\22\0\2\3\5\0\3\3\1\345"+
    "\1\3\1\0\2\3\2\0\21\3\1\346\5\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\7\3\1\135"+
    "\17\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\1\347\13\3\1\350\12\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\7\3\1\121\17\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\2\3\1\351\16\3"+
    "\1\352\5\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\12\3\1\353\14\3\22\0\2\3\5\0\3\3"+
    "\1\354\1\3\1\0\2\3\2\0\1\355\12\3\1\356"+
    "\1\3\1\357\11\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\5\3\1\121\21\3\22\0\2\3\5\0"+
    "\5\3\1\0\1\360\1\3\2\0\27\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\21\3\1\361\5\3"+
    "\22\0\2\3\5\0\5\3\1\0\1\362\1\3\2\0"+
    "\27\3\22\0\2\3\5\0\4\3\1\122\1\0\2\3"+
    "\2\0\27\3\22\0\2\3\5\0\4\3\1\363\1\0"+
    "\2\3\2\0\1\364\2\3\1\365\1\3\1\366\1\3"+
    "\1\367\1\370\3\3\1\371\6\3\1\372\3\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\13\3\1\373"+
    "\13\3\22\0\2\3\5\0\4\3\1\374\1\0\2\3"+
    "\2\0\22\3\1\375\4\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\16\3\1\376\10\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\12\3\1\377\14\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\1\360"+
    "\26\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\u0100\22\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\14\3\1\u0101\12\3\22\0\2\3\5\0"+
    "\5\3\1\0\1\u0102\1\3\2\0\6\3\1\u0103\4\3"+
    "\1\u0104\13\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\14\3\1\u0105\12\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\23\3\1\u0106\3\3\22\0\2\3"+
    "\5\0\4\3\1\244\1\0\2\3\2\0\27\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\3\3\1\u0107"+
    "\23\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\1\3\1\311\25\3\22\0\2\3\5\0\5\3\1\0"+
    "\1\u0108\1\3\2\0\3\3\1\u0109\23\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\3\3\1\u010a\23\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\10\3"+
    "\1\u010b\16\3\22\0\2\3\5\0\5\3\1\0\1\u010c"+
    "\1\3\2\0\27\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\4\3\1\u010d\22\3\22\0\2\3\5\0"+
    "\3\3\1\u010e\1\3\1\0\2\3\2\0\6\3\1\107"+
    "\20\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\u010f\10\3\1\u0110\12\3\22\0\2\3\5\0"+
    "\5\3\1\0\1\u0111\1\3\2\0\6\3\1\u0112\20\3"+
    "\22\0\2\3\5\0\2\3\1\u0113\1\u0114\1\u0115\1\0"+
    "\2\3\2\0\1\u0116\3\3\1\u0117\14\3\1\u0118\5\3"+
    "\22\0\2\3\5\0\5\3\1\0\1\u0119\1\3\2\0"+
    "\1\u011a\26\3\22\0\2\3\5\0\2\3\1\u011b\1\3"+
    "\1\u011c\1\0\2\3\2\0\27\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\6\3\1\u011d\20\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\3\3\1\u011e"+
    "\23\3\22\0\2\3\5\0\4\3\1\107\1\0\2\3"+
    "\2\0\27\3\22\0\2\3\5\0\5\3\1\0\1\u011f"+
    "\1\3\2\0\6\3\1\u0120\20\3\22\0\2\3\5\0"+
    "\3\3\1\u0121\1\3\1\0\2\3\2\0\4\3\1\u0122"+
    "\22\3\22\0\2\3\5\0\4\3\1\u0123\1\0\2\3"+
    "\2\0\4\3\1\u0124\22\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\23\3\1\u0125\3\3\22\0\2\3"+
    "\5\0\3\3\1\u0126\1\u0127\1\0\2\3\2\0\27\3"+
    "\22\0\2\3\5\0\4\3\1\u0128\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\u0129\12\3\1\261\10\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\7\3\1\u012a\17\3\22\0"+
    "\2\3\5\0\5\3\1\0\1\u012b\1\3\2\0\6\3"+
    "\1\u012c\20\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\3\3\1\u012d\23\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\3\3\1\u012e\23\3\22\0\2\3"+
    "\5\0\2\3\1\311\2\3\1\0\2\3\2\0\1\3"+
    "\1\u012f\1\3\1\u0130\1\3\1\u0131\1\3\1\u0132\3\3"+
    "\1\u0133\1\u0134\12\3\22\0\2\3\5\0\5\3\1\0"+
    "\1\u0135\1\3\2\0\27\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\14\3\1\u0136\12\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\6\3\1\u0137\20\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\21\3"+
    "\1\u0138\5\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\12\3\1\u0139\6\3\1\121\5\3\22\0\2\3"+
    "\5\0\4\3\1\u013a\1\0\2\3\2\0\3\3\1\u013b"+
    "\3\3\1\u013c\4\3\1\u013d\4\3\1\u013e\5\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\23\3\1\122"+
    "\3\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\1\u013f\26\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\1\u0140\26\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\21\3\1\122\5\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\4\3\1\u0141\4\3\1\u0142"+
    "\15\3\22\0\2\3\5\0\3\3\1\u0143\1\3\1\0"+
    "\2\3\2\0\27\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\17\3\1\122\7\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\14\3\1\u0144\12\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\1\u0145\26\3"+
    "\22\0\2\3\5\0\4\3\1\u0146\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\1\u0126\26\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\6\3\1\u0147\20\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\3\3\1\121\23\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\1\u0114\5\3\1\u0148"+
    "\20\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\u0149\23\3\22\0\2\3\5\0\2\3\1\122"+
    "\2\3\1\0\2\3\2\0\27\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\15\3\1\121\11\3\22\0"+
    "\2\3\5\0\4\3\1\u011c\1\0\2\3\2\0\27\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\4\3"+
    "\1\313\22\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\2\3\1\121\1\u011e\23\3\22\0\2\3\5\0"+
    "\2\3\1\213\2\3\1\0\2\3\2\0\1\3\1\u014a"+
    "\25\3\22\0\2\3\5\0\2\3\1\u014b\2\3\1\0"+
    "\2\3\2\0\27\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\13\3\1\u014c\13\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\13\3\1\u014d\13\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\4\3\1\u0128"+
    "\22\3\22\0\2\3\5\0\5\3\1\0\1\u014e\1\3"+
    "\2\0\13\3\1\145\13\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\3\3\1\u014f\23\3\22\0\2\3"+
    "\5\0\4\3\1\u0150\1\0\2\3\2\0\4\3\1\u0151"+
    "\22\3\22\0\2\3\5\0\5\3\1\0\1\u0152\1\3"+
    "\2\0\27\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\13\3\1\360\13\3\23\0\1\u0153\1\0\1\u0154"+
    "\3\0\2\u0153\6\0\1\u0154\51\0\7\275\1\276\70\275"+
    "\1\5\1\276\62\275\1\0\2\3\5\0\4\3\1\u0155"+
    "\1\0\2\3\2\0\27\3\22\0\2\3\5\0\5\3"+
    "\1\0\1\u0156\1\3\2\0\27\3\22\0\2\3\5\0"+
    "\3\3\1\u0157\1\3\1\0\2\3\2\0\13\3\1\u0158"+
    "\13\3\22\0\2\3\5\0\5\3\1\0\1\u0159\1\3"+
    "\2\0\27\3\22\0\2\3\5\0\5\3\1\0\1\121"+
    "\1\3\2\0\7\3\1\u015a\17\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\11\3\1\u015b\15\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\13\3\1\160"+
    "\13\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\6\3\1\360\17\3\1\u015c\22\0\2\3\5\0\2\3"+
    "\1\u015d\2\3\1\0\2\3\2\0\27\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\1\u014d\26\3\22\0"+
    "\2\3\5\0\5\3\1\0\1\u0126\1\3\2\0\27\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\4\3"+
    "\1\121\22\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\16\3\1\122\10\3\22\0\2\3\5\0\2\3"+
    "\1\125\2\3\1\0\2\3\2\0\27\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\1\3\1\u0125\25\3"+
    "\22\0\2\3\5\0\5\3\1\0\1\u011c\1\3\2\0"+
    "\27\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\16\3\1\u015e\10\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\1\u011c\26\3\22\0\2\3\5\0\5\3"+
    "\1\0\1\u015f\1\3\2\0\27\3\23\0\1\u0160\1\0"+
    "\1\u0161\3\0\2\u0160\6\0\1\u0161\52\0\2\3\1\0"+
    "\1\u0162\3\0\5\3\1\0\2\3\2\0\27\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\7\3\1\u014b"+
    "\17\3\22\0\2\3\5\0\5\3\1\0\1\u0163\1\3"+
    "\2\0\4\3\1\u0164\22\3\22\0\2\3\5\0\5\3"+
    "\1\0\1\u0165\1\3\2\0\27\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\121\10\3\1\u0166"+
    "\12\3\22\0\2\3\5\0\4\3\1\u0167\1\0\2\3"+
    "\2\0\27\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\1\u0168\26\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\11\3\1\u0169\15\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\6\3\1\u016a\20\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\13\3\1\u016b"+
    "\13\3\22\0\2\3\5\0\5\3\1\0\1\u016c\1\3"+
    "\2\0\27\3\22\0\2\3\5\0\5\3\1\0\1\u016d"+
    "\1\3\2\0\27\3\22\0\2\3\5\0\4\3\1\u016e"+
    "\1\0\2\3\2\0\27\3\22\0\2\3\5\0\4\3"+
    "\1\u016f\1\0\2\3\2\0\13\3\1\u0170\13\3\22\0"+
    "\2\3\5\0\5\3\1\0\1\u0171\1\3\2\0\1\u0172"+
    "\26\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\7\3\1\u0173\17\3\22\0\2\3\5\0\5\3\1\0"+
    "\1\121\1\3\2\0\1\u0174\26\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\12\3\1\145\14\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\1\261\26\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\16\3"+
    "\1\u0175\10\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\3\3\1\u0176\3\3\1\u0177\10\3\1\121\6\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\u0178\23\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\5\3\1\u0179\21\3\22\0\2\3\5\0\4\3"+
    "\1\u017a\1\0\2\3\2\0\27\3\22\0\2\3\5\0"+
    "\2\3\1\u016a\2\3\1\0\1\121\1\3\2\0\27\3"+
    "\22\0\2\3\5\0\2\3\1\u017b\2\3\1\0\2\3"+
    "\2\0\13\3\1\u017c\13\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\16\3\1\u017d\2\3\1\121\5\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\24\3"+
    "\1\u017e\2\3\22\0\2\3\5\0\2\3\1\121\2\3"+
    "\1\0\2\3\2\0\27\3\22\0\2\3\5\0\5\3"+
    "\1\0\1\u017f\1\3\2\0\27\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\26\3\1\u0180\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\1\u0181\26\3\22\0"+
    "\2\3\5\0\4\3\1\121\1\0\2\3\2\0\1\3"+
    "\1\u0182\25\3\22\0\2\3\5\0\3\3\1\u0183\1\3"+
    "\1\0\2\3\2\0\27\3\22\0\2\3\5\0\4\3"+
    "\1\u0184\1\0\2\3\2\0\27\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\6\3\1\u0185\20\3\22\0"+
    "\2\3\5\0\5\3\1\0\1\u0186\1\3\2\0\27\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\u0187\23\3\22\0\2\3\5\0\5\3\1\0\1\u0188"+
    "\1\3\2\0\6\3\1\u0189\20\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\14\3\1\u018a\12\3\22\0"+
    "\2\3\5\0\4\3\1\u018b\1\0\2\3\2\0\27\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\7\3"+
    "\1\u018c\4\3\1\121\1\3\1\u018d\10\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\11\3\1\240\15\3"+
    "\22\0\2\3\5\0\4\3\1\u018e\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\7\3\1\u018f\17\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\7\3\1\320\17\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\5\3\1\u016f\1\3\1\u0190"+
    "\4\3\1\u0191\12\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\7\3\1\u0192\17\3\22\0\2\3\5\0"+
    "\2\3\1\240\2\3\1\0\2\3\2\0\6\3\1\u0126"+
    "\12\3\1\u0193\1\3\1\u0194\3\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\13\3\1\u0195\13\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\6\3\1\240"+
    "\20\3\22\0\2\3\5\0\5\3\1\0\1\u0126\1\3"+
    "\2\0\5\3\1\u0131\21\3\22\0\2\3\5\0\2\3"+
    "\1\u0196\2\3\1\0\2\3\2\0\27\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\13\3\1\u0197\13\3"+
    "\22\0\2\3\5\0\5\3\1\0\1\u0198\1\3\2\0"+
    "\27\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\14\3\1\u0199\12\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\4\3\1\u019a\22\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\4\3\1\u019b\7\3\1\u019c"+
    "\12\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\14\3\1\u019d\12\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\1\u019e\26\3\22\0\2\3\5\0\5\3"+
    "\1\0\1\121\1\3\2\0\3\3\1\121\3\3\1\u019f"+
    "\17\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\1\u016d\26\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\14\3\1\u0159\12\3\22\0\2\3\5\0\2\3"+
    "\1\u01a0\2\3\1\0\2\3\2\0\3\3\1\u01a1\10\3"+
    "\1\u01a2\6\3\1\u01a3\3\3\22\0\2\3\5\0\2\3"+
    "\1\240\2\3\1\0\2\3\2\0\27\3\22\0\2\3"+
    "\5\0\3\3\1\u01a4\1\u01a5\1\0\2\3\2\0\27\3"+
    "\22\0\2\3\5\0\4\3\1\u01a6\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\u01a7\22\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\5\3\1\u01a8\13\3\1\u01a9\5\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\7\3\1\u01aa"+
    "\17\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\u01ab\22\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\7\3\1\u0195\17\3\22\0\2\3\5\0"+
    "\4\3\1\121\1\0\2\3\2\0\27\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\1\240\26\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\7\3\1\u012d"+
    "\17\3\22\0\2\3\5\0\5\3\1\0\1\u01ac\1\3"+
    "\2\0\27\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\21\3\1\121\5\3\22\0\2\3\5\0\2\3"+
    "\1\120\2\3\1\0\2\3\2\0\27\3\22\0\2\3"+
    "\5\0\5\3\1\0\1\u01ad\1\3\2\0\3\3\1\u01ae"+
    "\23\3\22\0\2\3\5\0\4\3\1\u01af\1\0\1\121"+
    "\1\3\2\0\27\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\14\3\1\240\12\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\13\3\1\314\13\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\1\3\1\u01b0"+
    "\25\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\20\3\1\121\6\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\22\3\1\u01b1\4\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\20\3\1\u0148\6\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\1\u0128\26\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\22\3"+
    "\1\107\4\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\11\3\1\121\15\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\24\3\1\u01b2\2\3\22\0\2\3"+
    "\5\0\5\3\1\0\1\u01b3\1\3\2\0\13\3\1\u01b4"+
    "\13\3\22\0\2\3\5\0\5\3\1\0\1\u01b5\1\3"+
    "\2\0\6\3\1\121\20\3\22\0\2\3\5\0\3\3"+
    "\1\240\1\3\1\0\2\3\2\0\27\3\22\0\2\3"+
    "\5\0\4\3\1\u01b6\1\0\2\3\2\0\27\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\3\3\1\u01b7"+
    "\23\3\22\0\2\3\5\0\5\3\1\0\1\u01b8\1\3"+
    "\2\0\27\3\22\0\2\3\5\0\2\3\1\u01b9\2\3"+
    "\1\0\2\3\2\0\27\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\7\3\1\u01ba\17\3\22\0\2\3"+
    "\5\0\4\3\1\u01bb\1\0\2\3\2\0\27\3\22\0"+
    "\2\3\5\0\5\3\1\0\1\u01bc\1\3\2\0\27\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\14\3"+
    "\1\u01bd\12\3\22\0\2\3\5\0\5\3\1\0\1\u01be"+
    "\1\3\2\0\27\3\22\0\2\3\5\0\3\3\1\u01bf"+
    "\1\3\1\0\2\3\2\0\27\3\22\0\2\3\5\0"+
    "\3\3\1\u01c0\1\3\1\0\2\3\2\0\3\3\1\u0109"+
    "\2\3\1\u0121\20\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\14\3\1\u01c1\12\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\1\u01c2\26\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\3\3\1\u01c3\23\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\7\3"+
    "\1\122\17\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\6\3\1\245\20\3\22\0\2\3\5\0\5\3"+
    "\1\0\1\u01c4\1\3\2\0\27\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\u01c5\23\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\3\3\1\u01c6"+
    "\23\3\22\0\2\3\5\0\4\3\1\u01c7\1\0\2\3"+
    "\2\0\27\3\22\0\2\3\5\0\5\3\1\0\1\u01c8"+
    "\1\3\2\0\7\3\1\u01c9\4\3\1\u01ca\5\3\1\u01cb"+
    "\4\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\12\3\1\320\14\3\22\0\2\3\5\0\3\3\1\336"+
    "\1\3\1\0\2\3\2\0\27\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\6\3\1\121\20\3\22\0"+
    "\2\3\5\0\3\3\1\145\1\3\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\5\0\3\3\1\u016d\1\3\1\0"+
    "\2\3\2\0\27\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\3\3\1\u01cc\23\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\u01cd\23\3\22\0"+
    "\2\3\5\0\2\3\1\u01ce\2\3\1\0\2\3\2\0"+
    "\4\3\1\122\22\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\11\3\1\u01cf\15\3\22\0\2\3\5\0"+
    "\3\3\1\u01d0\1\3\1\0\2\3\2\0\27\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\7\3\1\75"+
    "\5\3\1\u0125\11\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\22\3\1\121\4\3\23\0\1\u0153\5\0"+
    "\2\u0153\61\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\13\3\1\u01d1\13\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\4\3\1\u018e\22\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\4\3\1\320\22\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\6\3\1\u01d2"+
    "\20\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\14\3\1\121\12\3\22\0\2\3\5\0\4\3\1\u01d3"+
    "\1\0\2\3\2\0\27\3\22\0\2\3\5\0\5\3"+
    "\1\0\1\u01d4\1\3\2\0\27\3\22\0\2\3\5\0"+
    "\3\3\1\122\1\3\1\0\2\3\2\0\27\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\6\3\1\u01d5"+
    "\20\3\22\0\2\3\5\0\3\3\1\u01d6\1\3\1\0"+
    "\2\3\2\0\27\3\22\0\2\3\5\0\2\3\1\u0149"+
    "\2\3\1\0\2\3\2\0\27\3\23\0\1\u0160\5\0"+
    "\2\u0160\76\0\1\u01d7\54\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\4\3\1\u01d8\22\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\1\u01be\26\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\5\3\1\u01d9\21\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\u0159\23\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\23\3\1\u011c\3\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\5\3\1\122\21\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\6\3\1\u01da\20\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\7\3"+
    "\1\u0111\17\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\6\3\1\u01db\20\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\4\3\1\u0195\22\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\3\3\1\122\23\3"+
    "\22\0\2\3\5\0\4\3\1\u01dc\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\1\u01dd\26\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\21\3\1\320\5\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\4\3\1\u01de\22\3\22\0\2\3"+
    "\5\0\3\3\1\u01df\1\3\1\0\2\3\2\0\27\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\4\3"+
    "\1\u01e0\22\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\12\3\1\u01e1\14\3\22\0\2\3\5\0\2\3"+
    "\1\u01e2\2\3\1\0\2\3\2\0\27\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\4\3\1\u01e3\6\3"+
    "\1\u01e4\13\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\6\3\1\u01e5\20\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\14\3\1\u01e6\12\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\6\3\1\u01e7\20\3"+
    "\22\0\2\3\5\0\5\3\1\0\1\u01e8\1\3\2\0"+
    "\27\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\14\3\1\u01e9\12\3\22\0\2\3\5\0\4\3\1\u0125"+
    "\1\0\2\3\2\0\27\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\16\3\1\311\10\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\7\3\1\u01ea\17\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\14\3"+
    "\1\u01eb\2\3\1\u01ec\7\3\22\0\2\3\5\0\3\3"+
    "\1\320\1\3\1\0\2\3\2\0\27\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\3\3\1\u01ed\23\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\u01ee\23\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\4\3\1\360\22\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\13\3\1\u01ef\13\3\22\0\2\3"+
    "\5\0\2\3\1\u01f0\2\3\1\0\2\3\2\0\27\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\4\3"+
    "\1\u01f1\22\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\4\3\1\u01f2\1\3\1\u01dd\20\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\4\3\1\240\22\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\20\3"+
    "\1\122\6\3\22\0\2\3\5\0\5\3\1\0\1\u01c8"+
    "\1\3\2\0\27\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\12\3\1\u01f3\14\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\6\3\1\u01f4\20\3\22\0"+
    "\2\3\5\0\3\3\1\u01f5\1\3\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\13\3\1\135\13\3\22\0\2\3\5\0\5\3\1\0"+
    "\1\u0114\1\3\2\0\27\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\13\3\1\u01f6\13\3\22\0\2\3"+
    "\5\0\5\3\1\0\1\u01f7\1\3\2\0\27\3\22\0"+
    "\2\3\5\0\1\3\1\u01f8\3\3\1\0\1\u01f9\1\3"+
    "\2\0\27\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\1\u01fa\26\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\13\3\1\u01fb\13\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\u0109\23\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\1\3\1\u01fc"+
    "\1\u01fd\1\3\1\u01fe\21\3\1\u01ff\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\6\3\1\360\20\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\3\3\1\u0200"+
    "\23\3\22\0\2\3\5\0\5\3\1\0\1\u0166\1\3"+
    "\2\0\27\3\22\0\2\3\5\0\4\3\1\u0201\1\0"+
    "\2\3\2\0\27\3\22\0\2\3\5\0\5\3\1\0"+
    "\1\u0202\1\3\2\0\27\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\6\3\1\u0126\20\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\3\3\1\u0203\23\3"+
    "\22\0\2\3\5\0\4\3\1\u0204\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\1\u0205\26\3\22\0\2\3\5\0\5\3\1\0\1\u0206"+
    "\1\3\2\0\27\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\1\u0207\12\3\1\u0208\13\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\3\3\1\u0209\23\3"+
    "\22\0\2\3\5\0\5\3\1\0\1\u0188\1\3\2\0"+
    "\27\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\21\3\1\360\5\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\1\u020a\26\3\22\0\2\3\5\0\5\3"+
    "\1\0\1\u020b\1\3\2\0\27\3\22\0\2\3\5\0"+
    "\5\3\1\0\1\u020c\1\3\2\0\27\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\13\3\1\240\13\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\20\3"+
    "\1\u020d\6\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\1\u020e\23\3\1\u01b2\2\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\u020f\23\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\13\3\1\u0210"+
    "\13\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\153\22\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\10\3\1\u0211\16\3\22\0\2\3\5\0"+
    "\4\3\1\u0212\1\0\2\3\2\0\27\3\22\0\2\3"+
    "\5\0\5\3\1\0\1\142\1\3\2\0\27\3\22\0"+
    "\2\3\5\0\4\3\1\u0213\1\0\2\3\2\0\27\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\2\3"+
    "\1\121\24\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\7\3\1\u0214\17\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\4\3\1\u0215\11\3\1\311\10\3"+
    "\22\0\2\3\5\0\3\3\1\u0216\1\3\1\0\2\3"+
    "\2\0\27\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\13\3\1\u0217\13\3\22\0\2\3\5\0\2\3"+
    "\1\u0218\2\3\1\0\2\3\2\0\4\3\1\240\22\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\u0219\23\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\11\3\1\u0142\15\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\1\u0195\26\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\1\3\1\u021a\25\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\3\3\1\u021b"+
    "\23\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\7\3\1\240\17\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\14\3\1\311\12\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\4\3\1\u021c\22\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\13\3\1\u021d"+
    "\13\3\22\0\2\3\5\0\2\3\1\u021e\2\3\1\0"+
    "\2\3\2\0\27\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\13\3\1\u021f\13\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\21\3\1\u0220\5\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\1\3\1\u015d"+
    "\25\3\22\0\2\3\5\0\5\3\1\0\1\u0221\1\3"+
    "\2\0\27\3\22\0\2\3\5\0\4\3\1\u0222\1\0"+
    "\2\3\2\0\27\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\4\3\1\u0223\22\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\1\121\5\3\1\u0216\20\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\u0111\23\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\1\u0224\26\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\10\3\1\u019c\16\3\22\0\2\3\5\0"+
    "\5\3\1\0\1\u0182\1\3\2\0\27\3\22\0\2\3"+
    "\5\0\5\3\1\0\1\u0225\1\3\2\0\27\3\22\0"+
    "\2\3\5\0\5\3\1\0\1\u0226\1\3\2\0\27\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\10\3"+
    "\1\121\16\3\22\0\2\3\5\0\2\3\1\u0227\2\3"+
    "\1\0\2\3\2\0\27\3\22\0\2\3\5\0\3\3"+
    "\1\u010e\1\3\1\0\2\3\2\0\27\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\7\3\1\u0128\17\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\22\3"+
    "\1\360\4\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\1\313\26\3\45\0\1\u0228\46\0\2\3\5\0"+
    "\2\3\1\320\2\3\1\0\2\3\2\0\27\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\3\3\1\u0229"+
    "\23\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\u022a\22\3\22\0\2\3\5\0\2\3\1\u022b"+
    "\2\3\1\0\2\3\2\0\27\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\4\3\1\122\22\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\4\3\1\u022c"+
    "\22\3\22\0\2\3\5\0\4\3\1\240\1\0\2\3"+
    "\2\0\27\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\13\3\1\u022d\13\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\1\107\26\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\6\3\1\u021f\20\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\13\3\1\u022e"+
    "\13\3\22\0\2\3\5\0\2\3\1\u01be\2\3\1\0"+
    "\2\3\2\0\27\3\22\0\2\3\5\0\2\3\1\u022f"+
    "\2\3\1\0\2\3\2\0\27\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\13\3\1\232\13\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\4\3\1\u0193"+
    "\22\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\14\3\1\u0230\12\3\22\0\2\3\5\0\4\3\1\u01a5"+
    "\1\0\2\3\2\0\1\u011b\26\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\6\3\1\u0231\20\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\3\3\1\u0232"+
    "\23\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\6\3\1\u0233\20\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\13\3\1\224\13\3\22\0\2\3\5\0"+
    "\5\3\1\0\1\u0234\1\3\2\0\27\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\7\3\1\u01bb\17\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\10\3"+
    "\1\u0235\16\3\22\0\2\3\5\0\5\3\1\0\1\u0236"+
    "\1\3\2\0\27\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\13\3\1\u01be\13\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\1\u01d4\26\3\22\0\2\3"+
    "\5\0\3\3\1\u0114\1\3\1\0\2\3\2\0\27\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\13\3"+
    "\1\u0237\13\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\14\3\1\u0109\12\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\4\3\1\224\22\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\1\u0238\26\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\1\3\1\u0239"+
    "\25\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\244\22\3\22\0\2\3\5\0\4\3\1\u023a"+
    "\1\0\2\3\2\0\27\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\1\u023b\26\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\21\3\1\u011c\5\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\6\3\1\u023c"+
    "\20\3\22\0\2\3\5\0\3\3\1\u023d\1\3\1\0"+
    "\2\3\2\0\27\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\1\u023e\26\3\22\0\2\3\5\0\2\3"+
    "\1\u023f\2\3\1\0\2\3\2\0\27\3\22\0\2\3"+
    "\5\0\5\3\1\0\1\u0240\1\3\2\0\27\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\6\3\1\125"+
    "\20\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\1\3\1\u0241\25\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\7\3\1\u01d9\17\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\13\3\1\u0242\13\3\22\0"+
    "\2\3\5\0\2\3\1\u015c\2\3\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\u0243\22\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\3\3\1\u0244\23\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\14\3\1\u0140\12\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\14\3\1\u0245"+
    "\12\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\5\3\1\u0246\21\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\7\3\1\u0247\17\3\22\0\2\3\5\0"+
    "\5\3\1\0\1\u0248\1\3\2\0\27\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\16\3\1\360\10\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\1\u0249"+
    "\26\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\6\3\1\u01d4\20\3\22\0\2\3\5\0\5\3\1\0"+
    "\1\u024a\1\3\2\0\27\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\1\u024b\26\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\14\3\1\u013a\6\3\1\320"+
    "\3\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\1\3\1\122\25\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\1\u024c\26\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\14\3\1\u024d\12\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\13\3\1\u024e\13\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\13\3"+
    "\1\u0111\13\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\4\3\1\u0125\22\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\13\3\1\u024f\13\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\6\3\1\u0250\20\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\u0251\23\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\14\3\1\u0252\12\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\1\121\26\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\21\3\1\u0253\5\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\13\3\1\u0114"+
    "\13\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\u019c\22\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\4\3\1\u0254\22\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\23\3\1\311\3\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\1\u0255\26\3"+
    "\37\0\1\u0256\54\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\13\3\1\u0257\13\3\22\0\2\3\5\0\1\3"+
    "\1\u0258\3\3\1\0\2\3\2\0\27\3\22\0\2\3"+
    "\5\0\5\3\1\0\1\120\1\3\2\0\1\u0259\26\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\5\3"+
    "\1\u024b\4\3\1\122\14\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\12\3\1\u025a\14\3\22\0\2\3"+
    "\5\0\2\3\1\u013a\2\3\1\0\2\3\2\0\27\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\1\u025b"+
    "\26\3\22\0\2\3\5\0\2\3\1\u025c\2\3\1\0"+
    "\2\3\2\0\27\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\1\126\26\3\22\0\2\3\5\0\2\3"+
    "\1\u025d\2\3\1\0\2\3\2\0\27\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\2\3\1\240\24\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\13\3"+
    "\1\u025e\13\3\22\0\2\3\5\0\2\3\1\u025f\2\3"+
    "\1\0\2\3\2\0\27\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\1\3\1\u0260\25\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\12\3\1\u0261\14\3"+
    "\22\0\2\3\5\0\3\3\1\u01dd\1\3\1\0\2\3"+
    "\2\0\27\3\22\0\2\3\5\0\5\3\1\0\1\u0262"+
    "\1\3\2\0\27\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\3\3\1\u0263\23\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\22\3\1\u0264\4\3\22\0"+
    "\2\3\5\0\5\3\1\0\1\u01fa\1\3\2\0\27\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\5\3"+
    "\1\u0159\21\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\3\3\1\u0265\23\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\4\3\1\u0266\22\3\22\0\2\3"+
    "\5\0\5\3\1\0\1\u0267\1\3\2\0\27\3\22\0"+
    "\2\3\5\0\2\3\1\u0268\2\3\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\1\u0269\26\3\22\0\2\3\5\0\5\3\1\0\1\121"+
    "\1\3\2\0\13\3\1\u0197\13\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\5\3\1\u026a\21\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\6\3\1\u0222"+
    "\20\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\u026b\23\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\2\3\1\u026c\24\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\7\3\1\u024b\17\3\22\0"+
    "\2\3\5\0\2\3\1\u026d\2\3\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\u019c\23\3\22\0\2\3\5\0\4\3\1\u026e"+
    "\1\0\2\3\2\0\27\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\13\3\1\u0181\13\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\3\3\1\u026f\23\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\u0270\23\3\22\0\2\3\5\0\2\3\1\u0271\2\3"+
    "\1\0\2\3\2\0\27\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\13\3\1\u0272\13\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\3\3\1\u0273\23\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\24\3"+
    "\1\u0274\2\3\22\0\2\3\5\0\2\3\1\u0125\2\3"+
    "\1\0\2\3\2\0\27\3\52\0\1\u0275\41\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\17\3\1\u01bb\7\3"+
    "\22\0\2\3\5\0\5\3\1\0\1\u0276\1\3\2\0"+
    "\27\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\12\3\1\u0277\14\3\22\0\2\3\5\0\3\3\1\u0278"+
    "\1\3\1\0\2\3\2\0\27\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\21\3\1\u0279\5\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\23\3\1\u01a3"+
    "\3\3\22\0\2\3\5\0\5\3\1\0\1\u027a\1\3"+
    "\2\0\27\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\16\3\1\u0239\10\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\7\3\1\302\17\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\7\3\1\u027b\17\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\14\3"+
    "\1\u027c\12\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\16\3\1\302\10\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\1\u027d\26\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\14\3\1\u027e\12\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\24\3\1\u027f"+
    "\2\3\22\0\2\3\5\0\5\3\1\0\1\120\1\3"+
    "\2\0\27\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\14\3\1\u0280\12\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\13\3\1\u0281\13\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\6\3\1\u0282\20\3"+
    "\22\0\2\3\5\0\5\3\1\0\1\u0283\1\3\2\0"+
    "\27\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\3\3\1\u0280\23\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\16\3\1\213\10\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\15\3\1\u0284\11\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\15\3\1\u0285"+
    "\11\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\7\3\1\u0286\17\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\13\3\1\u0287\13\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\2\3\1\u0288\24\3\22\0"+
    "\2\3\5\0\4\3\1\u0289\1\0\2\3\2\0\27\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\u0266\23\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\5\3\1\145\21\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\24\3\1\u028a\2\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\6\3\1\u011c\20\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\6\3"+
    "\1\u028b\20\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\14\3\1\u028c\12\3\22\0\2\3\5\0\5\3"+
    "\1\0\1\240\1\3\2\0\27\3\22\0\2\3\5\0"+
    "\3\3\1\u01bf\1\3\1\0\2\3\2\0\1\3\1\u0111"+
    "\1\3\1\u028d\23\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\3\3\1\u028e\23\3\22\0\2\3\5\0"+
    "\2\3\1\u028f\2\3\1\0\2\3\2\0\27\3\22\0"+
    "\2\3\5\0\2\3\1\315\2\3\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\u012e\22\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\7\3\1\u027b\14\3\1\u0290\2\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\1\u0291\26\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\14\3"+
    "\1\u0292\3\3\1\u0293\6\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\7\3\1\u0159\17\3\22\0\2\3"+
    "\5\0\5\3\1\0\1\u0294\1\3\2\0\27\3\22\0"+
    "\2\3\5\0\5\3\1\0\1\u0295\1\3\2\0\27\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\11\3"+
    "\1\u0296\7\3\1\u0297\5\3\22\0\2\3\5\0\4\3"+
    "\1\u01a8\1\0\2\3\2\0\27\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\6\3\1\u0298\20\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\13\3\1\u0299"+
    "\13\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\1\345\26\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\3\3\1\u0226\23\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\13\3\1\u029a\13\3\22\0\2\3"+
    "\5\0\3\3\1\u029b\1\3\1\0\2\3\2\0\27\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\13\3"+
    "\1\u029c\13\3\22\0\2\3\5\0\5\3\1\0\1\u029d"+
    "\1\3\2\0\27\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\7\3\1\u029e\17\3\22\0\2\3\5\0"+
    "\2\3\1\u01ee\2\3\1\0\2\3\2\0\27\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\6\3\1\u029f"+
    "\20\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\13\3\1\u02a0\13\3\22\0\2\3\5\0\3\3\1\u02a1"+
    "\1\3\1\0\2\3\2\0\27\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\21\3\1\u02a2\5\3\22\0"+
    "\2\3\5\0\2\3\1\u02a3\2\3\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\1\3\1\u01a9\25\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\21\3\1\u02a4\5\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\15\3\1\u02a5\11\3\22\0"+
    "\2\3\5\0\3\3\1\u02a6\1\3\1\0\2\3\2\0"+
    "\27\3\22\0\2\3\5\0\3\3\1\u0126\1\3\1\0"+
    "\2\3\2\0\27\3\22\0\2\3\5\0\2\3\1\u01a8"+
    "\2\3\1\0\2\3\2\0\27\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\4\3\1\u0140\22\3\22\0"+
    "\2\3\5\0\5\3\1\0\1\u02a7\1\3\2\0\27\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\14\3"+
    "\1\u01a3\12\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\13\3\1\u02a8\13\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\5\3\1\u02a9\21\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\3\3\1\u02aa\23\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\14\3"+
    "\1\u01eb\12\3\22\0\2\3\5\0\4\3\1\u02ab\1\0"+
    "\2\3\2\0\27\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\11\3\1\u02ac\15\3\22\0\2\3\5\0"+
    "\5\3\1\0\1\u02ad\1\3\2\0\27\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\1\u02ae\26\3\22\0"+
    "\2\3\5\0\5\3\1\0\2\3\2\0\4\3\1\u02af"+
    "\22\3\22\0\2\3\5\0\1\3\1\u02b0\3\3\1\0"+
    "\2\3\2\0\27\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\4\3\1\u02b1\22\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\1\u02b2\26\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\5\3\1\u02b3\21\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\13\3"+
    "\1\u02b4\13\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\14\3\1\u02b5\12\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\1\u02b6\26\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\3\3\1\u02b7\23\3\22\0"+
    "\2\3\5\0\5\3\1\0\1\u02b8\1\3\2\0\27\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\1\3"+
    "\1\u02b9\25\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\15\3\1\u02ba\11\3\22\0\2\3\5\0\1\3"+
    "\1\u02bb\3\3\1\0\2\3\2\0\27\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\1\3\1\u02bc\1\3"+
    "\1\u028e\23\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\1\u02bd\26\3\22\0\2\3\5\0\5\3\1\0"+
    "\1\u02be\1\3\2\0\27\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\1\3\1\u02bf\25\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\3\3\1\u02c0\23\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\1\u02c1"+
    "\26\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\1\u02c2\26\3\22\0\2\3\5\0\1\3\1\u02c3\3\3"+
    "\1\0\2\3\2\0\27\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\13\3\1\u02c4\13\3\22\0\2\3"+
    "\5\0\5\3\1\0\1\u02c5\1\3\2\0\27\3\22\0"+
    "\2\3\5\0\4\3\1\u02c6\1\0\2\3\2\0\27\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\2\3"+
    "\1\u02c7\24\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\14\3\1\u02b8\12\3\22\0\2\3\5\0\5\3"+
    "\1\0\2\3\2\0\13\3\1\u02c8\13\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\14\3\1\u02c9\12\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\3\3"+
    "\1\u02ca\23\3\22\0\2\3\5\0\5\3\1\0\2\3"+
    "\2\0\14\3\1\u02cb\12\3\22\0\2\3\5\0\1\3"+
    "\1\u02cc\3\3\1\0\2\3\2\0\27\3\22\0\2\3"+
    "\5\0\5\3\1\0\2\3\2\0\5\3\1\u02cd\21\3"+
    "\22\0\2\3\5\0\5\3\1\0\2\3\2\0\1\u02ce"+
    "\26\3\22\0\2\3\5\0\5\3\1\0\2\3\2\0"+
    "\4\3\1\u02cf\22\3\22\0\2\3\5\0\5\3\1\0"+
    "\2\3\2\0\3\3\1\u02d0\23\3\22\0\2\3\5\0"+
    "\5\3\1\0\2\3\2\0\13\3\1\320\13\3\21\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[39440];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\2\1\1\11\2\1\1\11\35\1\1\11"+
    "\6\1\1\11\1\1\1\11\1\1\1\11\1\1\2\11"+
    "\26\1\1\0\1\11\145\1\12\11\3\0\23\1\1\0"+
    "\201\1\1\0\14\1\2\0\164\1\1\0\120\1\1\0"+
    "\55\1\1\0\36\1\1\11\133\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[720];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
public String lexeme;
public int getLine() { return yyline; }
public int getColumn() { return yycolumn; }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 186) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Token yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { lexeme=yytext(); return ERROR;
            } 
            // fall through
          case 40: break;
          case 2: 
            { lexeme=yytext(); return ID;
            } 
            // fall through
          case 41: break;
          case 3: 
            { lexeme=yytext(); return INT;
            } 
            // fall through
          case 42: break;
          case 4: 
            { /*Ignore*/
            } 
            // fall through
          case 43: break;
          case 5: 
            { return MENOS;
            } 
            // fall through
          case 44: break;
          case 6: 
            { return DIV;
            } 
            // fall through
          case 45: break;
          case 7: 
            { return MULT;
            } 
            // fall through
          case 46: break;
          case 8: 
            { lexeme=yytext(); return BIT;
            } 
            // fall through
          case 47: break;
          case 9: 
            { return PUNTO;
            } 
            // fall through
          case 48: break;
          case 10: 
            { return MAS;
            } 
            // fall through
          case 49: break;
          case 11: 
            { return RES;
            } 
            // fall through
          case 50: break;
          case 12: 
            { return MENOR;
            } 
            // fall through
          case 51: break;
          case 13: 
            { return IGUAL;
            } 
            // fall through
          case 52: break;
          case 14: 
            { return MAYOR;
            } 
            // fall through
          case 53: break;
          case 15: 
            { return NOT;
            } 
            // fall through
          case 54: break;
          case 16: 
            { return PUNTO_COMA;
            } 
            // fall through
          case 55: break;
          case 17: 
            { return CORCHETE_ABIERTO;
            } 
            // fall through
          case 56: break;
          case 18: 
            { return CORCHETE_CERRADO;
            } 
            // fall through
          case 57: break;
          case 19: 
            { return PARENTESIS_ABIERTO;
            } 
            // fall through
          case 58: break;
          case 20: 
            { return PARENTESIS_CERRADO;
            } 
            // fall through
          case 59: break;
          case 21: 
            { return LLAVE_ABIERTO;
            } 
            // fall through
          case 60: break;
          case 22: 
            { return LLAVE_CERRADO;
            } 
            // fall through
          case 61: break;
          case 23: 
            { return ARROBA;
            } 
            // fall through
          case 62: break;
          case 24: 
            { return NUMERAL;
            } 
            // fall through
          case 63: break;
          case 25: 
            { lexeme=yytext(); return FLOAT;
            } 
            // fall through
          case 64: break;
          case 26: 
            { lexeme=yytext(); return COMENTARIO_M;
            } 
            // fall through
          case 65: break;
          case 27: 
            { lexeme=yytext(); return PALABRA_RESERVADA;
            } 
            // fall through
          case 66: break;
          case 28: 
            { lexeme=yytext(); return ERROR_F;
            } 
            // fall through
          case 67: break;
          case 29: 
            { lexeme=yytext(); return STRING;
            } 
            // fall through
          case 68: break;
          case 30: 
            { return MENOR_O_IGUAL;
            } 
            // fall through
          case 69: break;
          case 31: 
            { return IGUAL_A;
            } 
            // fall through
          case 70: break;
          case 32: 
            { return MAYOR_O_IGUAL;
            } 
            // fall through
          case 71: break;
          case 33: 
            { return DIFERENTE;
            } 
            // fall through
          case 72: break;
          case 34: 
            { return AND;
            } 
            // fall through
          case 73: break;
          case 35: 
            { return OR;
            } 
            // fall through
          case 74: break;
          case 36: 
            { return CORCHETES;
            } 
            // fall through
          case 75: break;
          case 37: 
            { return PARENTESIS;
            } 
            // fall through
          case 76: break;
          case 38: 
            { return LLAVES;
            } 
            // fall through
          case 77: break;
          case 39: 
            { return DOBLE_NUMERAL;
            } 
            // fall through
          case 78: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
